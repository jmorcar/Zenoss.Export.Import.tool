- action: add_eventmapping
  eventClassKey: DeltaCriticalAlarm
  eventName: DeltaCriticalAlarm-filtrada
  eventPath: /CYIIG/Delta
- action: add_eventmapping
  eventClassKey: NETLOGON_5722
  eventName: NETLOGON_5722
  eventPath: /Ignore/Win
- action: add_eventmapping
  eventClassKey: Server Administrator_1306
  eventName: Server Administrator_1306
  eventPath: /HW
- action: add_eventmapping
  eventClassKey: Storage Agents_1202
  eventName: Storage Agents_1202
  eventPath: /Storage
- action: add_eventmapping
  eventClassKey: pmta
  eventName: pmta
  eventPath: /App/Log
- action: add_eventmapping
  eventClassKey: smtp_2
  eventName: smtp_2
  eventPath: /Ignore/Win
- action: add_eventmapping
  eventClassKey: Autoenrollment_13
  eventName: Autoenrollment_13
  eventPath: /Ignore/Win
  example: Automatic certificate enrollment for local system failed to enroll for
    one Domain Controller certificate (0x80070005). Access is denied.
- action: add_eventmapping
  eventClassKey: C6KENV-SP-4-PSFANOK
  eventName: C6KENV-SP-4-PSFANOK
  eventPath: /HW/Temperature/Fan
  example: the fan in power supply 1 is OK
- action: add_eventmapping
  eventClassKey: C6KPWR-SP-2-PSFAIL
  eventName: C6KPWR-SP-2-PSFAIL
  eventPath: /HW/Power
  example: power supply 1 output failed.
- action: add_eventmapping
  eventClassKey: C6KPWR-SP-4-PSFAIL
  eventName: C6KPWR-SP-4-PSFAIL
  eventPath: /HW/Power/PowerLoss
  example: power supply 1 output failed.
- action: add_eventmapping
  eventClassKey: C6KPWR-SP-4-PSOK
  eventName: C6KPWR-SP-4-PSOK
  eventPath: /HW/Power/PowerLoss
  example: power supply 1 turned on.
- action: add_eventmapping
  eventClassKey: C6KPWR-SP-4-PSREDUNDANTBOTHSUPPLY
  eventName: C6KPWR-SP-4-PSREDUNDANTBOTHSUPPLY
  eventPath: /HW/Power
  example: in power-redundancy mode, system is operating on both power supplies.
- action: add_eventmapping
  eventClassKey: C6KPWR-SP-4-PSREDUNDANTONESUPPLY
  eventName: C6KPWR-SP-4-PSREDUNDANTONESUPPLY
  eventPath: /HW/Power/PowerLoss
  example: in power-redundancy mode, system is operating on one power supply.
- action: add_eventmapping
  eventClassKey: CPQCISSE_24597
  eventName: CPQCISSE_24597
  eventPath: /Storage
  example: 'Physical Drive on SCSI Port 1, ID 1 of


    Array Controller [Embedded] has failed.


    Failure Code: 0x0d.'
- action: add_eventmapping
  eventClassKey: CPQTeamMP_436
  eventName: CPQTeamMP_436
  eventPath: /HW/Network/AdapterDown
  example: 'HP Network Team #1: A previously failed Network Link''s receive status
    has been restored.'
- action: add_eventmapping
  eventClassKey: CPQTeamMP_449
  eventName: CPQTeamMP_449
  eventPath: /Net/Link
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: ClusSvc_1123
  eventName: ClusSvc_1123
  eventPath: /Ignore/Win
  example: The node lost communication with cluster node 'HOSTNAME' on network 'private'.
- action: add_eventmapping
  eventClassKey: ClusSvc_1125
  eventName: ClusSvc_1125
  eventPath: /Cluster/Heartbeat
  example: The interface for cluster node 'CFEMARCL2' on network 'Private' is operational
    (up).  The node can communicate with all other available cluster nodes on the
    network.
- action: add_eventmapping
  eventClassKey: ClusSvc_1128
  eventName: ClusSvc_1128
  eventPath: /Cluster/Heartbeat
  example: 'Cluster network ''Private'' is operational (up). All available server
    cluster nodes

    attached to the network can communicate using it.'
- action: add_eventmapping
  eventClassKey: DNS_3000
  eventName: DNS_3000
  eventPath: /Net/NS
  example: The DNS server has encountered numerous run-time events. To determine the
    initial cause of these run-time events, examine the DNS server event log entries
    that precede this event. To prevent the DNS server from filling the event log
    too quickly, subsequent events with Event IDs higher than 3000 will be suppressed
    until events are no longer being generated at a high rate.
- action: add_eventmapping
  eventClassKey: Dhcp_1005
  eventName: Dhcp_1005
  eventPath: /Net/Conflict
  explanation: IP Address is already in use on network - Duplicate Ips
- action: add_eventmapping
  eventClassKey: DirXML Remote Loader_1
  eventName: DirXML Remote Loader_1
  eventPath: /Ignore/Win
  example: 'Driver : \ID_VAULT\org\services\DirXML\Driver-Set\NewADDriver

    Thread : Publisher Channel

    Object : CN=Username,CN=Users,DC=domain,DC=com

    Message : Code(-9039) Element &lt;parent> does not have a valid association.<application>DirXML</application>

    <module>NewADDriver</module>

    <object-dn>CN=Username,CN=Users,DC=domain,DC=com (org\Users\username)</object-dn>

    <component>Publisher</component>'
- action: add_eventmapping
  eventClassKey: EXCDO_8263
  eventName: EXCDO_8263
  eventPath: /App/Email
  example: 'The recurring appointment expansion in mailbox Lastname, Firstname has
    taken too long. Some recurring appointment instances may not be visible at this
    time. To ensure that the calendar view is correct, please refresh the calendar
    view in Microsoft Outlook Web Access.



    For more information, click http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: EmcpBase_100
  eventName: EmcpBase_100
  eventPath: /Storage/SAN
  explanation: Fiber Channel Bus is Dead
- action: add_eventmapping
  eventClassKey: EmcpBase_106
  eventName: EmcpBase_106
  eventPath: /Storage/SAN
  explanation: Killing Fiber Channel Bus
- action: add_eventmapping
  eventClassKey: EventLog_6008
  eventName: EventLog_6008
  eventPath: /OS/Reboot
  explanation: Previous Shutdown was unexpected
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_408
  eventName: FileMaker Server 7_408
  eventPath: /App/Start
  example: FileMaker Database Engine started.
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_418
  eventName: FileMaker Server 7_418
  eventPath: /App/Start
  example: Opening database "DATABASENAME"...
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_486
  eventName: FileMaker Server 7_486
  eventPath: /App/Start
  example: FileMaker Server started.
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_94
  eventName: FileMaker Server 7_94
  eventPath: /Ignore/Win
  example: Client "CLIENTNAME" opening database "DATABASENAME" as "USERNAME".
- action: add_eventmapping
  eventClassKey: IMAService_3615
  eventName: IMAService_3615
  eventPath: /App/Citrix
  explanation: Presentation Server Failed to Connect to DataStore
- action: add_eventmapping
  eventClassKey: Kerberos_3
  eventName: Kerberos_3
  eventPath: /Ignore/Win
  example: 'A Kerberos Error Message was received: on logon session Client Time: Server
    Time: 14:57:1.0000 1/24/2006 Z Error Code: 0xd KDC_ERR_BADOPTION Extended Error:
    0xc00000bb KLIN(0) Client Realm: Client Name: Server Realm: DOMAIN Server Name:
    host/dc4.mydomain.com Target Name: host/dc4.mydomain.com@DOMAIN Error Text: File:
    9 Line: ae0 Error Data is in record data.'
- action: add_eventmapping
  eventClassKey: Kerberos_4
  eventName: Kerberos_4
  eventPath: /Ignore/Win
  example: The kerberos client received a KRB_AP_ERR_MODIFIED error from the server
    SERVERNAME$.  The target name used was cifs/hostname.mydomain.com. This indicates
    that the password used to encrypt the kerberos service ticket is different than
    that on the target server. Commonly, this is due to identically named  machine
    accounts in the target realm (DOMAIN), and the client realm.   Please contact
    your system administrator.
- action: add_eventmapping
  eventClassKey: MSExchangeDSAccess_2110
  eventName: MSExchangeDSAccess_2110
  eventPath: /Ignore/Win
  example: Process STORE.EXE (PID=2456). Could not bind to DS server smmhsdc1.mhs.med,
    error 55 at port 389.   For more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: MSExchangeDSAccess_2115
  eventName: MSExchangeDSAccess_2115
  eventPath: /Ignore/Win
  example: Process INETINFO.EXE (PID=1328). DSAccess needs to close a connection to
    the Domain Controller dc1.domain.com due to error 0x80040920.   For more information,
    click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: MSExchangeIS Mailbox Store_1029
  eventName: MSExchangeIS Mailbox Store_1029
  eventPath: /App/Email
  example: "username@domain.com failed an operation because the user did not have\
    \ the following access rights:\n\n'Delete' 'Read Property' 'Write Property' 'Create\
    \ Message' 'View Item' 'Create Subfolder' 'Write Security Descriptor' 'Write Owner'\
    \ 'Read Security Descriptor' 'Contact' \n\nThe distinguished name of the owning\
    \ mailbox is /O=My Organization/OU=DOMAIN/CN=RECIPIENTS/CN=username. The folder\
    \ ID is in the data section of this event.\n\n\nFor more information, click http://www.microsoft.com/contentredirect.asp."
- action: add_eventmapping
  eventClassKey: MSExchangeIS Mailbox Store_1173
  eventName: MSExchangeIS Mailbox Store_1173
  eventPath: /Ignore/Win
  example: Error 0x6bb deleting unused restricted view from folder 1-C8EA27F on database
    "First Storage Group\Mailbox Store (MHSMAIL1)". Microsoft Exchange Information
    Store will try to delete the view again at the next maintenance interval.   For
    more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: MSExchangeIS_9665
  eventName: MSExchangeIS_9665
  eventPath: /Win/Exchange
  example: The memory settings for this server are not optimal for Exchange. For more
    information, click http://support.microsoft.com?kbid=815372
- action: add_eventmapping
  eventClassKey: MSExchangeSA_9320
  eventName: MSExchangeSA_9320
  eventPath: /App/Email
  example: 'OALGen could not generate full details for some entries in the offline
    address list for address list ''\Global Address List''.  To see which

    entries are affected, event logging for the offline address list generator must
    be set to at least medium.


    - Default Offline Address List



    For more information, click http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: MSExchangeSA_9323
  eventName: MSExchangeSA_9323
  eventPath: /App/Email
  example: "Entry 'Nangpal, Alpana' has invalid or expired e-mail certificates.  These\
    \ certificates will not be included in the offline address list for '\\Global\
    \ Address List'.  \n\n- Default Offline Address List\n\n\nFor more information,\
    \ click http://www.microsoft.com/contentredirect.asp."
- action: add_eventmapping
  eventClassKey: MSExchangeTransport_3005
  eventName: MSExchangeTransport_3005
  eventPath: /Ignore/Win
  example: 'A non-delivery report with a status code of 4.4.6 was generated for recipient
    rfc822;wagner@vassurg.com (Message-ID <PFEHIDJJJCDMBAJGMEKGLHHEOEAA.d.peacockix@knsacs.com>).
    Cause: The maximum hop count was exceeded for this message. This non-delivery
    report can also be caused if a looping condition exists between sending and receiving
    servers that are not in the same Exchange organization. In this situation, the
    message bounces back and forth until the hop count is exceeded. A configuration
    error in the e-mail system can also cause the message to bounce between two servers
    or to be forwarded between two recipients. Solution: The maximum hop count is
    a property set on each virtual server and you can manually override it. The default
    maximum hop count is 15. Also, check for any situations that might cause loops
    between servers.'
- action: add_eventmapping
  eventClassKey: MSFTPSVC_10
  eventName: MSFTPSVC_10
  eventPath: /App/Conn
  example: User gbyam at host 68.50.179.209 has timed-out after 900 seconds of inactivity.
- action: add_eventmapping
  eventClassKey: MetaframeEvents_1106
  eventName: MetaframeEvents_1106
  eventPath: /Ignore/Win
  example: 'Client printer auto-creation failed.  The driver could not be installed.
    Possible reasons for the failure: The driver is not in the list of drivers on
    the server. The driver cannot be located. The driver has not been mapped. Client
    name: (DOMAIN-client) Printer: (Client\DOMAIN-client#\Kyocera Mita KM-1650 KX
    - 10.1.2.3)  Printer driver: (Kyocera Mita KM-1650 KX)'
- action: add_eventmapping
  eventClassKey: Microsoft ISA Server Control_15104
  eventName: Microsoft ISA Server Control_15104
  eventPath: /Net
  example: ISA Server detected a well-known port scan attack from Internet Protocol
    (IP) address 225.230.230.234. A well-known port is any port in the range of 1-2048.
    For more information about this event, see ISA Server Help.
- action: add_eventmapping
  eventClassKey: MisysReports
  eventName: MisysReports
  eventPath: /App/Failed
  example: 'tsm: /dev/tty0: 3004-034 TSM: All possible term settings tried unsuccessfully.'
- action: add_eventmapping
  eventClassKey: NETLOGON_5723
  eventName: NETLOGON_5723
  eventPath: /Ignore/Win
  example: 'The session setup from computer ''PAY-DOC1-D785'' failed because the security
    database does not contain a trust account ''PAY-DOC1-D785$'' referenced by the
    specified computer.    USER ACTION   If this is the first occurrence of this event
    for the specified computer and account, this may be a transient issue that doesn''t
    require any action at this time. Otherwise, the following steps may be taken to
    resolve this problem:    If ''PAY-DOC1-D785$'' is a legitimate machine account
    for the computer ''PAY-DOC1-D785'', then ''PAY-DOC1-D785'' should be rejoined
    to the domain.    If ''PAY-DOC1-D785$'' is a legitimate interdomain trust account,
    then the trust should be recreated.    Otherwise, assuming that ''PAY-DOC1-D785$''
    is not a legitimate account, the following action should be taken on ''PAY-DOC1-D785'':    If
    ''PAY-DOC1-D785'' is a Domain Controller, then the trust associated with ''PAY-DOC1-D785$''
    should be deleted.    If ''PAY-DOC1-D785'' is not a Domain Controller, it should
    be disjoin'
- action: add_eventmapping
  eventClassKey: NETLOGON_5805
  eventName: NETLOGON_5805
  eventPath: /Ignore/Win
  example: 'The session setup from the computer HLTHMDXTRAIN failed to authenticate.
    The following error occurred: %%5'
- action: add_eventmapping
  eventClassKey: NETLOGON_5807
  eventName: NETLOGON_5807
  eventPath: /Ignore/Win
  example: During the past 4.00 hours there have been 12 connections to this Domain
    Controller from client machines whose IP addresses don't map to any of the existing
    sites in the enterprise. Those clients, therefore, have undefined sites and may
    connect to any Domain Controller including those that are in far distant locations
    from the clients. A client's site is determined by the mapping of its subnet to
    one of the existing sites. To move the above clients to one of the sites, please
    consider creating subnet object(s) covering the above IP addresses with mapping
    to one of the existing sites. The names and IP addresses of the clients in question
    have been logged on this computer in the following log file 'SystemRoot\debug\netlogon.log'
    and, potentially, in the log file 'SystemRoot\debug\netlogon.bak' created if the
    former log becomes full. The log(s) may contain additional unrelated debugging
    information. To filter out the needed information, please search for lines which
- action: add_eventmapping
  eventClassKey: NIC Agents_1285
  eventName: NIC Agents_1285
  eventPath: /Net/Link
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Norton AntiVirus_6
  eventName: Norton AntiVirus_6
  eventPath: /App/Failed
  example: Scan could not access path C:\RECYCLER\S-1-5-21-1953108385-1836779210-1757479407-15306\Dc231.ENC
- action: add_eventmapping
  eventClassKey: Password Manager_200
  eventName: Password Manager_200
  eventPath: /Win/PWMgr
  example: Password changed There were errors changing the password for the user account
    DOMAIN\user. Password was in an invalid format
- action: add_eventmapping
  eventClassKey: Print_13
  eventName: Print_13
  eventPath: /App/Print
  example: Document 116, Remote Downlevel Document owned by fnigrin was deleted on
    BARUB1.
- action: add_eventmapping
  eventClassKey: Print_2
  eventName: Print_2
  eventPath: /Ignore/Win
  example: NT AUTHORITY\SYSTEM Printer Client\DOMAIN-client#\Color Printer - 10.1.2.3
    was created.
- action: add_eventmapping
  eventClassKey: Print_20
  eventName: Print_20
  eventPath: /Ignore/Win
  example: Printer Driver HP LaserJet 4000 Series PCL for Windows NT x86 Version-3
    was added or updated. Files:- UNIDRV.DLL, UNIDRVUI.DLL, HPLJ4000.GPD, UNIDRV.HLP,
    UNIRES.DLL, PCL5ERES.DLL, HPC4500U.DLL, TTFSUB.GPD, hplj5si.hlp, STDNAMES.GPD.
- action: add_eventmapping
  eventClassKey: Print_3
  eventName: Print_3
  eventPath: /Ignore/Win
  example: NT AUTHORITY\SYSTEM  Printer Client\DOMAIN-client#\HP Laserjet 2100 PCL
    6 - 10.1.2.3 was deleted.
- action: add_eventmapping
  eventClassKey: Print_4
  eventName: Print_4
  eventPath: /Ignore/Win
  example: NT AUTHORITY\SYSTEM  Printer Client\DOMAIN-client#\HP Laserjet 2100 PCL
    6 - 10.1.2.3 is pending deletion.
- action: add_eventmapping
  eventClassKey: Print_42
  eventName: Print_42
  eventPath: /App/Print
  example: Printer HP DeskJet 830C/832C (from IT-LAPT-A098) in session 1 was successfully
    unpublished.
- action: add_eventmapping
  eventClassKey: Print_47
  eventName: Print_47
  eventPath: /App/Print
  example: 'The Printer represented by PrintQueue LDAP://CN=Kyocera Mita KM-5035 KX,CN=COMPUTER,CN=Computers,DC=dc4,DC=com
    cannot be found: 709.'
- action: add_eventmapping
  eventClassKey: Print_8
  eventName: Print_8
  eventPath: /Ignore/Win
  example: NT AUTHORITY\SYSTEM  Printer Client\DOMAIN-client#\HP Laserjet 2100 PCL
    6 - 10.1.2.3 was purged.
- action: add_eventmapping
  eventClassKey: RadOncNS5XP
  eventName: RadOncNS5XP
  eventPath: /Ignore
  rule: evt.priority>4
- action: add_eventmapping
  eventClassKey: Remote Storage_3037
  eventName: Remote Storage_3037
  eventPath: /Ignore/Win
  example: Remote Storage failed to recall file <\\AMICASARCH\F$\DICOMImageArchive\2005\06\25\1.3.12.2.1107.5.4.4.1075.5.0.2350209711421538.zip>.
    User has hit the runaway recall limit. (0x81060016)
- action: add_eventmapping
  eventClassKey: Removable Storage Service_102
  eventName: Removable Storage Service_102
  eventPath: /Ignore/Win
  example: Unable to register COM class objects.
- action: add_eventmapping
  eventClassKey: SPANTREE_VLAN_SW-2-MAX_INSTANCE
  eventName: SPANTREE_VLAN_SW-2-MAX_INSTANCE
  eventPath: /Net/SpanTree
  example: Platform limit of 64 STP instances exceeded. No instance created for VLAN71
    (port Gi0/2).
- action: add_eventmapping
  eventClassKey: Schedule_7901
  eventName: Schedule_7901
  eventPath: /App/Job/Fail
  example: "The At1.job command failed to start due to the following error: \nGeneral\
    \ access denied error"
- action: add_eventmapping
  eventClassKey: Server Administrator_1052
  eventName: Server Administrator_1052
  eventPath: /HW/Temperature
  example: 'Temperature sensor returned to a normal value

    Sensor location: BMC Ambient Temp

    Chassis location: Main System Chassis

    Previous state was: Non-Critical (Warning)

    Temperature sensor value (in Degrees Celsius): 11.0'
- action: add_eventmapping
  eventClassKey: Server Administrator_1304
  eventName: Server Administrator_1304
  eventPath: /HW/Power
  example: 'Redundancy regained Redundancy unit: BMC PS Redundancy Chassis location:
    Main System Chassis Previous redundancy state was: Lost'
- action: add_eventmapping
  eventClassKey: Server Administrator_1352
  eventName: Server Administrator_1352
  eventPath: /HW/Power
  example: 'Power supply returned to normal Sensor location: PS 1 Status Chassis location:
    Main System Chassis Previous state was: Critical (Failed) Power Supply type: AC
    Power Supply state: Presence detected'
- action: add_eventmapping
  eventClassKey: Server Administrator_1354
  eventName: Server Administrator_1354
  eventPath: /HW/Power
  example: "Power supply detected a failure\nSensor location: PS 1 Status \nChassis\
    \ location: Main System Chassis\nPrevious state was: OK (Normal)\nPower Supply\
    \ type: AC\nPower Supply state: Presence detected, Failure detected, AC lost"
- action: add_eventmapping
  eventClassKey: Server Administrator_2124
  eventName: Server Administrator_2124
  eventPath: /HW/Store
  example: 'Redundancy normal: Virtual Disk 0 (Virtual Disk 0) Controller 0 (PERC
    4e/Di)'
- action: add_eventmapping
  eventClassKey: Server Agents_1091
  eventName: Server Agents_1091
  eventPath: /HW/Temperature
  example: 'System Information Agent: Health: The server

    is operational again.  The server has previously been shutdown due to

    a thermal anomaly and has just become operational again.'
- action: add_eventmapping
  eventClassKey: Server Agents_1118
  eventName: Server Agents_1118
  eventPath: /HW/Power
  example: 'System Information Agent: Health: The Fault

    Tolerant Power Supply Sub-system has been returned to the OK state.


    Chassis: ''0''; Bay: ''2''


    [SNMP TRAP: 6048 in CPQHLTH.MIB]'
- action: add_eventmapping
  eventClassKey: Server Agents_1125
  eventName: Server Agents_1125
  eventPath: /HW/Power
  example: 'System Information Agent: Health: The Fault Tolerant Power Supply Sub-system
    is in a failed state. Restore power or replace the failed power supply. Chassis:
    ''0''; Bay: ''2'' [SNMP TRAP: 6050 in CPQHLTH.MIB]'
- action: add_eventmapping
  eventClassKey: Server Agents_1126
  eventName: Server Agents_1126
  eventPath: /Ignore
  example: 'System Information Agent: Health: The Fault

    Tolerant Power Supply Sub-system has lost redundancy.  Restore power

    or replace any failed or missing power supplies.


    Chassis: ''0''


    [SNMP TRAP: 6032 in CPQHLTH.MIB]'
- action: add_eventmapping
  eventClassKey: Server Agents_1562
  eventName: Server Agents_1562
  eventPath: /App/Failed
  example: 'Component: System Information Agent


    Error: Unable to initialize agent on non-ProLiant system.


    Cause: The System Information Agent only operates on ProLiant systems.'
- action: add_eventmapping
  eventClassKey: Service Control Manager_7034
  eventName: Service Control Manager_7034
  eventPath: /App/Stop
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Symantec AntiVirus_6
  eventName: Symantec AntiVirus_6
  eventPath: /Ignore/Win
  example: Could not scan 492 files inside D:\Symantec SMTP 4.x\Symantec_Mail_Security_for_SMTP_4.1.9.35_Win_Sol.zip
    due to extraction errors encountered by the Decomposer Engines.
- action: add_eventmapping
  eventClassKey: Symantec Mail Security for SMTP_2
  eventName: Symantec Mail Security for SMTP_2
  eventPath: /Ignore/Win
  example: Error 0 receiving data from remote host. (80.69.58.237)
- action: add_eventmapping
  eventClassKey: TermServDevices_1106
  eventName: TermServDevices_1106
  eventPath: /Ignore/Win
  example: The printer could not be installed.
- action: add_eventmapping
  eventClassKey: TermServDevices_1111
  eventName: TermServDevices_1111
  eventPath: /Ignore/Win
  example: Driver ActiveTouch Document Loader required for printer ActiveTouch Document
    Loader is unknown. Contact the administrator to install the driver before you
    log in again.
- action: add_eventmapping
  eventClassKey: Userenv_1000
  eventName: Userenv_1000
  eventPath: /Win/NetBios
  example: Windows cannot obtain the domain controller name for your computer network.
    Return value (59).
- action: add_eventmapping
  eventClassKey: VxSvc_PercPro_509
  eventName: VxSvc_PercPro_509
  eventPath: /Storage
  explanation: PERC 3/DC Controller, Virtual Disk degraded
- action: add_eventmapping
  eventClassKey: W32Time_22
  eventName: W32Time_22
  eventPath: /Net/Time
  example: 'The time provider NtpServer encountered an error while digitally signing
    the  NTP response for peer 10.1.23.45:123.  NtpServer cannot provide secure (signed)
    time to the client and will ignore the request. The error was: The specified user
    does not exist. (0x80070525)'
- action: add_eventmapping
  eventClassKey: W3SVC_101
  eventName: W3SVC_101
  eventPath: /App/Failed
  example: 'The server was unable to add the virtual root ''/Packages/{80364610-d332-43de-b552-e3c35156edd4}''
    for the directory ''\\SERVERNAME\Packages\Cisco VPN Client\4.6'' due to the following
    error: Logon failure: unknown user name or bad password.  The data is the error
    code.


    For additional information specific to this message please visit the Microsoft
    Online Support site located at: http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: WinVNC4_1
  eventName: WinVNC4_1
  eventPath: /App/VNC
  example: 'SConnection: Assuming compatibility with version 3.3'
- action: add_eventmapping
  eventClassKey: cpqasm2_4154
  eventName: cpqasm2_4154
  eventPath: /HW/Power
  example: The power sub-system is no longer redundant.
- action: add_eventmapping
  eventClassKey: cpqasm2_4157
  eventName: cpqasm2_4157
  eventPath: /HW/Power
  example: The power sub-system is now in a redundant state.
- action: add_eventmapping
  eventClassKey: cpqasm2_4173
  eventName: cpqasm2_4173
  eventPath: /HW/Power
  example: 'Power supply #2 has failed.'
- action: add_eventmapping
  eventClassKey: cpqasm_4157
  eventName: cpqasm_4157
  eventPath: /HW/Power
  example: The Compaq System Management Driver has detected that the power sub-system
    is redundant.
- action: add_eventmapping
  eventClassKey: dirxml remote loader_1
  eventName: dirxml remote loader_1
  eventPath: /Ignore/Win
  example: '%256: \ID_VAULT\org\services\DirXML\Driver-Set\NewADDriver %257: Subscriber
    Channel %258: \ID_VAULT\org\Users\Groups\AD\MetaFrame Users %259: <ldap-err ldap-rc="68"
    ldap-rc-name="LDAP_ALREADY_EXISTS"> <client-err ldap-rc="68" ldap-rc-name="LDAP_ALREADY_EXISTS">Already
    Exists</client-err> <server-err>00000562: UpdErr: DSID-031A0F4F, problem 6005
    (ENTRY_EXISTS), data 0 </server-err> <server-err-ex win32-rc="1378"/> </ldap-err>'
- action: add_eventmapping
  eventClassKey: excdo_8206
  eventName: excdo_8206
  eventPath: /Ignore/Win
  example: Calendaring agent failed with error code 0x80070057 while saving appointment.   For
    more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: excdo_8230
  eventName: excdo_8230
  eventPath: /Ignore/Win
  example: 'An inconsistency was detected in username@domain.com: /Calendar/OR 9 Progress
    Meeting.EML.  The calendar is being repaired.  If other errors occur with this
    calendar, please view the calendar using Microsoft Outlook Web Access.  If a problem
    persists, please recreate the calendar or the containing mailbox.   For more information,
    click http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: excdo_8263
  eventName: excdo_8263
  eventPath: /Ignore/Win
  example: The recurring appointment expansion in mailbox O'Connor, Sr Aine has taken
    too long. Some recurring appointment instances may not be visible at this time.
    To ensure that the calendar view is correct, please refresh the calendar view
    in Microsoft Outlook Web Access.   For more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: general_1173
  eventName: general_1173
  eventPath: /Ignore/Win
  example: 'NT AUTHORITY\ANONYMOUS LOGON  Internal event: Active Directory has encountered
    the following exception and associated parameters.    Exception: e0010004  Parameter:
    0    Additional Data  Error value: -1603  Internal ID: 2050344'
- action: add_eventmapping
  eventClassKey: iANSMiniport_14
  eventName: iANSMiniport_14
  eventPath: /HW/Network/AdapterDown
  example: 'Secondary Adapter has rejoined the Team: Intel(R) PRO/1000 MT Network
    Connection #2'
- action: add_eventmapping
  eventClassKey: iANSMiniport_15
  eventName: iANSMiniport_15
  eventPath: /HW/Network/AdapterDown
  example: 'Adapter link up: Intel(R) PRO/1000 MB Dual Port Network Connection'
- action: add_eventmapping
  eventClassKey: iANSMiniport_17
  eventName: iANSMiniport_17
  eventPath: /HW/Network/TeamDown
  example: 'Team #0: An adapter has re-established link. Team network connection has
    been restored.'
- action: add_eventmapping
  eventClassKey: msexchangeactivesyncnotify_10306
  eventName: msexchangeactivesyncnotify_10306
  eventPath: /Ignore/Win
  example: OMA Categorizer dropped the message with message ID '<c2b7606a703bbd44940f3cd8462068f5-b3c0e6d@OMA>',
    Recipient 'username@domain.com'.  The global notifications to user specified SMTP
    addresses is disabled.
- action: add_eventmapping
  eventClassKey: msexchangeis_9554
  eventName: msexchangeis_9554
  eventPath: /Ignore/Win
  example: 'Unable to update Mailbox SD in the DS. Mailbox Guid: 5e727f25-357b-4cd9-9714-d7159348b196.
    Error Code 0x8004010f   For more information, click http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: msexchangeis_9646
  eventName: msexchangeis_9646
  eventPath: /Ignore/Win
  example: Mapi session "/o=My Organization/ou=DOMAIN/cn=Recipients/cn=username"  exceeded
    the maximum of 32 objects of type "session".   For more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: msexchangesa_5008
  eventName: msexchangesa_5008
  eventPath: /Ignore/Win
  example: The message tracking log file G:\Program Files\Exchsrvr\MHSMAILlog\20060120.log
    was deleted.   For more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: msexchangesa_9040
  eventName: msexchangesa_9040
  eventPath: /Ignore/Win
  example: NSPI Proxy encountered an error while receiving a packet. The target Domain
    Controller or the network or a client might be down. The winsock subsystem returned
    the error:[0x2746]. The circuit that received this error is being closed.   For
    more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: msexchangesa_9234
  eventName: msexchangesa_9234
  eventPath: /Ignore/Win
  example: Referral Interface was not able to find an msExchExchangeServer object
    with legacyExchangeDN '/o=My Organization/ou=DOMAIN/cn=Configuration/cn=Servers/cn=MAIL'  in
    the Active Directory.   For more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: msexchangetransport_327
  eventName: msexchangetransport_327
  eventPath: /Ignore/Win
  example: 'The following call : EcLocallyDeliverMsg to the store failed. Error code
    : -2147024891 (Message-ID <C2B7606A703BBD44940F3CD8462068F506E0DB5D@MAIL1.domain.com>
    will be NDR''d).  MDB : c423a872-af66-4188-9417-867ecd674fce. FID : b-1549FB.
    MID : 1-6E0DB5D. File : .   For more information, click http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: norton antivirus_6
  eventName: norton antivirus_6
  eventPath: /Ignore/Win
  example: Scan could not access path C:\pagefile.sys
- action: add_eventmapping
  eventClassKey: remote(pam_unix)
  eventName: remote(pam_unix)
  eventPath: /Security/Login/Fail
  example: bad username []
- action: add_eventmapping
  eventClassKey: replication_1232
  eventName: replication_1232
  eventPath: /Ignore/Win
  example: 'NT AUTHORITY\ANONYMOUS LOGON  Active Directory attempted to perform a
    remote procedure call (RPC) to the following server.  The call timed out and was
    cancelled.    Server: 56fedf38-c8c0-4328-a453-a12a8b9c08ea._msdcs.mhs.med  Call
    Timeout (Mins): 5  Thread ID: 408    Additional Data  Internal ID: 5001047'
- action: add_eventmapping
  eventClassKey: sendmail
  eventName: sendmail
  eventPath: /Ignore
  rule: evt.priority>5
- action: add_eventmapping
  eventClassKey: service_102
  eventName: service_102
  eventPath: /Ignore/Win
  example: Unable to register COM class objects.
- action: add_eventmapping
  eventClassKey: smtpsvc_5000
  eventName: smtpsvc_5000
  eventPath: /Ignore/Win
  example: The message file 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue\NTFS_609ee2d701c5f09d00099d1d.EML'  in
    the queue directory 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue' is corrupt
    and has not been enumerated.
- action: add_eventmapping
  eventClassKey: store_1025
  eventName: store_1025
  eventPath: /Ignore/Win
  example: 'An error occurred on database "First Storage Group\Public Folder Store
    (MHSMAIL1)".  Function name or description of problem: Restrict/SetSearchCriteria
    Error: -1102 Warning: fail to apply search optimization to folder (FID 1-3B3C7)   Retrying
    without optimization.   For more information, click http://www.microsoft.com/contentredirect.asp.'
- action: add_eventmapping
  eventClassKey: store_1173
  eventName: store_1173
  eventPath: /Ignore/Win
  example: Error 0x6bb deleting unused restricted view from folder 1-C604C2D on database
    "First Storage Group\Mailbox Store (MHSMAIL1)". Microsoft Exchange Information
    Store will try to delete the view again at the next maintenance interval. For
    more information, click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: store_1211
  eventName: store_1211
  eventPath: /Ignore/Win
  example: User username@domain.com used ROWLIST_REPLACE to delete all rules in folder
    1-8B9EDD6. 12 rules got deleted and 11 rules were added.   For more information,
    click http://www.microsoft.com/contentredirect.asp.
- action: add_eventmapping
  eventClassKey: termservice_1013
  eventName: termservice_1013
  eventPath: /App/Conn/Max
  example: The terminal server has exceeded the maximum number of allowed connections.
- action: add_eventmapping
  eventClassKey: xupstdOnBattery
  eventName: xupstdOnBattery
  eventPath: /HW/Power/UPS
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: .NET Runtime Optimization Service_1102
  eventName: .NET Runtime Optimization Service_1102
  eventPath: /App/Info
  example: '.NET Runtime Optimization Service (clr_optimization_v2.0.50727_32) - Succesfully
    compiled: System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Active Server Pages_9
  eventName: Active Server Pages_9
  eventPath: /App/Failed
  example: 'Warning: IIS log failed to write entry,   Script timed out. The maximum
    amount of time for a script to execute was exceeded. You can change this limit
    by specifying a new value for the property Server.ScriptTimeout or by changing
    the value in the IIS administration tools..'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Application Error_1000
  eventName: Application Error_1000
  eventPath: /App/Failed
  example: Faulting application inserverD.exe, version 5.41.2.0, faulting module ntdll.dll,
    version 5.2.3790.1830, fault address 0x0002f350.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Application Hang_1002
  eventName: Application Hang_1002
  eventPath: /App/Failed
  example: Hanging application Copy of WorkRules.exe, version 1.0.0.7, hang module
    hungapp, version 0.0.0.0, hang address 0x00000000.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Application Popup_26
  eventName: Application Popup_26
  eventPath: /App/Failed
  example: 'Application popup: Messenger Service  : Message from AMICASARCH to AMICASARCH
    on 7/5/2006 4:19:43 PM


    From:  Remote Storage on AMICASARCH

    User:   SYSTEM

    Subj:   **ADMINISTRATOR ALERT**


    Place Media "MHS805" into drive or library unit'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: AutoEnrollment_13
  eventName: AutoEnrollment_13
  eventPath: /Win/NetBios
  example: Automatic certificate enrollment for local system failed to enroll for
    one Domain Controller certificate (0x80070005). Access is denied.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: BROWSER_8021
  eventName: BROWSER_8021
  eventPath: /Win/NetBios
  example: The browser was unable to retrieve a list of servers from the browser master
    \\MHSISA on the network \Device\NetBT_Tcpip_{D160DC6C-96D6-4C96-8F04-F6FEA5E9089B}.
    The data is the error code.
  zEventAction: history
- action: add_eventmapping
  eventClassKey: BROWSER_8032
  eventName: BROWSER_8032
  eventPath: /App/Failed
  example: 'The browser service has failed to retrieve the backup list too many times
    on transport \Device\NetBT_Tcpip_{7177A0FB-FAD9-40C6-846C-FD72AAEC94A0}.

    The backup browser is stopping.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: C4K_EBM-4-HOSTFLAPPING
  eventName: C4K_EBM-4-HOSTFLAPPING
  eventPath: /Net
  example: Host 00:12:F0:77:75:83 in vlan 5 is flapping between port Fa3/5 and port
    Fa3/2
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: C6KENV-SP-4-PSFANFAILED
  eventName: C6KENV-SP-4-PSFANFAILED
  eventPath: /HW/Temperature/Fan
  example: the fan in power supply 1 has failed
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: CDP-4-DUPLEX_MISMATCH
  eventName: CDP-4-DUPLEX_MISMATCH
  eventPath: /Net
  example: duplex mismatch discovered on FastEthernet0/1 (not half duplex), with COMPUTER
    FastEthernet0 (half duplex).
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: CPQCISSE_24598
  eventName: CPQCISSE_24598
  eventPath: /HW/Store
  example: 'Logical Drive 3 of Embedded Controller has changed from status code 3
    to status code 4.


    Status Codes:


    0  = OK


    1  = FAILED


    2  = NOT CONFIGURED


    3  = INTERIM RECOVERY MODE


    4  = READY FOR RECOVERY


    5  = RECOVERING


    6  = WRONG PHYSICAL DRIVE REPLACED


    7  = PHYSICAL DRIVE NOT PROPERLY CONNECTED


    8  = HARDWARE IS OVERHEATING


    9  = HARDWARE HAS OVERHEATED


    10 = EXPANDING


    11 = NOT YET AVAILABLE


    12 = QUEUED FOR EXPANSION


    13 = UNKNOWN'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: CPQCISSE_24625
  eventName: CPQCISSE_24625
  eventPath: /HW/Store
  example: Physical Drive inserted, on Box 1 and Bay 5 of Embedded Controller.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: CPQCISSE_24644
  eventName: CPQCISSE_24644
  eventPath: /HW/Store
  example: 'Physical Drive in Box 1, Bay 5 of Embedded Controller has failed.

    Failure Code: 0x07.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: CPQTeamMP_434
  eventName: CPQTeamMP_434
  eventPath: /HW/Network/AdapterDown
  example: "HP Network Team #1: PROBLEM: A non-Primary Network Link is not receiving.\
    \ Receive-path validation has been enabled for this\nTeam by selecting the Enable\
    \ receive-path validation Heartbeat Setting. \nACTION: Please check your cabling\
    \ to the link partner. Check the switch port status, including verifying that\
    \ the\nswitch\nport is not configured as a Switch-assist Channel. Generate Broadcast\
    \ traffic\non the network to test whether these are being received. Also make\
    \ sure all teamed NICs are on the same broadcast\ndomain. Run diagnostics to test\
    \ card. Drop the NIC from the team, determine whether it is receiving broadcast\
    \ traffic\nin that configuration."
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: CROND
  eventName: CROND
  eventPath: /Ignore
  example: (root) CMD (run-parts /etc/cron.hourly)
  regex: \(root\) CMD \(run-parts /etc/cron.\S+\)
- action: add_eventmapping
  eventClassKey: CiscoAAA_5
  eventName: CiscoAAA_5
  eventPath: /Security/Auth
  example: 'CSMon Message: Service CSAuth has been suspended for a configured function
    to proceed. Monitoring will suspend until the service is restarted.'
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: Cloudmark Server Edition_2007
  eventName: Cloudmark Server Edition_2007
  eventPath: /Win/Exchange
  example: Cloudmark Server Edition cannot establish a connection to the Exchange
    server.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Cloudmark Server Edition_2011
  eventName: Cloudmark Server Edition_2011
  eventPath: /App/Failed
  example: 'Cloudmark Server Edition has exceeded its seat allocation.


    The following users will have their spam filtering disabled:


    Zacarias,  Geneva

    Zanti, Debra'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: ClusSvc_1126
  eventName: ClusSvc_1126
  eventPath: /Cluster/Heartbeat
  example: 'The interface for cluster node ''CFEMARCL2'' on network ''Private'' is
    unreachable by

    at least one other cluster node attached to the network. the server cluster was

    not able to determine the location of the failure. Look for additional

    entries in the system event log indicating which other nodes

    have lost communication with node CFEMARCL2. If the condition persists, check

    the cable connecting the node to the network. Next, check for hardware or

    software errors in the node''s network adapter. Finally, check for failures

    in any other network components to which the node is connected such as

    hubs, switches, or bridges.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: ClusSvc_1130
  eventName: ClusSvc_1130
  eventPath: /Cluster/Heartbeat
  example: 'Cluster network ''Private'' is down. None of the available nodes can communicate

    using this network. If the condition persists, check for failures in any

    network components to which the nodes are connected such as hubs, switches,

    or bridges. Next, check the cables connecting the nodes to the network.

    Finally, check for hardware or software errors in the adapters that attach

    the nodes to the network.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: ClusSvc_1135
  eventName: ClusSvc_1135
  eventPath: /Cluster
  example: 'Cluster node CFEMARCL1 was removed from the active server cluster membership.

    Cluster service may have been stopped on the node, the node may have

    failed, or the node may have lost communication with the other active

    server cluster nodes.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: DCOM_10016
  eventName: DCOM_10016
  eventPath: /Win/DCOM
  example: "The application-specific permission settings do not grant Local Activation\
    \ permission for the COM Server application with CLSID \n{0C0A3666-30C9-11D0-8F20-00805F2CD064}\n\
    \ to the user NT AUTHORITY\\NETWORK SERVICE SID (S-1-5-20).  This security permission\
    \ can be modified using the Component Services administrative tool."
  zEventAction: history
- action: add_eventmapping
  eventClassKey: DNS_6525
  eventName: DNS_6525
  eventPath: /Net/NS
  example: A zone transfer request for the secondary zone domain.com was refused by
    the master DNS server at 10.1.2.3. Check the zone at the master server 10.1.2.3
    to verify that zone transfer is enabled to this server.  To do so, use the DNS
    console, and select master server 10.1.2.3 as the applicable server, then in secondary
    zone domain.com Properties, view the settings on the Zone Transfers tab.  Based
    on the settings you choose, make any configuration adjustments there (or possibly
    in the Name Servers tab) so that a zone transfer can be made to this server.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: DNS_6527
  eventName: DNS_6527
  eventPath: /Net/NS
  example: Zone domain.com expired before it could obtain a successful zone transfer
    or update from a master server acting as its source for the zone.  The zone has
    been shut down.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: DNS_9999
  eventName: DNS_9999
  eventPath: /Net/NS
  example: 'The DNS server has encountered numerous run-time events.  These are usually

    caused by the reception of bad or unexpected packets, or from problems with

    or excessive replication traffic.  The data is the number of suppressed events

    encountered in the last 15 minute interval.'
  zEventAction: status
- action: add_eventmapping
  eventClassKey: Dell - System Update_6049
  eventName: Dell - System Update_6049
  eventPath: /HW/Management
  example: 'Update failed

    Package:  RAC_FRMW_WIN_R112124.EXE

    Description:  Dell Remote Access Controller - DRAC 4/I, Remote Access Controller
    - DRAC 4/P, v.1.35, A01

    Log file:  C:\Dell\UpdatePackage\log\RAC_FRMW_WIN_R112124.txt

    Exit code = 1 (Failure)'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: DeltaCriticalAlarm
  eventName: DeltaCriticalAlarm
  eventPath: /CYIIG/Delta
  sequence: 1
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: DeltaNonUrgentAlarm
  eventName: DeltaNonUrgentAlarm
  eventPath: /CYIIG/Delta
  sequence: 12
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: DeltaUrgentAlarm
  eventName: DeltaUrgentAlarm
  eventPath: /CYIIG/Delta
  sequence: 12
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: DhcpServer_1020
  eventName: DhcpServer_1020
  eventPath: /Net/Dhcp
  example: Scope, 10.120.75.0, is 83 percent full with only 31 IP addresses remaining.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: DhcpServer_1041
  eventName: DhcpServer_1041
  eventPath: /Net/Dhcp
  example: "The DHCP service is not servicing any clients because none of \nthe active\
    \ network interfaces have statically configured IP \naddresses, or there are no\
    \ active interfaces."
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: DirXML Remote Loader_2
  eventName: DirXML Remote Loader_2
  eventPath: /Win/AD
  example: "Driver : \\ID_VAULT\\org\\services\\DirXML\\Driver-Set\\NewADDriver\n\
    Thread : Subscriber Channel\nObject : \nMessage : Could not set password via platform\
    \ call. Err=2221 (user not found)\nThis error has been reported 1980 times in\
    \ a row since first logged."
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: EventLog_6000
  eventName: EventLog_6000
  eventPath: /App/Failed
  example: The Application log file is full.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Exchange Server 2003_4377
  eventName: Exchange Server 2003_4377
  eventPath: /Win/WindowsUpdate/Success
  example: Security Update for Exchange Server 2003 (KB916803) was installed.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_140
  eventName: FileMaker Server 7_140
  eventPath: /App/Stop
  example: Closing database "DATABASENAME"...
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_168
  eventName: FileMaker Server 7_168
  eventPath: /App/Stop
  example: Database "DATABASENAME" closed.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_22
  eventName: FileMaker Server 7_22
  eventPath: /DB/Filemaker
  example: Client "CLIENTNAME" closing a connection.
  zEventAction: history
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_30
  eventName: FileMaker Server 7_30
  eventPath: /App/Conn
  example: Client "CLIENTNAME" no longer responding; connection closed. (10.1.23.45)
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_412
  eventName: FileMaker Server 7_412
  eventPath: /App/Stop
  example: FileMaker Database Engine stopped.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_490
  eventName: FileMaker Server 7_490
  eventPath: /App/Stop
  example: FileMaker Server stopped.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_518
  eventName: FileMaker Server 7_518
  eventPath: /App/Conn
  example: 'Administrator connected: "administrator" (10.120.100.230).'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_520
  eventName: FileMaker Server 7_520
  eventPath: /App/Conn
  example: 'Administrator disconnected: "administrator".'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_601
  eventName: FileMaker Server 7_601
  eventPath: /DB/Filemaker
  example: Client "CLIENTNAME" opening database "DATABASENAME" as "USERNAME".
  zEventAction: history
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_98
  eventName: FileMaker Server 7_98
  eventPath: /DB/Filemaker
  example: Client "CLIENTNAME" closing database "DATABASENAME" as "USERNAME".
  zEventAction: history
- action: add_eventmapping
  eventClassKey: IDRbrzaccClientNumberChange
  eventName: IDRbrzaccClientNumberChange
  eventPath: /CYIIG/WimaxAlvarion
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Numero de clientes cambiado" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLParameterChangeTRAP_2
  eventName: IDRbrzaccVLParameterChangeTRAP_2
  eventPath: /CYIIG/WimaxAlvarion
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"Parametro Cambiado. Received event\
    \ $E. $# args: $*\" \nevt._action = \"history\""
- action: add_eventmapping
  eventClassKey: IDRbrzzccFrequencyChange
  eventName: IDRbrzzccFrequencyChange
  eventPath: /CYIIG/WimaxAlvarion
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Frecuencia Cambiada" '
- action: add_eventmapping
  eventClassKey: IMAService_3622
  eventName: IMAService_3622
  eventPath: /App/Citrix
  example: 'The server running MetaFrame Presentation Server failed to connect to
    the Data Store.  Error - IMA_RESULT_NETWORK_FAILURE

    An unknown failure occurred while connecting to the database.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: LINK-2-BADVCALL
  eventName: LINK-2-BADVCALL
  eventPath: /Cisco
  example: Interface FastEthernet3/6, undefined entry point
  regex: Interface (?P<component>\S+), undefined entry point
- action: add_eventmapping
  eventClassKey: LINK-3-UPDOWN
  eventName: LINK-3-UPDOWN_UP
  eventPath: /Net/Link
  example: Interface FastEthernet0/48, changed state to up
  regex: Interface (?P<component>.+), changed state to up
- action: add_eventmapping
  eventClassKey: MARK
  eventName: MARK
  eventPath: /Heartbeat
  example: -- MARK --
  regex: -- MARK --
- action: add_eventmapping
  eventClassKey: MDAC_4377
  eventName: MDAC_4377
  eventPath: /Win/WindowsUpdate/Success
  example: MDAC 2.71 Hotfix KB911562 was installed.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: MSExchangeAL_8270
  eventName: MSExchangeAL_8270
  eventPath: /Win/AD
  example: "LDAP returned the error [10] No Such Attribute when importing the transaction\
    \ \ndn: <GUID=EB3D6BE41A37084C8D306C8190A80CF0>\nchangetype: Modify\nmsExchPoliciesIncluded:delete:{FDBF7EC5-F16E-4840-805D-25D492F273E5},{3B6813EC-CE89-42BA-9442-D87D4AA30DBC}\n\
    objectGUID:EB3D6BE41A37084C8D306C8190A80CF0\n-\n\nDC=domain,DC=com\n\n\nFor more\
    \ information, click http://www.microsoft.com/contentredirect.asp."
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: MSExchangeIS Mailbox Store_1032
  eventName: MSExchangeIS Mailbox Store_1032
  eventPath: /App/Email
  example: '/o=My Organization/ou=DOMAIN/cn=Recipients/cn=vwindmil sent a message
    as /O=My Organization/OU=DOMAIN/cn=Configuration/cn=Servers/cn=MAIL1/cn=Microsoft
    Private MDB.



    For more information, click http://www.microsoft.com/contentredirect.asp.'
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: MSExchangeIS_9548
  eventName: MSExchangeIS_9548
  eventPath: /Win/AD
  example: 'Disabled user /o=My Organization/ou=DOMAIN/cn=Recipients/cn=username does
    not have a master account SID. Please use Active Directory MMC to set an active
    account as this user''s master account.



    For more information, click http://www.microsoft.com/contentredirect.asp.'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: MSExchangeMGMT_3
  eventName: MSExchangeMGMT_3
  eventPath: /Win/Exchange
  example: The Microsoft Exchange Management service has started
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: MSFTPSVC_100
  eventName: MSFTPSVC_100
  eventPath: /Security/Login/Fail
  example: 'The server was unable to logon the Windows NT account ''domain\username''
    due to the following error: Logon failure: unknown user name or bad password.  The
    data is the error code.


    For additional information specific to this message please visit the Microsoft
    Online Support site located at: http://www.microsoft.com/contentredirect.asp.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: MSSQLSERVER_17052
  eventName: MSSQLSERVER_17052
  eventPath: /DB
  example: 'Error: 0, Severity: 19, State: 0 language_exec: Process 54 generated an
    access violation. SQL Server is terminating this process.'
  explanation: Fatal DB Error
- action: add_eventmapping
  eventClassKey: MSSQLSERVER_17055
  eventName: MSSQLSERVER_17055
  eventPath: /App/Job
  example: '3041 :

    BACKUP failed to complete the command BACKUP LOG datarepo WITH NO_LOG'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: MSSQLSERVER_17177
  eventName: MSSQLSERVER_17177
  eventPath: /App/Job
  example: This instance of SQL Server has been using a process id of 1104 since 5/11/2006
    10:08:47 AM (local) 5/11/2006 2:08:47 PM (UTC).
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: MetaFrameEvents_1103
  eventName: MetaFrameEvents_1103
  eventPath: /App/Citrix
  example: 'An error occurred while retrieving client printer properties. Default
    printer properties will be used instead.

    Client name: (CLIENTNAME)

    Printer: (Microsoft Office Document Image Writer (from CLIENTNAME) in session
    1)

    Printer driver: (Microsoft Office Document Image Writer Driver)'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: MetaFrameEvents_1106
  eventName: MetaFrameEvents_1106
  eventPath: /App/Citrix
  example: 'Client printer auto-creation failed.  The driver could not be installed.
    Possible reasons for the failure:

    The driver is not in the list of drivers on the server.

    The driver cannot be located.

    The driver has not been mapped.

    Client name: (CLIENTNAME)

    Printer: (14WS on ed_server (from CLIENTNAME) in session 1)

    Printer driver: (HP LaserJet 4000 PCL 5e)'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Microsoft ISA Server Control_15105
  eventName: Microsoft ISA Server Control_15105
  eventPath: /Net
  example: 'ISA Server detected an all port scan attack from Internet Protocol (IP)
    address 195.56.77.3.


    For more information about this event, see ISA Server Help.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: MultiView License Manager_114
  eventName: MultiView License Manager_114
  eventPath: /App/Failed
  example: The Slave License Manager (CTXPS03) did not respond within the specified
    timeout period and has had its license allocation revoked
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: NETLOGON_5719
  eventName: NETLOGON_5719
  eventPath: /App/Failed
  example: "This computer was not able to set up a secure session with a domain\n\
    controller in domain DOMAIN due to the following: \nThe remote procedure call\
    \ failed and did not execute. \n\nThis may lead to authentication problems. Make\
    \ sure that this\ncomputer is connected to the network. If the problem persists,\n\
    please contact your domain administrator.\n\n\n\nADDITIONAL INFO\n\nIf this computer\
    \ is a domain controller for the specified domain, it\nsets up the secure session\
    \ to the primary domain controller emulator in the specified\ndomain. Otherwise,\
    \ this computer sets up the secure session to any domain controller\nin the specified\
    \ domain."
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: NETLOGON_5789
  eventName: NETLOGON_5789
  eventPath: /Net/NS
  example: "Attempt to update DNS Host Name of the computer object\nin Active Directory\
    \ failed. The updated value was 'hostname.domain.com'.\nThe following error occurred:\
    \ \nThe parameter is incorrect."
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: NetBT_4319
  eventName: NetBT_4319
  eventPath: /Net/Conflict
  example: A duplicate name has been detected on the TCP network. The IP address of
    the machine that sent the message is in the data. Use nbtstat -n in a command
    window to see which name is in the Conflict state.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: NtServicePack_4377
  eventName: NtServicePack_4377
  eventPath: /Win/WindowsUpdate/Success
  example: Windows Server 2003 Hotfix KB911567 was installed.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Ntfs_50
  eventName: Ntfs_50
  eventPath: /App/Job/Fail
  example: '{Delayed Write Failed}

    Windows was unable to save all the data for the file . The data has been lost.

    This error may be caused by a failure of your computer hardware or network connection.
    Please try to save this file elsewhere.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: OutlookExpress6_4377
  eventName: OutlookExpress6_4377
  eventPath: /Win/WindowsUpdate/Success
  example: Windows 2000 Hotfix KB911567-OE6SP1-20060316.165634 was installed.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Password Manager_100
  eventName: Password Manager_100
  eventPath: /Win/PWMgr
  example: User Enrolled in Password Recovery Service The user account DOMAIN\user
    has been enrolled on the password recovery service
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Print_10
  eventName: Print_10
  eventPath: /App/Print
  example: 'Document 199, Microsoft Word - May_4[1]._2006.doc owned by ed2 was printed
    on ED7 via port IP_10.120.36.202. Size in bytes: 4945300; pages printed: 2'
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: Print_15
  eventName: Print_15
  eventPath: /App/Print
  example: Form 8x13 was added.
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: Print_6161
  eventName: Print_6161
  eventPath: /App/Job/Fail
  example: 'The document Default Report Title owned by USERNAME failed to print on
    printer Client\DOMAIN-client#\10.1.2.3 - LJ 4100n. Data type: NT EMF 1.008. Size
    of the spool file in bytes: 131776. Number of bytes printed: 0. Total number of
    pages in the document: 2. Number of pages printed: 0. Client machine: \\COMPUTER.
    Win32 error code returned by the print processor: 1450.'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Print_9
  eventName: Print_9
  eventPath: /App/Print
  example: Printer printername/Session 2 was set.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: QDLT32_7
  eventName: QDLT32_7
  eventPath: /HW/Store
  example: The device, \Device\Tape0, has a bad block.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Remote Storage_4002
  eventName: Remote Storage_4002
  eventPath: /App/Failed
  example: Media <MHS809/RS-AMICASARCH-8> cannot be mounted into a drive. Media is
    not available for normal operations. (0x81010007)
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Remote Storage_6021
  eventName: Remote Storage_6021
  eventPath: /App/Failed
  example: An error was detected doing Data Transfer for <Demand Recall> on AMICASARCH\NTFS\F:.
    User cancelled the operation. (0x8101000c)
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Remote Storage_6027
  eventName: Remote Storage_6027
  eventPath: /Storage/Full
  example: An attempt was made to start or restart the job <Remote Storage Validate
    F> that is already active.
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: SNMP Informant_0
  eventName: SNMP Informant_0
  eventPath: /App/Start
  example: SNMP Informant Standard SNMP agent started
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: SNMP-3-AUTHFAIL
  eventName: SNMP-3-AUTHFAIL
  eventPath: /Security/Auth
  example: Authentication failure for SNMP req from host 10.120.100.10
  regex: Authentication failure for SNMP req from host (?P<eventKey>\S+)
- action: add_eventmapping
  eventClassKey: SNMP-3-CPUHOG
  eventName: SNMP-3-CPUHOG
  eventPath: /Net
  example: Processing GetBulk of ciscoFlashPartitionEntry.5.1.1
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: SQLSERVERAGENT_322
  eventName: SQLSERVERAGENT_322
  eventPath: /App/Job/Fail
  example: The data portion of event 19002 from MSSQLSERVER is invalid.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: SYS-3-CPUHOG
  eventName: SYS-3-CPUHOG
  eventPath: /Net
  example: Task ran for 7797 msec (0/0), process = IP SNMP, PC = 80235E3C.
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: SYS-5-CONFIG_I
  eventName: SYS-5-CONFIG_I
  eventPath: /Config
  example: Configured from console by username onvty1 (1.1.1.1)
  regex: Configured from console by (?P<username>\S+) \S+ ((?P<remoteIp>\S+))
- action: add_eventmapping
  eventClassKey: Server Administrator_1053
  eventName: Server Administrator_1053
  eventPath: /HW/Temperature
  example: 'Temperature sensor detected a warning value

    Sensor location: BMC Ambient Temp

    Chassis location: Main System Chassis

    Previous state was: OK (Normal)

    Temperature sensor value (in Degrees Celsius): 10.0'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Administrator_1404
  eventName: Server Administrator_1404
  eventPath: /HW/Memory
  example: 'Memory device status is critical

    Memory device location: DIMM2_B

    Possible memory module event cause:Single bit error logging disabled'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Administrator_2048
  eventName: Server Administrator_2048
  eventPath: /HW/Store
  example: 'Device failed:  Array Disk 0:1 Controller 0, Channel 0'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Administrator_2049
  eventName: Server Administrator_2049
  eventPath: /HW/Store
  example: 'Array disk removed:  Array Disk 0:1 Controller 0, Channel 0'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Server Administrator_2057
  eventName: Server Administrator_2057
  eventPath: /HW/Store
  example: 'Virtual disk degraded: Virtual Disk 0 (Virtual Disk 0) Controller 0 (PERC
    4e/Di)'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Administrator_2083
  eventName: Server Administrator_2083
  eventPath: /HW/Store
  example: 'Array disk Rebuild failed: Array Disk 0:1 Controller 0, Channel 0'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Administrator_2094
  eventName: Server Administrator_2094
  eventPath: /HW/Store
  example: 'Predictive Failure reported:  Array Disk 0:1 Controller 0, Channel 0'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Administrator_2123
  eventName: Server Administrator_2123
  eventPath: /HW/Store
  example: 'Redundancy lost: Virtual Disk 0 (Virtual Disk 0) Controller 0 (PERC 4e/Di)'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Server Agents_1090
  eventName: Server Agents_1090
  eventPath: /HW
  example: 'System Information Agent: Health: The server

    is operational again.  The server has previously been shutdown by the

    Automatic Server Recovery (ASR) feature and has just become operational

    again.


    [SNMP TRAP: 6025 in CPQHLTH.MIB]'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Server Agents_1130
  eventName: Server Agents_1130
  eventPath: /HW/Temperature/Fan
  example: 'System Information Agent: Health: The

    Fan Sub-system is in a failed state.  Replace

    the fan.


    Chassis: ''0''; Fan: ''1''


    [SNMP TRAP: 6036 in CPQHLTH.MIB]'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Service Control Manager_7031
  eventName: Service Control Manager_7031
  eventPath: /App/Failed
  example: 'The SNMP Service service terminated unexpectedly.  It has done this 1
    time(s).  The following corrective action will be taken in 60000 milliseconds:
    Restart the service.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Srv_2013
  eventName: Srv_2013
  eventPath: /Storage/Full
  example: 'The C: disk is at or near capacity.  You may need to delete some files.'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Srv_2019
  eventName: Srv_2019
  eventPath: /OS/Pagefile
  example: The server was unable to allocate from the system nonpaged pool because
    the pool was empty.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Srv_2020
  eventName: Srv_2020
  eventPath: /OS/Pagefile
  example: The server was unable to allocate from the system paged pool because the
    pool was empty.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Srv_2022
  eventName: Srv_2022
  eventPath: /App/Failed
  example: 'The server was unable to find a free connection 352 times in the last
    60 seconds.  This indicates a spike in

    network traffic.  If this is happening frequently, you should consider increasing
    the minimum number of free

    connections to add headroom.  To do that, modify the MinFreeConnections and MaxFreeConnections
    for the LanmanServer

    in the registry.'
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: Storage Agents_1145
  eventName: Storage Agents_1145
  eventPath: /HW/Store
  example: 'External Array Logical Drive Status Change.  Logical drive

    number 2 on array "9J36KF31J7NP" has a new status of 6.

    (Logical

    Drive status values: 1=other, 2=ok, 3=failed, 4=unconfigured,

    5=recovering, 6=readyForRebuild, 7=rebuilding, 8=wrongDrive,

    9=badConnect, 10=overheating, 11=shutdown, 12=expanding,

    13=notAvailable, 14=queuedForExpansion)

    [SNMP TRAP: 16022 in

    CPQFCA.MIB]'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Storage Agents_1146
  eventName: Storage Agents_1146
  eventPath: /HW/Store
  example: 'External Array Physical Drive Status Change.  The physical

    drive in port 1, bay 5 on array "9J36KF31J7NP" has a new status of 3.

    (Drive

    status values: 1=other, 2=unconfigured, 3=ok, 4=threshExceeded,

    5=predictiveFailure, 6=failed)

    [SNMP TRAP: 16016 in CPQFCA.MIB]'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: StorageAgents_1215
  eventName: StorageAgents_1215_up
  eventPath: /HW/Store/FiberChannel
  example: 'Fibre Channel Controller Status Change. The Fibre Channel Controller in
    Slot 3 has a new status of 2. (Host controller status values: 1=other, 2=ok, 3=failed,
    4=shutdown, 5=connectionDegraded, 6=connectionFailed) [SNMP TRAP: 16028 in CPQFCA.MIB]'
  regex: has a new status of 2
- action: add_eventmapping
  eventClassKey: Symantec AntiVirus_4
  eventName: Symantec AntiVirus_4
  eventPath: /Security/Virus
  example: Update to computer HOSTNAME of virus definition file 80209g failed. Status
    20000032
  zEventAction: history
- action: add_eventmapping
  eventClassKey: Symantec AntiVirus_46
  eventName: Symantec AntiVirus_46
  eventPath: /Security/Virus
  example: 'Security Risk Found!Threat: Trojan.Dropper in File: D:\AHSInstall\TouchWorks
    10.1.1 CD.part1.exe by: Scheduled scan.  Action: Clean failed : Delete failed.  Action
    Description: The file was left unchanged.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Symantec AntiVirus_5
  eventName: Symantec AntiVirus_5
  eventPath: /Security/Virus
  example: 'Threat Found!Threat: Trojan.Dropper in File: c:\speedtest\touchworks 10.1.1
    cd.part1.exe by: Scheduled scan.  Action: Delete succeeded.  Action Description:
    The file was deleted successfully.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Symantec AntiVirus_51
  eventName: Symantec AntiVirus_51
  eventPath: /Security/Virus
  example: 'Security Risk Found!Threat: Trojan.Dropper in File: G:\AHSInstall\TouchWorks
    10.1.1 CD.part1.exe by: Scheduled scan.  Action: Delete succeeded.  Action Description:
    The file was deleted successfully.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: TermService_1013
  eventName: TermService_1013
  eventPath: /App/Conn/Max
  example: The terminal server has exceeded the maximum number of allowed connections.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: USER32_1073
  eventName: USER32_1073
  eventPath: /App/Failed
  example: The attempt by user DOMAIN\username to restart/shutdown computer COMPUTER
    failed
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Userenv_1006
  eventName: Userenv_1006
  eventPath: /Win/AD
  example: Windows cannot bind to DOMAIN domain. (Invalid Credentials). Group Policy
    processing aborted.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Userenv_1030
  eventName: Userenv_1030
  eventPath: /Win/AD
  example: Windows cannot query for the list of Group Policy objects. Check the event
    log for possible messages previously logged by the policy engine that describes
    the reason for this.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Userenv_1517
  eventName: Userenv_1517
  eventPath: /Win/Userenv
  example: "Windows saved user DOMAIN\\administrator registry while an application\
    \ or service was still using the registry during log off. The memory used by the\
    \ user's registry has not been freed. The registry will be unloaded when it is\
    \ no longer in use. \n\n\nThis is often caused by services running as a user account,\
    \ try configuring the services to run in either the LocalService or NetworkService\
    \ account."
  zEventAction: history
- action: add_eventmapping
  eventClassKey: Userenv_1524
  eventName: Userenv_1524
  eventPath: /Win/Userenv
  example: Windows cannot unload your classes registry file - it is still in use by
    other applications or services. The file will be unloaded when it is no longer
    in use.
  zEventAction: history
- action: add_eventmapping
  eventClassKey: VxSvc_PercPro_580
  eventName: VxSvc_PercPro_580
  eventPath: /Storage
  example: PERC 3/Di Controller 0 , battery low.
  regex: PERC 3/Di Controller (?P<eventKey>\S+) , battery low.
- action: add_eventmapping
  eventClassKey: W3SVC_100
  eventName: W3SVC_100
  eventPath: /Security/Login/Fail
  example: 'The server was unable to logon the Windows NT account ''khall2'' due to
    the following error: Logon failure: unknown user name or bad password.  The data
    is the error code.


    For additional information specific to this message please visit the Microsoft
    Online Support site located at: http://www.microsoft.com/contentredirect.asp.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: WSH_0
  eventName: WSH_0
  eventPath: /App/Install
  example: 'LaunchMediSpan.vbs: Medi-Span update completed.'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: WUSyncService_101
  eventName: WUSyncService_101
  eventPath: /Win/WindowsUpdate/Failure
  example: "Software Update Services encountered a failure during synchronization.\n\
    \nView the synchronization log on this server for details of what failed during\
    \ synchronization. To view the synchronization log, go to the Software Update\
    \ Services Admin Web site (http://<YourServerName>/SUSAdmin), and click the View\
    \ synchronization log link. (Error 0x80190197: HTTP error 407. Proxy authentication\
    \ required.)\n\n\n\nUser Action \n\nTry synchronizing the server again to see\
    \ if the error occurs again. To synchronize the server, go to the Software Update\
    \ Services Admin Web site, and click the Synchronize server link. Then click the\
    \ Synchronize Now button.\n\n\n\nAdditional Data\n\nThe most common reason for\
    \ failed synchronization is incorrect proxy server configuration. If you are using\
    \ a proxy server, please confirm your configuration by going to the Software Update\
    \ Services Admin Web site and clicking the Set options link. Confirm your configuration\
    \ in the results pane.\n\n\n\nFor troubleshooting information, see the Microsoft\
    \ Software Update Services Deployment Guide (http://go.microsoft.com/fwlink/?LinkId=6928)."
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: WUSyncService_104
  eventName: WUSyncService_104
  eventPath: /App/Job
  example: 'Software Update Services successfully synchronized all content.




    Your server is completely up-to-date.




    User Action


    To view the list of files that may have been added, removed, or updated during
    this synchronization, see the synchronization log.




    To see the synchronization log, go to the Software Update Services Admin Web site
    (http://<YourServerName>/SUSAdmin), and then click the View synchronization log
    link.




    For more information about administering a server running Software Update Services,
    see the Microsoft Software Update Services Deployment Guide (http://go.microsoft.com/fwlink/?LinkId=6928).'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Windows SharePoint Services 2.0_1000
  eventName: Windows SharePoint Services 2.0_1000
  eventPath: /Win/SharePoint
  example: '#50070: Unable to connect to the database database on server.  Check the
    database connection information and make sure that the database server is running.'
  zEventAction: drop
- action: add_eventmapping
  eventClassKey: Windows Update Agent_16
  eventName: Windows Update Agent_16
  eventPath: /Win/WindowsUpdate/Failure
  example: 'Unable to Connect: Windows is unable to connect to the automatic updates
    service and therefore cannot download and install updates according to the set
    schedule. Windows will continue to try to establish a connection'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Windows Update Agent_19
  eventName: Windows Update Agent_19
  eventPath: /Win/WindowsUpdate/Success
  example: 'Installation Successful: Windows successfully installed the following
    update: Windows Malicious Software Removal Tool - May 2006 (KB890830)'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: Windows Update Agent_20
  eventName: Windows Update Agent_20
  eventPath: /Win/WindowsUpdate/Failure
  example: 'Installation Failure: Windows failed to install the following update with
    error 0x80074273: Security Update for Microsoft Data Access Components 2.8 (KB911562).'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: WindowsUpdateAgent_16
  eventName: WindowsUpdateAgent_16
  eventPath: /Win/WindowsUpdate/Failure
  example: 'Unable to Connect: Windows is unable to connect to the automatic updates
    service and therefore cannot download and install updates according to the set
    schedule. Windows will continue to try to establish a connection.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: WindowsUpdateAgent_18
  eventName: WindowsUpdateAgent_18
  eventPath: /Win/WindowsUpdate/Pending
  example: 'Installation Ready: The following updates are downloaded and ready for
    installation. This computer is currently scheduled to install these updates on
    Tuesday, April 18, 2006 at 1:00 AM: - Security Update for Windows Server 2003
    (KB908531)'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: WindowsUpdateAgent_19
  eventName: WindowsUpdateAgent_19
  eventPath: /Win/WindowsUpdate/Success
  example: 'Installation Successful: Windows successfully installed the following
    update: Security Update for Microsoft Data Access Components 2.7 Service Pack
    1 (KB911562)'
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: WindowsUpdateAgent_20
  eventName: WindowsUpdateAgent_20
  eventPath: /Win/WindowsUpdate/Failure
  example: 'Installation Failure: Windows failed to install the following update with
    error 0x80070003: Security Update for Windows Server 2003 (KB896422).'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Winlogon_1002
  eventName: Winlogon_1002
  eventPath: /Win/Shell
  example: The shell stopped unexpectedly and Explorer.exe was restarted.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Winlogon_1218
  eventName: Winlogon_1218
  eventPath: /App/Failed
  example: 'Failed to load Terminal Server Profile path.

    Note that the profile path must be less than 256 characters in length.

    User Name: Administrator

    Domain: DOMAIN'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: Winlogon_1219
  eventName: Winlogon_1219
  eventPath: /App/Failed
  example: 'Logon rejected for DOMAIN\username. Unable to obtain Terminal Server User
    Configuration.

    Error: The RPC server is unavailable.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Wins_4102
  eventName: Wins_4102
  eventPath: /Net/NS
  example: The connection was aborted by the remote WINS. Remote WINS may not be configured
    to replicate with the server.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: accessViolationHTTP
  eventName: accessViolationHTTP
  eventPath: /HW/Power/UPS
  example: snmp trap accessViolationHTTP from 10.1.2.3
  transform: " \nevt.serverity = 2\nevt.summary = 'An unsuccessful attempt to login\
    \ via HTTP.'\n"
- action: add_eventmapping
  eventClassKey: alertDrscSELNormal
  eventName: alertDrscSELNormal
  eventPath: /HW/Blade
  example: DRAC/MC-2 module sensor presence was detected.
  transform: 'evt.summary=evt.drsAlertMessage

    evt.component=evt.split()[0]'
- action: add_eventmapping
  eventClassKey: anacron
  eventName: anacron
  eventPath: /Ignore
  example: Updated timestamp for job `cron.daily' to 2005-12-13
  regex: Updated timestamp for job
- action: add_eventmapping
  eventClassKey: avrd
  eventName: avrd
  eventPath: /HW/Backup
  example: '[ID 243332 daemon.error] log sense failed on Drive2 (device 2, /dev/rmt/2cbn):
    No such file or directory (2)'
  regex: daemon.error
- action: add_eventmapping
  eventClassKey: avrd
  eventName: avrd_drop
  eventPath: /HW/Backup
  sequence: 1
  zEventAction: drop
- action: add_eventmapping
  eventClassKey: bptm
  eventName: bptm_drop
  eventPath: /HW/Backup
  sequence: 1
  zEventAction: drop
- action: add_eventmapping
  eventClassKey: cpqasm2_4111
  eventName: cpqasm2_4111
  eventPath: /HW/Temperature
  example: "Environment Abnormality Auto Shutdown (EAAS) initiated due to thermal\
    \ reasons, \neither resulting from the system overheating, or from the loss of\
    \ cooling."
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: cpqasm2_4118
  eventName: cpqasm2_4118
  eventPath: /HW/Temperature/Fan
  example: 'A required processor fan (fan #1) has failed.  Environment Abnormality
    Auto Shutdown

    (EAAS) initiated.'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: cpqcissm_11
  eventName: cpqcissm_11
  eventPath: /HW/Store
  example: The driver detected a controller error on \Device\Scsi\cpqcissm1.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping
  eventPath: /Archive
  explanation: Archive Eventlog events that have severity == debug(1)
  rule: getattr(evt, 'agent', '') == 'zeneventlog' and getattr(evt, 'severity',0)
    == 1
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping_local7
  eventPath: /Ignore
  rule: getattr(evt, 'facility', None)=="local7" and getattr(evt, 'priority', 0)>4
  sequence: 7
- action: add_eventmapping
  eventClassKey: exchange_292
  eventName: exchange_292
  eventPath: /License
  example: Virus definition and content license for Symantec Mail Security for Microsoft
    Exchange on server MHSMAILCL1 will expire on 3/14/2006.
  regex: Virus definition and content license for Symantec Mail Security for Microsoft
    Exchange on server MHSMAILCL1 will expire on (?P<eventKey>\S+).
- action: add_eventmapping
  eventClassKey: hplopts_5
  eventName: hplopts_5
  eventPath: /HW/Management
  example: iLO interface not responding. Restarting interface.
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: iANSMiniport_11
  eventName: iANSMiniport_11
  eventPath: /HW/Network/AdapterDown
  example: 'Adapter link down: Intel(R) PRO/1000 MB Dual Port Network Connection'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: iANSMiniport_13
  eventName: iANSMiniport_13
  eventPath: /HW/Network/AdapterDown
  example: The Intel(R) PRO/1000 MB Dual Port Network Connectio... has been deactivated
    from the team.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: iANSMiniport_16
  eventName: iANSMiniport_16
  eventPath: /HW/Network/TeamDown
  example: 'Team #0: The last adapter has lost link.  Team network connection has
    been lost.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: iANSMiniport_22
  eventName: iANSMiniport_22
  eventPath: /HW/Network
  example: 'Primary Adapter does not sense any Probes: Intel(R) PRO/1000 MT Network
    Connection . Possible reason: partitioned Team.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: iANSMiniport_42
  eventName: iANSMiniport_42
  eventPath: /HW/Network
  example: 'Intel(R) PRO/1000 MB Dual Port Network Connection is improperly configured.

    The adapter cannot process the remote management features and be a member of a
    network team at the same time.'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: kernel
  eventName: kernel
  eventPath: /HW/Network
  example: 'mtrr: type mismatch for f0000000,1000000 old: write-back new: write-combining'
  sequence: 2
- action: add_eventmapping
  eventClassKey: kernel
  eventName: kernel
  eventPath: /Ignore
  rule: evt.priority>4
  sequence: 1
- action: add_eventmapping
  eventClassKey: kernel
  eventName: kernel_capture_card
  eventPath: /Ignore
  example: Setting full NTSC height
  regex: 'Setting full NTSC height|Hpsc: 0x00001|ivtv: Got DMA-done'
- action: add_eventmapping
  eventClassKey: ltid
  eventName: ltid_drop
  eventPath: /HW/Backup
  sequence: 1
  zEventAction: drop
- action: add_eventmapping
  eventClassKey: msexchangetransport_3005
  eventName: msexchangetransport_3005
  eventPath: /App/Email/Loop
  example: 'A non-delivery report with a status code of 4.4.6 was generated for recipient
    rfc822;holland@hcmt.com (Message-ID <281720.5566209930204.043952489222.LALP.3314@septuagenarian>
    ). Cause: The maximum hop count was exceeded for this message. This non-delivery
    report can also be caused if a looping condition exists between sending and receiving
    servers that are not in the same Exchange organization. In this situation, the
    message bounces back and forth until the hop count is exceeded. A configuration
    error in the e-mail system can also cause the message to bounce between two servers
    or to be forwarded between two recipients. Solution: The maximum hop count is
    a property set on each virtual server and you can manually override it. The default
    maximum hop count is 15. Also, check for any situations that might cause loops
    between servers.'
  regex: 4.4.6 was generated for recipient rfc822;(?P<eventKey>\S+)
- action: add_eventmapping
  eventClassKey: noBatteries
  eventName: noBatteries
  eventPath: /HW/Power/UPS
  example: snmp trap noBatteries from 10.1.2.3
  transform: " \nevt.serverity = 2\nevt.summary = 'The UPS has no batteries attached.'\n"
- action: add_eventmapping
  eventClassKey: ntsyslog_0
  eventName: ntsyslog
  eventPath: /App/Stop
  example: Service shutdown.
  regex: Service shutdown.
- action: add_eventmapping
  eventClassKey: postfix
  eventName: postfix
  eventPath: /App/Reload
  example: succeeded
  regex: succeeded
- action: add_eventmapping
  eventClassKey: postfix/smtpd
  eventName: postfix_smtpd
  eventPath: /App/Log
  example: 'warning: 68.33.51.29: hostname pcp0010796240pcs.anapol01.md.comcast.net
    verification failed: Host not found'
  regex: 'warning: (?P<eventKey>\S+):'
- action: add_eventmapping
  eventClassKey: powerRestored
  eventName: powerRestored
  eventPath: /HW/Power/UPS
  example: snmp trap powerRestored from 10.1.2.3
  transform: " \nevt.serverity = 2\nevt.summary = '.CLEAR: SIN RED'\n"
- action: add_eventmapping
  eventClassKey: q57w2k_4
  eventName: q57w2k_4
  eventPath: /Net/Link
  explanation: 'HP Gb Server Adapter:  Network Link Down'
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: snmp_authenticationFailure
  eventName: snmp_authenticationFailure
  eventPath: /Security/Auth
  example: snmp trap snmp_authenticationFailure from 10.115.100.22
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: sshd(pam_unix)
  eventName: sshd_pam_unix
  eventPath: /Security/Conn/Open
  example: session opened for user edahl by (uid=500)
  regex: session opened for user (?P<eventKey>\S+) by \(uid=(?P<uid>\d+)\)
- action: add_eventmapping
  eventClassKey: sudo
  eventName: sudo
  eventPath: /Security/Sudo
  example: 'edahl : TTY=pts/4 ; PWD=/home/edahl ; USER=root ; COMMAND=/bin/su -'
  regex: '(?P<username>\S+) : TTY=(?P<tty>\S+) ; PWD=(?P<pwd>\S+) ; USER=(?P<targetUser>\S+)
    ; COMMAND=(?P<command>.*)'
- action: add_eventmapping
  eventClassKey: syslog
  eventName: syslog
  eventPath: /Ignore
  example: 'Time update: 20051208 18:13:13'
  regex: 'Time update:'
- action: add_eventmapping
  eventClassKey: system-config-network
  eventName: system-config-network
  eventPath: /HW/Network
  example: ln //etc/sysconfig/networking/devices//ifcfg-eth1 //etc/sysconfig/networking/profiles//default/ifcfg-eth1
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: tldcd
  eventName: tldcd_drop
  eventPath: /HW/Backup
  sequence: 2
  zEventAction: drop
- action: add_eventmapping
  eventClassKey: udhcpd
  eventName: udhcpd
  eventPath: /Net/Dhcp/Ack
  example: sending ACK of 10.2.1.100 to 00:0d:93:7e:96:7f
  regex: sending ACK of (?P<eventKey>\S+) to (?P<macaddress>\S+)
- action: add_eventmapping
  eventClassKey: ultravnc_1
  eventName: ultravnc
  eventPath: /Security/Conn/Open
  example: 29/11/2005 16:12 Connection received from 10.1.2.3
  regex: (?P<summary>Connection received from (?P<eventKey>\S+))
- action: add_eventmapping
  eventClassKey: ultravnc_3
  eventName: ultravnc
  eventPath: /Security/Conn/Close
  example: 29/11/2005 16:16 Client 10.1.2.3 disconnected
  regex: (?P<summary>Client (?P<remoteIp>\S+) disconnected)
- action: add_eventmapping
  eventClassKey: upsBatteryReplaced
  eventName: upsBatteryReplaced
  eventPath: /HW/Power/UPS
  example: 'UPS: Bad battery condition cleared.'
  transform: " \nevt.serverity = 2\nevt.summary = 'The UPS has returned from a bad\
    \ battery fault.'\n"
- action: add_eventmapping
  eventClassKey: upsDiagnosticsPassed
  eventName: upsDiagnosticsPassed
  eventPath: /HW/Power/UPS
  example: 'UPS: Passed internal self-test.'
  transform: " \nevt.serverity = 2\nevt.summary = 'SAI internal self-test OK PASADO'\n\
    \n\t\t\t\t\t\nevt._action = \"history\"\n"
- action: add_eventmapping
  eventClassKey: vmd
  eventName: vmd_drop
  eventPath: /HW/Backup
  sequence: 1
  zEventAction: drop
- action: add_eventmapping
  eventClassKey: AD WebManager_0
  eventName: AD WebManager_0
  eventPath: /Win/AD
  example: 'Modify User

    Modify user: username

    The attribute syntax specified to the directory service is invalid.'
  zEventAction: history
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: FileMaker Server 7_190
  eventName: FileMaker Server 7_190
  eventPath: /DB/Filemaker
  example: Client "COMPUTER" opening a connection from "10.1.2.3".
  zEventAction: history
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: IISSiteStatus
  eventName: IISSiteStatus
  eventPath: /Status
  example: IIS Service W3SVC_1 is in Stopped state
  sequence: 10
  transform: "import re\n\n@transact\ndef change_properties(currentstate):\n    if\
    \ getattr(component, 'status') != currentstate:\n        setattr(component, 'status',\
    \ currentstate)\n\nmsg = evt.summary\nsummaryObj = re.match(r'IIS Service (.*)\
    \ is in (.*) state(.*)', msg)\n\nchange_properties(summaryObj.group(2))"
- action: add_eventmapping
  eventClassKey: LINK-3-UPDOWN
  eventName: LINK-3-UPDOWN
  eventPath: /Net/Link
  example: Interface FastEthernet0/48, changed state to down
  regex: Interface (?P<component>\S+), changed state to down
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: LINK-3-UPDOWN
  eventName: LINK-3-UPDOWN_ADMIN_DOWN
  eventPath: /Net/Link
  example: Interface Foreign Exchange Station 0/2/0, changed state to Administrative
    Shutdown
  regex: Interface (?P<component>.+), changed state to Administrative Shutdown
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: MRxSmb_8003
  eventName: MRxSmb_8003
  eventPath: /Win/AD
  example: 'The master browser has received a server announcement from the computer
    COMPUTER

    that believes that it is the master browser for the domain on transport NetBT_Tcpip_{4E448810-5CCB.

    The master browser is stopping or an election is being forced.'
  sequence: 1
  zEventAction: history
- action: add_eventmapping
  eventClassKey: MSExchangeIS Mailbox Store_1009
  eventName: MSExchangeIS Mailbox Store_1009
  eventPath: /Security/Login
  example: 'DOMAIN\username logged on as /O=My Organization/OU=DOMAIN/cn=Recipients/cn=username
    on database "First Storage Group\Mailbox Store (MAIL1)".



    For more information, click http://www.microsoft.com/contentredirect.asp.'
  zEventAction: status
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: MSExchangeIS Mailbox Store_1011
  eventName: MSExchangeIS Mailbox Store_1011
  eventPath: /Security/Login
  example: 'NT AUTHORITY\SYSTEM logged on as /o=My Organization/ou=DOMAIN/cn=Recipients/cn=username
    on database "First Storage Group\Mailbox Store (MAIL1)", using administrator privileges.



    For more information, click http://www.microsoft.com/contentredirect.asp.'
  zEventAction: status
  zEventSeverity: 1
- action: add_eventmapping
  eventClassKey: MSExchangeIS_9646
  eventName: MSExchangeIS_9646
  eventPath: /Win/Exchange
  example: Mapi session "/o=My Organization/ou=DOMAIN/cn=Recipients/cn=username" exceeded
    the maximum of 250 objects of type "objtMessage". For more information, click
    http://www.microsoft.com/contentredirect.asp.
  regex: Mapi session "/o=My Organization/ou=DOMAIN/cn=Recipients/cn=username" exceeded
    the maximum of \d+ objects of type "objtMessage". For more information, click
    http://www.microsoft.com/contentredirect.asp.
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: MisysReports
  eventName: MisysReports
  eventPath: /OS
  example: 'syslog: Cannot send broadcast packet'
  sequence: 1
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: SQLSERVERAGENT_208
  eventName: SQLSERVERAGENT_208
  eventPath: /App/Job
  example: 'SQL Server Scheduled Job ''Transaction Log Backup Job for DB Maintenance
    Plan ''Daily'''' (0xD44F269926AD264390A4FBF23B7B50E1) - Status: Failed - Invoked
    on: 2006-03-19 21:00:01 - Message: The job failed. The Job was invoked by Schedule
    2 (Schedule 1). The last step to run was step 1 (Step 1).'
  explanation: SQL Server Scheduled Job Failed
  regex: '^SQL Server Scheduled Job ''(?P<eventKey>.*)'' \(0x\S+\) - Status: Failed'
- action: add_eventmapping
  eventClassKey: Service Control Manager_7000
  eventName: Service Control Manager_7000
  eventPath: /Status/WinService
  example: "The ImageNow Server Fax Agent 5.41 service failed to start due to the\
    \ following error: \nThe service did not start due to a logon failure."
  resolution: Check the Username and Password on the specified service to make sure
    it is correct.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: Service Control Manager_7038
  eventName: Service Control Manager_7038
  eventPath: /Status/WinService
  example: "The ImageNow Server Fax Agent 5.41 service was unable to log on as .\\\
    Administrator with the currently configured\npassword due to the following error:\
    \ \nLogon failure: unknown user name or bad password. \n\nTo ensure that the service\
    \ is\nconfigured properly, use the Services snap-in in Microsoft Management\n\
    Console (MMC)."
  resolution: Check the Username and Password on the specified service to make sure
    it is correct.
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: WindowsServiceLog
  eventName: WindowsServiceLog
  eventPath: /Status
  example: 'Service Alert: ALG has changed to Stopped state'
  sequence: 10
  transform: "import re\n\n@transact\ndef change_properties(currentstate):\n    if\
    \ getattr(component, 'state') != currentstate:\n            setattr(component,\
    \ 'state', currentstate)\n\nmsg = evt.summary\nsummaryObj = re.match(r'Service\
    \ (.*): (.*) has changed to (.*) state(.*)', msg)\n\nchange_properties(summaryObj.group(3))"
- action: add_eventmapping
  eventClassKey: alertDrscAuthError
  eventName: alertDrscAuthError
  eventPath: /HW/Blade
  example: 'Message: Web login fail.'
  transform: evt.summary=evt.drsAlertMessage
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: alertDrscSEL80percentFull
  eventName: alertDrscSEL80percentFull
  eventPath: /HW/Blade
  example: 'Message: The DRAC/MC system event log is 80% full.'
  transform: evt.summary=evt.drsAlertMessage
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: alertDrscSELCritical
  eventName: alertDrscSELCritical
  eventPath: /HW/Blade
  example: DRAC/MC-2 module sensor detected a nonrecoverable event.
  transform: 'evt.summary=evt.drsAlertMessage

    evt.component=evt.split()[0]'
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: alertDrscSELWarning
  eventName: alertDrscSELWarning
  eventPath: /HW/Blade
  example: Server-10 module sensor was removed.
  transform: 'evt.summary=evt.drsAlertMessage

    evt.component=evt.split()[0]'
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: bptm
  eventName: bptm
  eventPath: /HW/Backup/SCSI
  example: '[ID 832037 daemon.error] scsi command failed, may be timeout, scsi_pkt.us_reason
    = 5'
  regex: daemon.error
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: configChangeSNMP
  eventName: configChangeSNMP
  eventPath: /HW/Power
  example: snmp trap configChangeSNMP from 10.1.2.3
  transform: " \nevt.serverity = 2\nevt.summary = 'The SNMP configuration has been\
    \ changed.'\n"
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: DeltaRoot
  eventPath: /SNMPTraps/delta
  rule: evt.eventClassKey.startswith('DISABLEDenterprises.20246')
  sequence: 9
  transform: "txt =\"\"\nfor attr in evt.details._map.keys():\n    txt = attr + \"\
    =\" + evt.details.get(attr) + \"  |\" + txt\n    evt.summary = txt"
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: Root_ORION_BASE_MIB
  eventPath: /SNMPTraps/delta/ORION_BASE_MIB
  rule: evt.eventClassKey.startswith('DISABLEDenterprises.20246.2')
  sequence: 11
  transform: "txt =\"\"\nfor attr in evt.details._map.keys():\n    txt = attr + \"\
    =\" + evt.details.get(attr) + \"  |\" + txt\n    evt.summary = txt"
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping
  eventPath: /Cisco/FW
  example: 1313851 03/30/2006 14:01:28.540 SEV=3 SNMP/6 RPT=1026 10.1.2.3 Received
    SNMP request with unsupported community string 'public'
  regex: \d+ \S+ \S+ SEV=\d+ (?P<component>\S+) RPT=\d+ \S+ (?P<summary>Received SNMP
    .*)
  sequence: 2
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping
  eventPath: /Ignore
  example: message repeated 2 times
  regex: message repeated \d+ times
  sequence: 5
- action: add_eventmapping
  eventClassKey: diagnostic-alarm-trap-node
  eventName: diagnostic-alarm-trap-node
  eventPath: /Environ
  example: snmp trap diagnostic-alarm-trap-node from 10.1.2.3
  transform: evt.eventKey=getattr(evt,"ims-trap-chan","")
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: dropbear
  eventName: dropbear
  eventPath: /Security/Conn/Close
  example: 'exit before auth (user ''root'', 1 fails): Exited normally'
  regex: 'exit before auth \(user ''(?P<eventKey>\w+)''.*: Exited normally'
  sequence: 3
- action: add_eventmapping
  eventClassKey: dropbear
  eventName: dropbear
  eventPath: /Security/Conn/Open
  example: Child connection from 10.1.2.3:55107
  regex: Child connection from (?P<eventKey>\S+):\d+
  zEventAction: history
- action: add_eventmapping
  eventClassKey: dropbear
  eventName: dropbear
  eventPath: /Security/Login/BadPass
  example: bad password attempt for 'root'
  regex: bad password attempt for '(?P<eventKey>\w+)'
  sequence: 1
- action: add_eventmapping
  eventClassKey: dropbear
  eventName: dropbear
  eventPath: /Security/Login/Fail
  example: 'exit before auth (user ''root'', 3 fails): Max auth tries reached - user
    root'
  regex: 'exit before auth \(user ''(?P<eventKey>\S+)'', (?P<failures>\S+) fails\):
    Max auth tries reached'
  sequence: 2
- action: add_eventmapping
  eventClassKey: dropbear
  eventName: dropbear_reset
  eventPath: /Security/Conn/Close
  example: 'exit before auth: error reading: Connection reset by peer'
  regex: '^exit before auth:'
  sequence: 4
- action: add_eventmapping
  eventClassKey: environment-alarm-trap-major
  eventName: environment-alarm-trap-major
  eventPath: /Environ
  example: snmp trap environment-alarm-trap-major from 10.1.2.3
  transform: 'evt.eventKey = getattr(evt, ''ims-trap-chan'') + " " + getattr(evt,
    ''ims-trap-env-type'')

    evt.summary = evt.eventKey + " " + getattr(evt, ''ims-trap-status'')'
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: environment-alarm-trap-normal
  eventName: environment-alarm-trap-normal
  eventPath: /Environ
  example: Burk DataCenter Temperature 73.0
  explanation: These traps dedup on ims4000 channel name plus sensor type.  There
    are only two mappings one for bad (this one) and one for good (normal).
  transform: 'evt.eventKey = getattr(evt, ''ims-trap-chan'') + " " + getattr(evt,
    ''ims-trap-env-type'')

    evt.summary = evt.eventKey + " " + getattr(evt, ''ims-trap-status'')'
- action: add_eventmapping
  eventClassKey: evtsys
  eventName: evtsys
  eventPath: /Heartbeat
  regex: -- MARK --
  sequence: 1
  zEvent_timeout: 2500
- action: add_eventmapping
  eventClassKey: ltid
  eventName: ltid
  eventPath: /HW/Backup/Tape Drive
  example: '[ID 579043 daemon.error] Request for media ID MHS005 is being rejected
    because it is in a DOWN drive'
  regex: daemon.error
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: mxAlarmCritical
  eventName: mxAlarmCritical
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when an MX-ONE alarm with \nseverity 4 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  explanation: "This trap is sent when an MX-ONE alarm with \nseverity 4 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxAlarmMajor
  eventName: mxAlarmMajor
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when an MX-ONE alarm with \nseverity 3 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  explanation: "This trap is sent when an MX-ONE alarm with \nseverity 3 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxAlarmMinor
  eventName: mxAlarmMinor
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when an MX-ONE alarm with \nseverity 2 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  explanation: "This trap is sent when an MX-ONE alarm with \nseverity 2 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxAlarmOpClear
  eventName: mxAlarmOpClear
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when an MX-ONE alarm is \ncleared by the operator.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  explanation: "This trap is sent when an MX-ONE alarm is \ncleared by the operator.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxAlarmStatusChange
  eventName: mxAlarmStatusChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when the alarm status\nof the lim is changed.\n Lista\
    \ varbinds:\n   mxalFrom\n   mxalStatus"
  explanation: "This trap is sent when the alarm status\nof the lim is changed.\n\
    \ Lista varbinds:\n   mxalFrom\n   mxalStatus"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxAlarmSysClear
  eventName: mxAlarmSysClear
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when an MX-ONE alarm is \ncleared by the system (problem\
    \ gone).\n Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n \
    \  mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  explanation: "This trap is sent when an MX-ONE alarm is \ncleared by the system\
    \ (problem gone).\n Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxAlarmWarning
  eventName: mxAlarmWarning
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when an MX-ONE alarm with \nseverity 1 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  explanation: "This trap is sent when an MX-ONE alarm with \nseverity 1 is detected.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxalNoticed\n   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectBackupStatusChange
  eventName: mxObjectBackupStatusChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxalFaultCode\n\
    \   mxLimIndex"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxalFaultCode\n\
    \   mxLimIndex"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectCasBoardChange
  eventName: mxObjectCasBoardChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalSeverity\n   mxalWhere\n   mxCasBoardIndex\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalSeverity\n   mxalWhere\n   mxCasBoardIndex\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectCilChange
  eventName: mxObjectCilChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxCilIndex\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxCilIndex\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectCti1Change
  eventName: mxObjectCti1Change
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxCti1Index\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxCti1Index\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectCti3Change
  eventName: mxObjectCti3Change
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxCti3Index\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxCti3Index\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectGatewayChange
  eventName: mxObjectGatewayChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxGateWayIndex\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxGateWayIndex\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectGjuChange
  eventName: mxObjectGjuChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxGjuIndex\n   mxalNoticedNote\n   mxalFrom\n \
    \  mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxGjuIndex\n   mxalNoticedNote\n   mxalFrom\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectGsmChange
  eventName: mxObjectGsmChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxGsmIndex\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxGsmIndex\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectGsmSideChange
  eventName: mxObjectGsmSideChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalFaultCode\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxGsmActiveSide"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalFaultCode\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxGsmActiveSide"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectIcuChange
  eventName: mxObjectIcuChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxIcuIndex\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxIcuIndex\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectMgwChange
  eventName: mxObjectMgwChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxMgwIndex\n \
    \  mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxMgwIndex\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectOpiChange
  eventName: mxObjectOpiChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxOpiIndex\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxOpiIndex\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectTrunkChange
  eventName: mxObjectTrunkChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxTrunkIndex\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxTrunkIndex\n\
    \   mxalExplanation\n   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n\
    \   mxalFaultCode"
  sequence: 12
- action: add_eventmapping
  eventClassKey: mxObjectVcuChange
  eventName: mxObjectVcuChange
  eventPath: /CYIIG/MX_ONE
  example: "This trap is sent when MX-ONE status \nfor this object is changed.\n Lista\
    \ varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxalFaultCode\n\
    \   mxVcuIndex"
  explanation: "This trap is sent when MX-ONE status \nfor this object is changed.\n\
    \ Lista varbinds:\n   mxalHandle\n   mxalFrom\n   mxalNoticedNote\n   mxalExplanation\n\
    \   mxalWhere\n   mxalSeverity\n   mxObjectStatus\n   mxalNoticed\n   mxalFaultCode\n\
    \   mxVcuIndex"
  sequence: 12
- action: add_eventmapping
  eventClassKey: ntsyslog_0
  eventName: ntsyslog
  eventPath: /App/Start
  example: Service started.
  regex: Service started.
  sequence: 1
- action: add_eventmapping
  eventClassKey: passwordChange
  eventName: passwordChange
  eventPath: /HW/Power/UPS
  example: snmp trap passwordChange from 10.1.2.3
  transform: " \nevt.serverity = 2\nevt.summary = 'Someone has changed the password\
    \ on the device.'\n"
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: procmail
  eventName: procmail
  eventPath: /App/Log
  example: Descriptor 1 was not open
  regex: Descriptor 1 was not open
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: sendmail
  eventName: sendmail
  eventPath: /Config
  example: unable to qualify my own domain name (MisysReports) -- using short name
  sequence: 1
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: smtpsvc_5000
  eventName: smtpsvc_5000
  eventPath: /App/Email
  example: The message file 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue\NTFS_584fe40801c5f24800007253.EML'  in
    the queue directory 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue' is corrupt
    and has not been enumerated.
  regex: The message file '.*'  in the queue directory '(?P<eventkey>.*)' is corrupt
    and has not been enumerated.
  sequence: 1
- action: add_eventmapping
  eventClassKey: sshd
  eventName: sshd
  eventPath: /Security/Login/BadPass
  example: Failed password for username from 10.1.2.3 port 53529 ssh2
  regex: Failed password for (?P<eventKey>\S+) from (?P<remoteIp>\S+) port (?P<remotePort>\d+)
    (?P<protocol>\S+)
  sequence: 1
- action: add_eventmapping
  eventClassKey: sshd(pam_unix)
  eventName: sshd_pam_unix
  eventPath: /Security/Conn/Close
  example: session closed for user edahl
  regex: session closed for user (?P<eventKey>\S+)
  sequence: 1
- action: add_eventmapping
  eventClassKey: tldcd
  eventName: tldcd
  eventPath: /HW/Backup/Tape Media
  example: '[ID 183166 daemon.error] TLD(0) key = 0x5, asc = 0x3a, ascq = 0x0, MEDIUM
    NOT PRESENT'
  regex: daemon.error.*MEDIUM NOT PRESENT
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: udhcpc
  eventName: udhcpc
  eventPath: /Net/Dhcp/Obtained
  example: Lease of 68.33.51.29 obtained, lease time 343822
  regex: Lease of (?P<eventKey>\S+) obtained, lease time (?P<leaseTime>\d+)
  sequence: 1
- action: add_eventmapping
  eventClassKey: udhcpd
  eventName: udhcpd
  eventPath: /Net/Dhcp/Request
  example: received REQUEST for 10.2.1.100 from 00:0d:93:7e:96:7f
  regex: received REQUEST for (?P<eventKey>\S+) from (?P<macaddress>\S+)
  sequence: 1
- action: add_eventmapping
  eventClassKey: upsBatteryNeedsReplacement
  eventName: upsBatteryNeedsReplacement
  eventPath: /HW/Power/UPS
  example: snmp trap upsBatteryNeedsReplacement from 10.1.2.3
  transform: " \nevt.serverity = 2\nevt.summary = 'Baterias de la SAI en mal estado\
    \ (necesitan remplazarse)'\n"
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: upsDiagnosticsFailed
  eventName: upsDiagnosticsFailed
  eventPath: /HW/Power/UPS
  example: 'UPS: Failed internal diagnostic self-test.'
  transform: " \nevt.serverity = 4\nevt.summary = 'FALLO de internal self-test'\n"
  zEventSeverity: 3
- action: add_eventmapping
  eventClassKey: APCabnormalCondition
  eventName: APCabnormalCondition
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An abnormal condition has been detected.\nThe first variable is\
    \ the fault condition.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: An abnormal condition has been detected.\nThe first variable\
    \ is the fault condition.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An abnormal condition has been detected.'\n"
- action: add_eventmapping
  eventClassKey: APCabnormalConditionCleared
  eventName: APCabnormalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An abnormal condition has been cleared.\nThe first variable\
    \ is the fault condition.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An abnormal condition has been cleared.\nThe first\
    \ variable is the fault condition.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An abnormal condition has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCaccessViolationConsole
  eventName: APCaccessViolationConsole
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Someone has attempted to login via the console with the incorrect\
    \ password.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: Someone has attempted to login via the console with the incorrect\
    \ password.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Three unsuccessful logins have been\
    \ attempted via the console.'\n"
- action: add_eventmapping
  eventClassKey: APCaccessViolationHTTP
  eventName: APCaccessViolationHTTP
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Someone has attempted to login via HTTP with the incorrect password.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: Someone has attempted to login via HTTP with the incorrect\
    \ password.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An unsuccessful attempt to login\
    \ via HTTP.'\n"
- action: add_eventmapping
  eventClassKey: APCairCriticalCondition
  eventName: APCairCriticalCondition
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An Air critical condition was detected.\nThe first variable is\
    \ the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: An Air critical condition was detected.\nThe first variable\
    \ is the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A critical condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCairCriticalConditionCleared
  eventName: APCairCriticalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Air critical condition was cleared.\nThe first variable\
    \ is the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An Air critical condition was cleared.\nThe first variable\
    \ is the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A critical condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCairInformationalCondition
  eventName: APCairInformationalCondition
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Air informational condition was detected.\nThe first\
    \ variable is the error condition text message.\nThe second variable is the error\
    \ number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An Air informational condition was detected.\nThe first\
    \ variable is the error condition text message.\nThe second variable is the error\
    \ number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCairInformationalConditionCleared
  eventName: APCairInformationalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Air informational condition was cleared.\nThe first\
    \ variable is the error condition text message.\nThe second variable is the error\
    \ number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An Air informational condition was cleared.\nThe first\
    \ variable is the error condition text message.\nThe second variable is the error\
    \ number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCairWarningCondition
  eventName: APCairWarningCondition
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An Air warning condition was detected.\nThe first variable is\
    \ the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "WARNING: An Air warning condition was detected.\nThe first variable\
    \ is the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCairWarningConditionCleared
  eventName: APCairWarningConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An Air warning condition was cleared.\nThe first variable is\
    \ the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "WARNING: An Air warning condition was cleared.\nThe first variable\
    \ is the error condition text message.\nThe second variable is the error number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAdConverterFault
  eventName: APCapcAdConverterFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The A/D converter fault exists.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The A/D converter fault exists.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The A/D converter fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAdConverterFaultCleared
  eventName: APCapcAdConverterFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The A/D converter fault cleared.\n Lista varbinds:\n  \
    \ mtrapargsString"
  explanation: "INFORMATIONAL: The A/D converter fault cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The A/D converter fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputHighThresholdViolation
  eventName: APCapcAnalogInputHighThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: High threshold violated on an analog input. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ input number. \nThe fifth argument is the input name.\n Lista varbinds:\n  \
    \ mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: High threshold violated on an analog input. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ input number. \nThe fifth argument is the input name.\n Lista varbinds:\n  \
    \ mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High threshold violation on input.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputHighThresholdViolationCleared
  eventName: APCapcAnalogInputHighThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High threshold violation cleared on the analog input. \n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the input number. \nThe fifth argument is the input name.\n\
    \ Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: High threshold violation cleared on the analog input.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input number. \nThe fifth argument is the input\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High threshold violation cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputLowThresholdViolation
  eventName: APCapcAnalogInputLowThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Low threshold violated on an analog input. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ input number. \nThe fifth argument is the input name.\n Lista varbinds:\n  \
    \ mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: Low threshold violated on an analog input. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ input number. \nThe fifth argument is the input name.\n Lista varbinds:\n  \
    \ mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low threshold violation on input.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputLowThresholdViolationCleared
  eventName: APCapcAnalogInputLowThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low threshold violation cleared on the analog input. \n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the input number. \nThe fifth argument is the input name.\n\
    \ Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Low threshold violation cleared on the analog input.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input number. \nThe fifth argument is the input\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low threshold violation cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputMaxThresholdViolation
  eventName: APCapcAnalogInputMaxThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Maximum threshold violated on an analog input. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ input number. \nThe fifth argument is the input name.\n Lista varbinds:\n  \
    \ mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Maximum threshold violated on an analog input. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the input number. \nThe fifth argument is the input name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max threshold violation on input.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputMaxThresholdViolationCleared
  eventName: APCapcAnalogInputMaxThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Maximum threshold violation cleared on the analog input.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input number. \nThe fifth argument is the input\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Maximum threshold violation cleared on the analog input.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input number. \nThe fifth argument is the input\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max threshold violation cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputMinThresholdViolation
  eventName: APCapcAnalogInputMinThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Minimum threshold violated on an analog input. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ input number. \nThe fifth argument is the input name.\n Lista varbinds:\n  \
    \ mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Minimum threshold violated on an analog input. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the input number. \nThe fifth argument is the input name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min threshold violation on input.'\n"
- action: add_eventmapping
  eventClassKey: APCapcAnalogInputMinThresholdViolationCleared
  eventName: APCapcAnalogInputMinThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Minimum threshold violation cleared on the analog input.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input number. \nThe fifth argument is the input\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Minimum threshold violation cleared on the analog input.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input number. \nThe fifth argument is the input\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min threshold violation cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcBeaconConnected
  eventName: APCapcBeaconConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A beacon has been connected to the device.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number.\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: A beacon has been connected to the device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon Connected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcBeaconDisconnected
  eventName: APCapcBeaconDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A beacon has been disconnected from the device.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: A beacon has been disconnected from the device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon Disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcBeaconOff
  eventName: APCapcBeaconOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A beacon has gone off (deactivated).\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: A beacon has gone off (deactivated).\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon Off.'\n"
- action: add_eventmapping
  eventClassKey: APCapcBeaconOn
  eventName: APCapcBeaconOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A beacon has gone on (activated).\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: A beacon has gone on (activated).\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon On.'\n"
- action: add_eventmapping
  eventClassKey: APCapcCriticalDiscreteInputContactStateAbnormal
  eventName: APCapcCriticalDiscreteInputContactStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A discrete input contact on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input contact number. \nThe fifth argument is the\
    \ input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A discrete input contact on the device has changed to its\
    \ abnormal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is a secondary device\
    \ id number. \nThe fourth argument is the input contact number. \nThe fifth argument\
    \ is the input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Discrete input contact has changed\
    \ to its abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcCriticalDiscreteInputContactStateNormal
  eventName: APCapcCriticalDiscreteInputContactStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A discrete input contact on the device has changed to its\
    \ normal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is a secondary device\
    \ id number. \nThe fourth argument is the input contact number. \nThe fifth argument\
    \ is the input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A discrete input contact on the device has changed\
    \ to its normal state.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is a secondary\
    \ device id number. \nThe fourth argument is the input contact number. \nThe fifth\
    \ argument is the input contact name.\nThe sixth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe seventh argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Discrete input contact has changed\
    \ to its normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDcBusOverVoltage
  eventName: APCapcDcBusOverVoltage
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The DC bus voltage is too high.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The DC bus voltage is too high.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The DC bus voltage is too high.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDcBusOverVoltageCleared
  eventName: APCapcDcBusOverVoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The DC bus voltage is too high cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The DC bus voltage is too high cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The DC bus voltage is too high cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDeviceClearLostComms
  eventName: APCapcDeviceClearLostComms
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Lost communications reset command has been issued.\nThe\
    \ first argument is the device serial number.\nThe second argument is the device\
    \ name.\nThe third argument is a secondary device id number.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: Lost communications reset command has been issued.\n\
    The first argument is the device serial number.\nThe second argument is the device\
    \ name.\nThe third argument is a secondary device id number.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Lost communications reset command\
    \ has been issued.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDeviceClearUserConfigs
  eventName: APCapcDeviceClearUserConfigs
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: User configurations reset command has been issued.\nThe\
    \ first argument is the device serial number.\nThe second argument is the device\
    \ name.\nThe third argument is a secondary device id number.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: User configurations reset command has been issued.\n\
    The first argument is the device serial number.\nThe second argument is the device\
    \ name.\nThe third argument is a secondary device id number.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'User configurations reset command\
    \ has been issued.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDeviceConfigChange
  eventName: APCapcDeviceConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A device configuration change has been made on the device.\n\
    The first argument is the device serial number.\nThe second argument is the device\
    \ name.\nThe third argument is a secondary device id number.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: A device configuration change has been made on the\
    \ device.\nThe first argument is the device serial number.\nThe second argument\
    \ is the device name.\nThe third argument is a secondary device id number.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A device configuration change has\
    \ been made on a device.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDeviceConnected
  eventName: APCapcDeviceConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A device has been connected to the host.\nThe first argument\
    \ is the host serial number.\nThe second argument is the host name.\nThe third\
    \ argument is the device number.\nThe fourth argument is the device name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A device has been connected to the host.\nThe first\
    \ argument is the host serial number.\nThe second argument is the host name.\n\
    The third argument is the device number.\nThe fourth argument is the device name.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Device Connected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDeviceDisconnected
  eventName: APCapcDeviceDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A device has been disconnected from the host.\nThe first argument\
    \ is the host serial number.\nThe second argument is the host name.\nThe third\
    \ argument is the device number. \nThe fourth argument is the device name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A device has been disconnected from the host.\nThe first argument\
    \ is the host serial number.\nThe second argument is the host name.\nThe third\
    \ argument is the device number. \nThe fourth argument is the device name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Device Disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorClosed
  eventName: APCapcDoorClosed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door has been closed.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier,\
    \ (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A door has been closed.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door closed.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorClosedImproperly
  eventName: APCapcDoorClosedImproperly
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A door has been closed improperly.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A door has been closed improperly.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door closed improperly.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorClosedImproperlyCleared
  eventName: APCapcDoorClosedImproperlyCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door is no longer closed improperly.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A door is no longer closed improperly.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door no longer closed improperly.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorEstablishedComms
  eventName: APCapcDoorEstablishedComms
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communications have been established with the door.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argument is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Communications have been established with the door.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argument is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A door has established communications.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorLocked
  eventName: APCapcDoorLocked
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door has been locked.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier.\n\
    The fifth argument is the door access user.\nThe sixth argument is the door access\
    \ type.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: A door has been locked.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier.\nThe fifth argument is the door access user.\nThe sixth argument\
    \ is the door access type.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString05\n   mtrapargsString04\n   mtrapargsInteger02\n   mtrapargsInteger\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door locked.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorLostComms
  eventName: APCapcDoorLostComms
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communications have been lost with the door.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Communications have been lost with the door.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A door has lost communications.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorOpened
  eventName: APCapcDoorOpened
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door has been opened.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier,\
    \ (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A door has been opened.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door opened.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorSenseConnected
  eventName: APCapcDoorSenseConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A forced entry condition has been cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A forced entry condition has been cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the host device location.\nThe fourth argument\
    \ is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A door sensor was connected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorSenseDisconnected
  eventName: APCapcDoorSenseDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A door sensor was disconnected.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier,\
    \ (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A door sensor was disconnected.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A door sensor was disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcDoorUnlocked
  eventName: APCapcDoorUnlocked
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door has been unlocked.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier.\n\
    The fifth argument is the door access user.\nThe sixth argument is the door access\
    \ type.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: A door has been unlocked.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier.\nThe fifth argument is the door access user.\nThe sixth argument\
    \ is the door access type.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString05\n   mtrapargsString04\n   mtrapargsInteger02\n   mtrapargsInteger\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door unlocked.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvHighHumidityThresholdViolation
  eventName: APCapcEnvHighHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: High humidity threshold violated on the sensor. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ sensor number. \nThe fifth argument is the sensor name.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: High humidity threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvHighHumidityThresholdViolationCleared
  eventName: APCapcEnvHighHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: High humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvHighTempThresholdViolation
  eventName: APCapcEnvHighTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: High temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: High temperature threshold violated on the sensor. \nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the sensor number. \nThe fifth argument is the sensor name.\n\
    \ Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvHighTempThresholdViolationCleared
  eventName: APCapcEnvHighTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High temperature threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: High temperature threshold violation cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLTDecTempRateViolation
  eventName: APCapcEnvLTDecTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Long-term decreasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Long-term decreasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm dec. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLTDecTempRateViolationCleared
  eventName: APCapcEnvLTDecTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Long-term decreasing temperature rate cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Long-term decreasing temperature rate cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm dec. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLTIncTempRateViolation
  eventName: APCapcEnvLTIncTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Long-term increasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Long-term increasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm inc. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLTIncTempRateViolationCleared
  eventName: APCapcEnvLTIncTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Long-term increasing temperature rate cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Long-term increasing temperature rate cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm inc. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLowHumidityThresholdViolation
  eventName: APCapcEnvLowHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Low humidity threshold violated on the sensor. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ sensor number. \nThe fifth argument is the sensor name.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: Low humidity threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLowHumidityThresholdViolationCleared
  eventName: APCapcEnvLowHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Low humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLowTempThresholdViolation
  eventName: APCapcEnvLowTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Low temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: Low temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvLowTempThresholdViolationCleared
  eventName: APCapcEnvLowTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low temperature threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Low temperature threshold violation cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMaxHumidityThresholdViolation
  eventName: APCapcEnvMaxHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Max humidity threshold violated on the sensor. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ sensor number. \nThe fifth argument is the sensor name.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Max humidity threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMaxHumidityThresholdViolationCleared
  eventName: APCapcEnvMaxHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Max humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Max humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMaxTempThresholdViolation
  eventName: APCapcEnvMaxTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Max temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Max temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMaxTempThresholdViolationCleared
  eventName: APCapcEnvMaxTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Max temperature threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Max temperature threshold violation cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMinHumidityThresholdViolation
  eventName: APCapcEnvMinHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Min humidity threshold violated on the sensor. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ sensor number. \nThe fifth argument is the sensor name.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Min humidity threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMinHumidityThresholdViolationCleared
  eventName: APCapcEnvMinHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Min humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Min humidity threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMinTempThresholdViolation
  eventName: APCapcEnvMinTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Min temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Min temperature threshold violated on the sensor. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvMinTempThresholdViolationCleared
  eventName: APCapcEnvMinTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Min temperature threshold violation cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe sixth argument is the sensor number. \nThe seventh argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Min temperature threshold violation cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe sixth argument is the sensor number. \nThe seventh argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvSTDecTempRateViolation
  eventName: APCapcEnvSTDecTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Short-term decreasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Short-term decreasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm dec. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvSTDecTempRateViolationCleared
  eventName: APCapcEnvSTDecTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Short-term decreasing temperature rate cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Short-term decreasing temperature rate cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm dec. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvSTIncTempRateViolation
  eventName: APCapcEnvSTIncTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Short-term increasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: Short-term increasing temperature rate violated on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm inc. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvSTIncTempRateViolationCleared
  eventName: APCapcEnvSTIncTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Short-term increasing temperature rate cleared on the sensor.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Short-term increasing temperature rate cleared on the\
    \ sensor. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the sensor number. \nThe fifth argument is the sensor\
    \ name.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm inc. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvSensorConnected
  eventName: APCapcEnvSensorConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A sensor has been connected to the host device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: A sensor has been connected to the host device.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the sensor number. \nThe fifth argument is the sensor name.\n\
    \ Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Sensor Connected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcEnvSensorDisconnected
  eventName: APCapcEnvSensorDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A sensor has been disconnected from the device.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is the\
    \ sensor number. \nThe fifth argument is the sensor name.\n Lista varbinds:\n\
    \   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: A sensor has been disconnected from the device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is the sensor number. \nThe fifth argument is the sensor name.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Sensor Disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCapcForcedEntry
  eventName: APCapcForcedEntry
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A forced entry condition has occurred.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A forced entry condition has occurred.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A forced entry has occurred.'\n"
- action: add_eventmapping
  eventClassKey: APCapcForcedEntryCleared
  eventName: APCapcForcedEntryCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A forced entry condition has been cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A forced entry condition has been cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the host device location.\nThe fourth argument\
    \ is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A forced entry has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcHandleClosed
  eventName: APCapcHandleClosed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door handle has been closed.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A door handle has been closed.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door handle closed.'\n"
- action: add_eventmapping
  eventClassKey: APCapcHandleOpened
  eventName: APCapcHandleOpened
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A door handle has been opened.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A door handle has been opened.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Door handle opened.'\n"
- action: add_eventmapping
  eventClassKey: APCapcHardwareStateAbnormal
  eventName: APCapcHardwareStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's hardware is improperly configured and operating outside\n\
    normal bounds for the hardware.  This can be caused by improper devices being\n\
    connected to device ports or Alink Current limit detection.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is a secondary device id number. \nThe fourth argument is a\
    \ hardware specific state code.\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: The device's hardware is improperly configured and operating\
    \ outside\nnormal bounds for the hardware.  This can be caused by improper devices\
    \ being\nconnected to device ports or Alink Current limit detection.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is a secondary device id number. \nThe fourth\
    \ argument is a hardware specific state code.\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Hardware is in an abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcHardwareStateNormal
  eventName: APCapcHardwareStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's hardware is in its normal operational state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number.\n Lista\
    \ varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The device's hardware is in its normal operational\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\n\
    \ Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Hardware is in its normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcInformationalDiscreteInputContactStateAbnormal
  eventName: APCapcInformationalDiscreteInputContactStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A discrete input contact on the device has changed to its\
    \ abnormal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is a secondary device\
    \ id number. \nThe fourth argument is the input contact number. \nThe fifth argument\
    \ is the input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A discrete input contact on the device has changed\
    \ to its abnormal state.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is a secondary\
    \ device id number. \nThe fourth argument is the input contact number. \nThe fifth\
    \ argument is the input contact name.\nThe sixth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe seventh argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Discrete input contact has changed\
    \ to its abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcInformationalDiscreteInputContactStateNormal
  eventName: APCapcInformationalDiscreteInputContactStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A discrete input contact on the device has changed to its\
    \ normal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is a secondary device\
    \ id number. \nThe fourth argument is the input contact number. \nThe fifth argument\
    \ is the input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A discrete input contact on the device has changed\
    \ to its normal state.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is a secondary\
    \ device id number. \nThe fourth argument is the input contact number. \nThe fifth\
    \ argument is the input contact name.\nThe sixth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe seventh argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Discrete input contact has changed\
    \ to its normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcInternalCommunicationFault
  eventName: APCapcInternalCommunicationFault
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An internal UPS communication fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "SEVERE: An internal UPS communication fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An internal UPS communication fault\
    \ exists.'\n"
- action: add_eventmapping
  eventClassKey: APCapcInternalCommunicationFaultCleared
  eventName: APCapcInternalCommunicationFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An internal UPS communication fault no longer exists.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: An internal UPS communication fault no longer exists.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An internal UPS communication fault\
    \ no longer exists.'\n"
- action: add_eventmapping
  eventClassKey: APCapcKeyOverrideLocked
  eventName: APCapcKeyOverrideLocked
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Key override lock has occurred.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Key override lock has occurred.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Key override lock has occurred.'\n"
- action: add_eventmapping
  eventClassKey: APCapcKeyOverrideUnlocked
  eventName: APCapcKeyOverrideUnlocked
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Key override unlock has occurred.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier,\
    \ (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Key override unlock has occurred.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Key override unlock has occurred.'\n"
- action: add_eventmapping
  eventClassKey: APCapcLogicPowerSupplyFault
  eventName: APCapcLogicPowerSupplyFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A logic power supply fault exists.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: A logic power supply fault exists.\n Lista varbinds:\n  \
    \ mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A logic power supply fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCapcLogicPowerSupplyFaultCleared
  eventName: APCapcLogicPowerSupplyFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A logic power supply fault cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A logic power supply fault cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A logic power supply fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutletStateAbnormal
  eventName: APCapcOutletStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An outlet on the device has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the outlet number. \nThe fifth argument is the outlet name.\n\
    The sixth argument is the current outlet state (1=ON, 2=OFF).\nThe seventh argument\
    \ is the configured normal outlet state (1=ON, 2=OFF).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "WARNING: An outlet on the device has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the outlet number. \nThe fifth argument is the outlet name.\n\
    The sixth argument is the current outlet state (1=ON, 2=OFF).\nThe seventh argument\
    \ is the configured normal outlet state (1=ON, 2=OFF).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has changed to its abnormal\
    \ state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutletStateNormal
  eventName: APCapcOutletStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on the device has changed to its normal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the outlet number. \nThe fifth argument is the outlet name.\n\
    The sixth argument is the current outlet state (1=ON, 2=OFF).\nThe seventh argument\
    \ is the configured normal outlet state (1=ON, 2=OFF).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An outlet on the device has changed to its normal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the outlet number. \nThe fifth argument is the outlet name.\n\
    The sixth argument is the current outlet state (1=ON, 2=OFF).\nThe seventh argument\
    \ is the configured normal outlet state (1=ON, 2=OFF).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has changed to its normal\
    \ state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutputRelayFault
  eventName: APCapcOutputRelayFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An output relay (or its driver) fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: An output relay (or its driver) fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An output relay (or its driver)\
    \ fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutputRelayFaultCleared
  eventName: APCapcOutputRelayFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An output relay (or its driver) fault cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: An output relay (or its driver) fault cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An output relay (or its driver)\
    \ fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutputRelayStateAbnormal
  eventName: APCapcOutputRelayStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An output relay on the device has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is a secondary device id number. \nThe\
    \ fourth argument is the output relay number. \nThe fifth argument is the output\
    \ relay name.\nThe sixth argument is the current output relay state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal output relay state (1=CLOSED,\
    \ 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n  \
    \ mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "WARNING: An output relay on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the output relay number. \nThe fifth argument is the\
    \ output relay name.\nThe sixth argument is the current output relay state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal output relay state (1=CLOSED,\
    \ 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n  \
    \ mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output Relay has changed to its\
    \ abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutputRelayStateNormal
  eventName: APCapcOutputRelayStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An output relay on the device has changed to its normal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the output relay number. \nThe fifth argument is the\
    \ output relay name.\nThe sixth argument is the current output relay state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal output relay state (1=CLOSED,\
    \ 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n  \
    \ mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An output relay on the device has changed to its normal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the output relay number. \nThe fifth argument is the\
    \ output relay name.\nThe sixth argument is the current output relay state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal output relay state (1=CLOSED,\
    \ 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n  \
    \ mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output Relay has changed to its\
    \ normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutputShortCircuit
  eventName: APCapcOutputShortCircuit
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An output short circuit condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: An output short circuit condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An output short circuit condition\
    \ exists.'\n"
- action: add_eventmapping
  eventClassKey: APCapcOutputShortCircuitCleared
  eventName: APCapcOutputShortCircuitCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An output short circuit condition cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An output short circuit condition cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An output short circuit condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcRegisteredUserAccessChange
  eventName: APCapcRegisteredUserAccessChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Registered user access changed.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the user\
    \ name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  explanation: "INFORMATIONAL: Registered user access changed.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the user\
    \ name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Registered user access change.'\n"
- action: add_eventmapping
  eventClassKey: APCapcRegisteredUserAccessDenied
  eventName: APCapcRegisteredUserAccessDenied
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A registered user has been denied access to the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argumant is the door identifier.\nThe fifth argument is the user name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: A registered user has been denied access to the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argumant is the door identifier.\nThe fifth argument is the user name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Access denied.'\n"
- action: add_eventmapping
  eventClassKey: APCapcRegisteredUserConfigChange
  eventName: APCapcRegisteredUserConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Registered user configuration change.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the user\
    \ name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  explanation: "INFORMATIONAL: Registered user configuration change.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the user\
    \ name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Registered user configuration change.'\n"
- action: add_eventmapping
  eventClassKey: APCapcRelockTimeout
  eventName: APCapcRelockTimeout
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A relock timout has occured.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the host device location.\nThe fourth argument is the door identifier, (1=front,\
    \ 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A relock timout has occured.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the host device location.\nThe fourth argument is the door identifier,\
    \ (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Relock timeout.'\n"
- action: add_eventmapping
  eventClassKey: APCapcRelockTimeoutCleared
  eventName: APCapcRelockTimeoutCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A relock timout has been cleared.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A relock timout has been cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Relock timout has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcTestTrap
  eventName: APCapcTestTrap
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Trap used to test SNMP trap functionality.\nThe first argument\
    \ is a place holder for test variables.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger02"
  explanation: "INFORMATIONAL: Trap used to test SNMP trap functionality.\nThe first\
    \ argument is a place holder for test variables.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger02"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Test Trap.'\n"
- action: add_eventmapping
  eventClassKey: APCapcTransformerDCImbalanceFault
  eventName: APCapcTransformerDCImbalanceFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The DC component of the transformer's current is too high.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The DC component of the transformer's current is too high.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The DC component of the transformers\
    \ current is too high.'\n"
- action: add_eventmapping
  eventClassKey: APCapcTransformerDCImbalanceFaultCleared
  eventName: APCapcTransformerDCImbalanceFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The DC component of the transformer's current is normal.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "WARNING: The DC component of the transformer's current is normal.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The DC component of the transformers\
    \ current is normal.'\n"
- action: add_eventmapping
  eventClassKey: APCapcUnregisteredUserAccessDenied
  eventName: APCapcUnregisteredUserAccessDenied
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An unregistered user has tried to access the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argumant is the door identifier.\nThe fifth argument is the unregistered user's\
    \ RFID.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: An unregistered user has tried to access the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argumant is the door identifier.\nThe fifth argument is the unregistered user's\
    \ RFID.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Unregistered user.'\n"
- action: add_eventmapping
  eventClassKey: APCapcUnregisteredUserStatusChange
  eventName: APCapcUnregisteredUserStatusChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Unregistered user status changed.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the user\
    \ name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  explanation: "INFORMATIONAL: Unregistered user status changed.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the user\
    \ name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Unregistered user status change.'\n"
- action: add_eventmapping
  eventClassKey: APCapcUserScheduleViolation
  eventName: APCapcUserScheduleViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A user has had a door opened past the scheduled access period.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argument is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A user has had a door opened past the scheduled access period.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the host device location.\nThe fourth\
    \ argument is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'User schedule violated.'\n"
- action: add_eventmapping
  eventClassKey: APCapcUserScheduleViolationCleared
  eventName: APCapcUserScheduleViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: User schedule violation has been cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the host device location.\nThe fourth argument is the door\
    \ identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: User schedule violation has been cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the host device location.\nThe fourth argument\
    \ is the door identifier, (1=front, 2=rear).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'User schedule violation cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCapcWarningDiscreteInputContactStateAbnormal
  eventName: APCapcWarningDiscreteInputContactStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A discrete input contact on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is a secondary device id number.\
    \ \nThe fourth argument is the input contact number. \nThe fifth argument is the\
    \ input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "WARNING: A discrete input contact on the device has changed to its\
    \ abnormal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is a secondary device\
    \ id number. \nThe fourth argument is the input contact number. \nThe fifth argument\
    \ is the input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Discrete input contact has changed\
    \ to its abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCapcWarningDiscreteInputContactStateNormal
  eventName: APCapcWarningDiscreteInputContactStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A discrete input contact on the device has changed to its\
    \ normal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is a secondary device\
    \ id number. \nThe fourth argument is the input contact number. \nThe fifth argument\
    \ is the input contact name.\nThe sixth argument is the input contact state (1=CLOSED,\
    \ 2=OPEN).\nThe seventh argument is the configured normal input contact state\
    \ (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A discrete input contact on the device has changed\
    \ to its normal state.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is a secondary\
    \ device id number. \nThe fourth argument is the input contact number. \nThe fifth\
    \ argument is the input contact name.\nThe sixth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe seventh argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   mtrapargsInteger04\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Discrete input contact has changed\
    \ to its normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCaruAlinkCommunicationEstablished
  eventName: APCaruAlinkCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Remote ARU Communication Established.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Remote ARU Communication Established.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Established.'\n"
- action: add_eventmapping
  eventClassKey: APCaruAlinkCommunicationLost
  eventName: APCaruAlinkCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Remote ARU Communication Lost.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  explanation: "SEVERE: Remote ARU Communication Lost.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the ARU number. \nThe fourth argument is the ARU name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCaruDeviceConfigChange
  eventName: APCaruDeviceConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Remote ARU Device Configuration change.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Remote ARU Device Configuration change.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the ARU number. \nThe fourth argument is\
    \ the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ARU device configuration change.'\n"
- action: add_eventmapping
  eventClassKey: APCaruExhaustTemperatureAlarm
  eventName: APCaruExhaustTemperatureAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: ARU Extreme Exhaust Temperature Alarm.\nThe ARU is unable to control\
    \ the temperature within the rack\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n \
    \  emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  explanation: "SEVERE: ARU Extreme Exhaust Temperature Alarm.\nThe ARU is unable\
    \ to control the temperature within the rack\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Exhaust Temperature Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCaruExhaustTemperatureAlarmCleared
  eventName: APCaruExhaustTemperatureAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Remote ARU Exhaust Temperature Alarm Cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the ARU number. \nThe fourth argument is\
    \ the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Remote ARU Exhaust Temperature Alarm Cleared.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the ARU number. \nThe fourth argument\
    \ is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Exhaust Temperature Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCaruFanFail
  eventName: APCaruFanFail
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Remote ARU Fan Fail.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n \
    \  emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  explanation: "SEVERE: Remote ARU Fan Fail.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fan Fail.'\n"
- action: add_eventmapping
  eventClassKey: APCaruFanFailCleared
  eventName: APCaruFanFailCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Remote ARU Fan Fail Cleared.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the ARU number. \nThe fourth argument is the ARU name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Remote ARU Fan Fail Cleared.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fan Fail Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCaruFanPoorPerformanceAlarm
  eventName: APCaruFanPoorPerformanceAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Poor fan performance has been detected in the ARU,\nindicating\
    \ that the fan may be close to failing.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the ARU number. \nThe fourth argument is the ARU name.\nThe fifth argument\
    \ indicates which fan in the ARU.\n Lista varbinds:\n   emsIdentEMSName\n   mtrapargsInteger\n\
    \   emsIdentSerialNumber\n   rARUStatusAruIndex\n   rARUStatusAruName\n   mtrapargsString"
  explanation: "WARNING: Poor fan performance has been detected in the ARU,\nindicating\
    \ that the fan may be close to failing.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the ARU number. \nThe fourth argument is the ARU name.\nThe fifth argument\
    \ indicates which fan in the ARU.\n Lista varbinds:\n   emsIdentEMSName\n   mtrapargsInteger\n\
    \   emsIdentSerialNumber\n   rARUStatusAruIndex\n   rARUStatusAruName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fan Health Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCaruFanPoorPerformanceAlarmCleared
  eventName: APCaruFanPoorPerformanceAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Fan performance is no longer degraded.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    The fifth argument indicates which fan in the ARU.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   mtrapargsInteger\n   emsIdentSerialNumber\n   rARUStatusAruIndex\n   rARUStatusAruName\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: Fan performance is no longer degraded.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    The fifth argument indicates which fan in the ARU.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   mtrapargsInteger\n   emsIdentSerialNumber\n   rARUStatusAruIndex\n   rARUStatusAruName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fan Health Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCaruFanRuntimeAlarm
  eventName: APCaruFanRuntimeAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The total running hours for a fan has exceeded\nthe run hour\
    \ threshold.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the ARU number. \n\
    The fourth argument is the ARU name.\nThe fifth argument indicates which fan in\
    \ the ARU.\n Lista varbinds:\n   emsIdentEMSName\n   mtrapargsInteger\n   emsIdentSerialNumber\n\
    \   rARUStatusAruIndex\n   rARUStatusAruName\n   mtrapargsString"
  explanation: "WARNING: The total running hours for a fan has exceeded\nthe run hour\
    \ threshold.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the ARU number. \n\
    The fourth argument is the ARU name.\nThe fifth argument indicates which fan in\
    \ the ARU.\n Lista varbinds:\n   emsIdentEMSName\n   mtrapargsInteger\n   emsIdentSerialNumber\n\
    \   rARUStatusAruIndex\n   rARUStatusAruName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fan Runhour Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCaruFanRuntimeAlarmCleared
  eventName: APCaruFanRuntimeAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The total running hours for a fan is no longer\nabove the\
    \ fan runhour threshold.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the ARU number.\
    \ \nThe fourth argument is the ARU name.\nThe fifth argument indicates which fan\
    \ in the ARU.\n Lista varbinds:\n   emsIdentEMSName\n   mtrapargsInteger\n   emsIdentSerialNumber\n\
    \   rARUStatusAruIndex\n   rARUStatusAruName\n   mtrapargsString"
  explanation: "INFORMATIONAL: The total running hours for a fan is no longer\nabove\
    \ the fan runhour threshold.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the ARU number.\
    \ \nThe fourth argument is the ARU name.\nThe fifth argument indicates which fan\
    \ in the ARU.\n Lista varbinds:\n   emsIdentEMSName\n   mtrapargsInteger\n   emsIdentSerialNumber\n\
    \   rARUStatusAruIndex\n   rARUStatusAruName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fan Runhour Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCaruHighTemperatureAlarm
  eventName: APCaruHighTemperatureAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: ARU Exhaust temperature has exceeded the override \nthreshold\
    \ and the ARU has increased fan speed to\nmaintain a safe environment in the rack.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the ARU number. \nThe fourth argument\
    \ is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "WARNING: ARU Exhaust temperature has exceeded the override \nthreshold\
    \ and the ARU has increased fan speed to\nmaintain a safe environment in the rack.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the ARU number. \nThe fourth argument\
    \ is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High Temperature Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCaruHighTemperatureAlarmCleared
  eventName: APCaruHighTemperatureAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: ARU temperature override state has been cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the ARU number. \nThe fourth argument is\
    \ the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: ARU temperature override state has been cleared.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the ARU number. \nThe fourth argument\
    \ is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High Temperature Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCaruRedundantPowerLostAlarm
  eventName: APCaruRedundantPowerLostAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: One of the redundant line cords on the ARU is no longer receiving\
    \ AC power.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the ARU number. \n\
    The fourth argument is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n \
    \  emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "WARNING: One of the redundant line cords on the ARU is no longer receiving\
    \ AC power.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the ARU number. \n\
    The fourth argument is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n \
    \  emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'AC Redundancy Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCaruRedundantPowerLostAlarmCleared
  eventName: APCaruRedundantPowerLostAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Line-cord redundancy has been restored to the ARU.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the ARU number. \nThe fourth argument\
    \ is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Line-cord redundancy has been restored to the ARU.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the ARU number. \nThe fourth argument\
    \ is the ARU name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   rARUStatusAruName\n   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'AC Redundancy Restored.'\n"
- action: add_eventmapping
  eventClassKey: APCaruSmokeAlarm
  eventName: APCaruSmokeAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Remote ARU Smoke Alarm.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  explanation: "SEVERE: Remote ARU Smoke Alarm.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the ARU number. \nThe fourth argument is the ARU name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n   rARUStatusAruIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Smoke Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCaruSmokeAlarmCleared
  eventName: APCaruSmokeAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Remote ARU Smoke Alarm Cleared.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Remote ARU Smoke Alarm Cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the ARU number. \nThe fourth argument is the ARU name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   rARUStatusAruName\n\
    \   rARUStatusAruIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Smoke Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCatsCommunicationEstablished
  eventName: APCatsCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communications with the Automatic Transfer Switch has been\
    \ established.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communications with the Automatic Transfer Switch has\
    \ been established.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the Automatic\
    \ Transfer Switch has been established.'\n"
- action: add_eventmapping
  eventClassKey: APCatsCommunicationLost
  eventName: APCatsCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communications with the Automatic Transfer Switch has been lost.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Communications with the Automatic Transfer Switch has been\
    \ lost.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the Automatic\
    \ Transfer Switch has been lost.'\n"
- action: add_eventmapping
  eventClassKey: APCatsConfigChange
  eventName: APCatsConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A configuration change has been made on the Automatic Transfer\
    \ Switch.\nThe first variable is an integer representing the configuration setting\
    \ which changed:\n    0=Transfer Voltage Range, 1=Sensitivity, 2=Preferred Source\n\
    \    3=Front Panel Lockout, 4=Current Limit, 5=Reset XA Processor, \n    6=Reset\
    \ to defaults, 7=Product Name, 8=Nominal Voltage, 9=Nominal Line Frequency, \n\
    \    10=Narrow VRMS, 11=Medium VRMS, 12=Wide VRMS,13=Frequency Deviation,\n  \
    \  14=ColdStart ATS, 15=Events Count Cleared, 16=Phase or Bank Threshold. \n Lista\
    \ varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A configuration change has been made on the Automatic\
    \ Transfer Switch.\nThe first variable is an integer representing the configuration\
    \ setting which changed:\n    0=Transfer Voltage Range, 1=Sensitivity, 2=Preferred\
    \ Source\n    3=Front Panel Lockout, 4=Current Limit, 5=Reset XA Processor, \n\
    \    6=Reset to defaults, 7=Product Name, 8=Nominal Voltage, 9=Nominal Line Frequency,\
    \ \n    10=Narrow VRMS, 11=Medium VRMS, 12=Wide VRMS,13=Frequency Deviation,\n\
    \    14=ColdStart ATS, 15=Events Count Cleared, 16=Phase or Bank Threshold. \n\
    \ Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A configuration change has been\
    \ made on a Automatic Transfer Switch.'\n"
- action: add_eventmapping
  eventClassKey: APCatsControllerRestart
  eventName: APCatsControllerRestart
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: ATS Controller restarted.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: ATS Controller restarted.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS Controller restarted.'\n"
- action: add_eventmapping
  eventClassKey: APCatsHardwareStatusFail
  eventName: APCatsHardwareStatusFail
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: ATS display board hardware failed.\nThe first argument is the\
    \ serial number.\nThe second argument is the product name.\nThe third argument\
    \ is an integer representing the failed hardware: \n0= Phase LEDs/Push-button\
    \ hardware failure \n1= Seven-segment display hardware failure.\n Lista varbinds:\n\
    \   mtrapargsInteger\n   atsConfigProductName\n   mtrapargsString\n   atsIdentSerialNumber"
  explanation: "SEVERE: ATS display board hardware failed.\nThe first argument is\
    \ the serial number.\nThe second argument is the product name.\nThe third argument\
    \ is an integer representing the failed hardware: \n0= Phase LEDs/Push-button\
    \ hardware failure \n1= Seven-segment display hardware failure.\n Lista varbinds:\n\
    \   mtrapargsInteger\n   atsConfigProductName\n   mtrapargsString\n   atsIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS display board hardware failed.'\n"
- action: add_eventmapping
  eventClassKey: APCatsHardwareStatusOk
  eventName: APCatsHardwareStatusOk
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: ATS display board hardware ok.\nThe first argument is the\
    \ serial number.\nThe second argument is the product name.\nThe third argument\
    \ is an integer representing the hardware: \n0= Phase LEDs/Push-button hardware\
    \ failure \n1= Seven-segment display hardware failure.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   atsConfigProductName\n   mtrapargsString\n   atsIdentSerialNumber"
  explanation: "INFORMATIONAL: ATS display board hardware ok.\nThe first argument\
    \ is the serial number.\nThe second argument is the product name.\nThe third argument\
    \ is an integer representing the hardware: \n0= Phase LEDs/Push-button hardware\
    \ failure \n1= Seven-segment display hardware failure.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   atsConfigProductName\n   mtrapargsString\n   atsIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS display board hardware ok.'\n"
- action: add_eventmapping
  eventClassKey: APCatsLostRedundancy
  eventName: APCatsLostRedundancy
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The Automatic Transfer Switch has lost redundancy.\nThe first\
    \ variable is an integer representing the source which is no longer available:\
    \ 0=A, 1=B.\nThe second variable is the 32-character name of the source which\
    \ is no longer available.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The Automatic Transfer Switch has lost redundancy.\nThe first\
    \ variable is an integer representing the source which is no longer available:\
    \ 0=A, 1=B.\nThe second variable is the 32-character name of the source which\
    \ is no longer available.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Automatic Transfer Switch has\
    \ lost redundancy.'\n"
- action: add_eventmapping
  eventClassKey: APCatsOverCurrent
  eventName: APCatsOverCurrent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Output Current has exceeded threshold. This is same as atsOverload\
    \ Trap \nfor phase or total in case banked units\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Output Current has exceeded threshold. This is same as atsOverload\
    \ Trap \nfor phase or total in case banked units\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output Current has exceeded Threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCatsOverCurrentCleared
  eventName: APCatsOverCurrentCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Output Current has returned below threshold.This is same\
    \ as atsOverloadCleared Trap \nfor phase or total in case banked units\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Output Current has returned below threshold.This is\
    \ same as atsOverloadCleared Trap \nfor phase or total in case banked units\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output Current has returned below\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCatsPowerSupplyFailure
  eventName: APCatsPowerSupplyFailure
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The Automatic Transfer Switch Power Supply has failed.\nThe first\
    \ variable is an integer representing the Power Supply which \nhas failed: 0 =\
    \ Source A 24V,\n            1 = 12V,\n            2 = 5V,\n            3 = Source\
    \ B 24V.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: The Automatic Transfer Switch Power Supply has failed.\nThe\
    \ first variable is an integer representing the Power Supply which \nhas failed:\
    \ 0 = Source A 24V,\n            1 = 12V,\n            2 = 5V,\n            3\
    \ = Source B 24V.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Automatic Transfer Switch Power\
    \ Supply has failed.'\n"
- action: add_eventmapping
  eventClassKey: APCatsPowerSupplyFailureCleared
  eventName: APCatsPowerSupplyFailureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The Automatic Transfer Power Supply Failure Cleared.\n\
    The first variable is an integer representing the Power Supply which \nhas cleared:\
    \ 0 = Source A 24V,\n             1 = 12V,\n             2 = 5V,\n           \
    \  3 = Source B 24V.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The Automatic Transfer Power Supply Failure Cleared.\n\
    The first variable is an integer representing the Power Supply which \nhas cleared:\
    \ 0 = Source A 24V,\n             1 = 12V,\n             2 = 5V,\n           \
    \  3 = Source B 24V.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Automatic Transfer Switch Power\
    \ Supply Failure Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCatsRedundancyRestored
  eventName: APCatsRedundancyRestored
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Redundancy has been restored to the Automatic Transfer\
    \ Switch .\nThe first variable is an integer representing the source which has\
    \ been restored: 0=A, 1=B.\nThe second variable is the 32-character name of the\
    \ source which has been restored.\n Lista varbinds:\n   mtrapargsString02\n  \
    \ mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Redundancy has been restored to the Automatic Transfer\
    \ Switch .\nThe first variable is an integer representing the source which has\
    \ been restored: 0=A, 1=B.\nThe second variable is the 32-character name of the\
    \ source which has been restored.\n Lista varbinds:\n   mtrapargsString02\n  \
    \ mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Redundancy has been restored to\
    \ the Automatic Transfer Switch .'\n"
- action: add_eventmapping
  eventClassKey: APCatsSourceStatusFail
  eventName: APCatsSourceStatusFail
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: ATS Source failed.\nThe first argument is the serial number.\n\
    The second argument is the product name.\nThe third argument is an integer representing\
    \ the source: 0=A, 1=B.\n Lista varbinds:\n   mtrapargsInteger\n   atsConfigProductName\n\
    \   mtrapargsString\n   atsIdentSerialNumber"
  explanation: "SEVERE: ATS Source failed.\nThe first argument is the serial number.\n\
    The second argument is the product name.\nThe third argument is an integer representing\
    \ the source: 0=A, 1=B.\n Lista varbinds:\n   mtrapargsInteger\n   atsConfigProductName\n\
    \   mtrapargsString\n   atsIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS Source failed.'\n"
- action: add_eventmapping
  eventClassKey: APCatsSourceStatusOk
  eventName: APCatsSourceStatusOk
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: ATS Source OK.\nThe first argument is the serial number.\n\
    The second argument is the product name.\nThe third argument is an integer representing\
    \ the source: 0=A, 1=B.\n Lista varbinds:\n   mtrapargsInteger\n   atsConfigProductName\n\
    \   mtrapargsString\n   atsIdentSerialNumber"
  explanation: "INFORMATIONAL: ATS Source OK.\nThe first argument is the serial number.\n\
    The second argument is the product name.\nThe third argument is an integer representing\
    \ the source: 0=A, 1=B.\n Lista varbinds:\n   mtrapargsInteger\n   atsConfigProductName\n\
    \   mtrapargsString\n   atsIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS Source OK.'\n"
- action: add_eventmapping
  eventClassKey: APCatsSourceSwitched
  eventName: APCatsSourceSwitched
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The Automatic Transfer Switch has switched source.\nThe\
    \ first variable is an integer representing the current source: 0=A, 1=B.\nThe\
    \ second variable is the 32-character name of the current source.\n Lista varbinds:\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The Automatic Transfer Switch has switched source.\n\
    The first variable is an integer representing the current source: 0=A, 1=B.\n\
    The second variable is the 32-character name of the current source.\n Lista varbinds:\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Automatic Transfer Switch has\
    \ switched source.'\n"
- action: add_eventmapping
  eventClassKey: APCbadVoltage
  eventName: APCbadVoltage
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The output voltage is not within acceptable range.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The output voltage is not within acceptable range.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The output voltage is not within\
    \ acceptable range.'\n"
- action: add_eventmapping
  eventClassKey: APCbadVoltageCleared
  eventName: APCbadVoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The output voltage has returned to an acceptable level.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The output voltage has returned to an acceptable level.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The output voltage has returned\
    \ to an acceptable level.'\n"
- action: add_eventmapping
  eventClassKey: APCbaseFanFailure
  eventName: APCbaseFanFailure
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Base module fan needs repair\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Base module fan needs repair\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Averia de un VENTILADOR'\n"
- action: add_eventmapping
  eventClassKey: APCbaseFanFailureCleared
  eventName: APCbaseFanFailureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Base module fan has been repaired\n Lista varbinds:\n \
    \  mtrapargsString"
  explanation: "INFORMATIONAL: Base module fan has been repaired\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The base module fan has been repaired.'\n"
- action: add_eventmapping
  eventClassKey: APCbatteryDecrease
  eventName: APCbatteryDecrease
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The number of batteries has decreased.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The number of batteries has decreased.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The number of batteries has decreased.'\n"
- action: add_eventmapping
  eventClassKey: APCbatteryIncrease
  eventName: APCbatteryIncrease
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The number of batteries has increased.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The number of batteries has increased.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The number of batteries has increased.'\n"
- action: add_eventmapping
  eventClassKey: APCbatteryOverTemperature
  eventName: APCbatteryOverTemperature
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The battery temperature threshold has been violated.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "WARNING: The battery temperature threshold has been violated.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery temperature threshold\
    \ has been violated.'\n"
- action: add_eventmapping
  eventClassKey: APCbatteryOverTemperatureCleared
  eventName: APCbatteryOverTemperatureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The battery over temperature has been cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The battery over temperature has been cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery over temperature has\
    \ been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbatteryPackCommEstablished
  eventName: APCbatteryPackCommEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: UPS is communicating with the external battery packs.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: UPS is communicating with the external battery packs.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication established with external\
    \ battery packs.'\n"
- action: add_eventmapping
  eventClassKey: APCbatteryPackCommLost
  eventName: APCbatteryPackCommLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Check installation of external battery packs signal cable\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Check installation of external battery packs signal cable\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Pedida la comunicacion con la extension\
    \ de baterias (check battery signal cable)'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManBatteryAlarm
  eventName: APCbmBatManBatteryAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Battery Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "WARNING: Battery Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Battery Alarm Detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManBatteryAlarmCleared
  eventName: APCbmBatManBatteryAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Battery Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Battery Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Battery Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManChargerAlarm
  eventName: APCbmBatManChargerAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Charger Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "WARNING: Charger Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Charger Alarm Detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManChargerAlarmCleared
  eventName: APCbmBatManChargerAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Charger Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Charger Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Charger Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManCommEstab
  eventName: APCbmBatManCommEstab
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Serial Communications Established with Battery Manager.\n\
    \ Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Serial Communications Established with Battery Manager.\n\
    \ Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications Established.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManCommLost
  eventName: APCbmBatManCommLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Serial Communications Lost with Battery Manager.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Serial Communications Lost with Battery Manager.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManEnvironmentAlarm
  eventName: APCbmBatManEnvironmentAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Environment Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "WARNING: Environment Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Environment Alarm Detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManEnvironmentAlarmCleared
  eventName: APCbmBatManEnvironmentAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Environment Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Environment Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Environment Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManKneeAlarm
  eventName: APCbmBatManKneeAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Battery Voltage Knee Threshold Alarm Detected.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Battery Voltage Knee Threshold Alarm Detected.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Knee Alarm Detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManKneeAlarmCleared
  eventName: APCbmBatManKneeAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Battery Voltage Knee Threshold Alarm Cleared.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Battery Voltage Knee Threshold Alarm Cleared.\n Lista\
    \ varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Knee Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManMaintenanceAlarm
  eventName: APCbmBatManMaintenanceAlarm
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Maintenance Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Maintenance Alarm Detected.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Maintenance Due Alarm Detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmBatManMaintenanceAlarmCleared
  eventName: APCbmBatManMaintenanceAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Maintenance Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Maintenance Alarm Cleared.\n Lista varbinds:\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Maintenance Due Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmsCriticalCondition
  eventName: APCbmsCriticalCondition
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Battery Management System critical condition was detected.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: A Battery Management System critical condition was detected.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A critical condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmsCriticalConditionCleared
  eventName: APCbmsCriticalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Battery Management System critical condition was cleared.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Battery Management System critical condition was\
    \ cleared.\nThe first variable is the error condition text message.\nThe second\
    \ variable is the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A critical condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmsInformationalCondition
  eventName: APCbmsInformationalCondition
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Battery Management System informational condition was\
    \ detected.\nThe first variable is the error condition text message.\nThe second\
    \ variable is the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Battery Management System informational condition\
    \ was detected.\nThe first variable is the error condition text message.\nThe\
    \ second variable is the error number.\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmsInformationalConditionCleared
  eventName: APCbmsInformationalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Battery Management System informational condition was\
    \ cleared.\nThe first variable is the error condition text message.\nThe second\
    \ variable is the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Battery Management System informational condition\
    \ was cleared.\nThe first variable is the error condition text message.\nThe second\
    \ variable is the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbmsWarningCondition
  eventName: APCbmsWarningCondition
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Battery Management System warning condition was detected.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "WARNING: A Battery Management System warning condition was detected.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCbmsWarningConditionCleared
  eventName: APCbmsWarningConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Battery Management System warning condition was cleared.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "WARNING: A Battery Management System warning condition was cleared.\n\
    The first variable is the error condition text message.\nThe second variable is\
    \ the error number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCbypassPowerSupplyFailure
  eventName: APCbypassPowerSupplyFailure
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Base module bypass power supply needs repair\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "SEVERE: Base module bypass power supply needs repair\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The base module bypass power supply\
    \ needs repair.'\n"
- action: add_eventmapping
  eventClassKey: APCcalibrationEnd
  eventName: APCcalibrationEnd
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The UPS has finished calibrating.\n Lista varbinds:\n \
    \  mtrapargsString"
  explanation: "INFORMATIONAL: The UPS has finished calibrating.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has finished calibrating'\n"
- action: add_eventmapping
  eventClassKey: APCcalibrationStart
  eventName: APCcalibrationStart
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A battery calibration test has been initiated on the UPS.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A battery calibration test has been initiated on the\
    \ UPS.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A battery run time calibration test\
    \ has been initiated.'\n"
- action: add_eventmapping
  eventClassKey: APCceInformationalCondition
  eventName: APCceInformationalCondition
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Custom Event informational condition was detected.\n\
    The first variable is the custom event text message.\nThe second variable is the\
    \ custom event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Custom Event informational condition was detected.\n\
    The first variable is the custom event text message.\nThe second variable is the\
    \ custom event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCceInformationalConditionCleared
  eventName: APCceInformationalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Custom Event informational condition was cleared.\nThe\
    \ first variable is the custom event text message.\nThe second variable is the\
    \ custom event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Custom Event informational condition was cleared.\n\
    The first variable is the custom event text message.\nThe second variable is the\
    \ custom event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCceSevereCondition
  eventName: APCceSevereCondition
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Custom Event severe condition was detected.\nThe first variable\
    \ is the custom event text message.\nThe second variable is the custom event number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A Custom Event severe condition was detected.\nThe first variable\
    \ is the custom event text message.\nThe second variable is the custom event number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A severe condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCceSevereConditionCleared
  eventName: APCceSevereConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Custom Event severe condition was cleared.\nThe first\
    \ variable is the custom event text message.\nThe second variable is the custom\
    \ event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Custom Event severe condition was cleared.\nThe first\
    \ variable is the custom event text message.\nThe second variable is the custom\
    \ event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A severe condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCceWarningCondition
  eventName: APCceWarningCondition
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Custom Event warning condition was detected.\nThe first variable\
    \ is the custom event text message.\nThe second variable is the custom event number.\n\
    \ Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "WARNING: A Custom Event warning condition was detected.\nThe first\
    \ variable is the custom event text message.\nThe second variable is the custom\
    \ event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition was detected.'\n"
- action: add_eventmapping
  eventClassKey: APCceWarningConditionCleared
  eventName: APCceWarningConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Custom Event warning condition was cleared.\nThe first\
    \ variable is the custom event text message.\nThe second variable is the custom\
    \ event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A Custom Event warning condition was cleared.\nThe\
    \ first variable is the custom event text message.\nThe second variable is the\
    \ custom event number.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition was cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCchargerFailure
  eventName: APCchargerFailure
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The battery charger has failed.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The battery charger has failed.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery charger has failed.'\n"
- action: add_eventmapping
  eventClassKey: APCchargerFailureCleared
  eventName: APCchargerFailureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The battery charger failure condition has been cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The battery charger failure condition has been cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery charger failure condition\
    \ has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCcodeAuthenticationDone
  eventName: APCcodeAuthenticationDone
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Authentication on agent code image is done.\n Lista varbinds:\n\
    \   mconfigTFTPServerIP\n   newCodeAuthentViaTFTP"
  explanation: "INFORMATIONAL: Authentication on agent code image is done.\n Lista\
    \ varbinds:\n   mconfigTFTPServerIP\n   newCodeAuthentViaTFTP"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Authentication on agent code image\
    \ is done.'\n"
- action: add_eventmapping
  eventClassKey: APCcommunicationEstablished
  eventName: APCcommunicationEstablished
  eventPath: /CYIIG/SAI_APC/APCcommunicationLost
  example: "INFORMATIONAL: Communication with the UPS has been established.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communication with the UPS has been established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: comunicacion perdida'\n"
- action: add_eventmapping
  eventClassKey: APCcommunicationLost
  eventName: APCcommunicationLost
  eventPath: /CYIIG/SAI_APC/APCcommunicationLost
  example: "SEVERE: Communication to the UPS has been lost.  Steps\nto reestablish\
    \ communication are in progress.\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Communication to the UPS has been lost.  Steps\nto reestablish\
    \ communication are in progress.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 3\nevt.summary = 'comunicacion perdida'\n"
- action: add_eventmapping
  eventClassKey: APCconfigChangeOutlet
  eventName: APCconfigChangeOutlet
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The specified PDU outlet has changed configuration.\nIf sPDUOutletConfigIndex\
    \ equals zero, then the Master outlet \nhas changed configuration.\n Lista varbinds:\n\
    \   sPDUOutletConfigIndex"
  explanation: "WARNING: The specified PDU outlet has changed configuration.\nIf sPDUOutletConfigIndex\
    \ equals zero, then the Master outlet \nhas changed configuration.\n Lista varbinds:\n\
    \   sPDUOutletConfigIndex"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet configuration has been changed.'\n"
- action: add_eventmapping
  eventClassKey: APCconfigChangeSNMP
  eventName: APCconfigChangeSNMP
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The SNMP configuration has been changed.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The SNMP configuration has been changed.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The SNMP configuration has been\
    \ changed.'\n"
- action: add_eventmapping
  eventClassKey: APCcontactFault
  eventName: APCcontactFault
  eventPath: /CYIIG/SAI_APC/APCcontactFault
  example: "SEVERE: One of the contacts on the Environmental Monitor has \nchanged\
    \ from its default position. The first variable is\nthe contact number that is\
    \ faulted.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: One of the contacts on the Environmental Monitor has \nchanged\
    \ from its default position. The first variable is\nthe contact number that is\
    \ faulted.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Alarma externa  %s = %s' % (evt.mtrapargsInteger\
    \ , evt.mtrapargsString)\n"
- action: add_eventmapping
  eventClassKey: APCcontactFaultResolved
  eventName: APCcontactFaultResolved
  eventPath: /CYIIG/SAI_APC/APCcontactFault
  example: "INFORMATIONAL: A fault on one of the Environmental Monitor contacts\n\
    has been resolved. The first variable is\nthe contact number that has been resolved.\n\
    \ Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A fault on one of the Environmental Monitor contacts\n\
    has been resolved. The first variable is\nthe contact number that has been resolved.\n\
    \ Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: Alarma externa %s = %s'\
    \ % (evt.mtrapargsInteger , evt.mtrapargsString)\n"
- action: add_eventmapping
  eventClassKey: APCdcBBCommunicationEstablished
  eventName: APCdcBBCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Power plant bridging board communications established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Power plant bridging board communications established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Power plant bridging board communications\
    \ established.'\n"
- action: add_eventmapping
  eventClassKey: APCdcBBCommunicationLost
  eventName: APCdcBBCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Power plant bridging board communications lost.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "SEVERE: Power plant bridging board communications lost.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Power plant bridging board communications\
    \ lost.'\n"
- action: add_eventmapping
  eventClassKey: APCdcBatteryBreakerAlarm
  eventName: APCdcBatteryBreakerAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Batt. Breaker alarm is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: Batt. Breaker alarm is active in the power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Batt. Breaker alarm is active in\
    \ the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcBatteryBreakerAlarmCleared
  eventName: APCdcBatteryBreakerAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Batt. Breaker alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Batt. Breaker alarm is no longer active in the power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Batt. Breaker alarm is no longer\
    \ active in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcBatteryTestFail
  eventName: APCdcBatteryTestFail
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Battery Test failed in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Battery Test failed in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Battery Test failed in the DC\
    \ power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcCommunicationEstablished
  eventName: APCdcCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communications with the DC power plant has been established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communications with the DC power plant has been established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the DC power\
    \ plant has been established.'\n"
- action: add_eventmapping
  eventClassKey: APCdcCommunicationLost
  eventName: APCdcCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communications with the DC power plant has been lost.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Communications with the DC power plant has been lost.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the DC power\
    \ plant has been lost.'\n"
- action: add_eventmapping
  eventClassKey: APCdcCurrentLimitAlarm
  eventName: APCdcCurrentLimitAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Current Limit alarm is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Current Limit alarm is active in the power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Current Limit alarm is active\
    \ in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcCurrentLimitAlarmCleared
  eventName: APCdcCurrentLimitAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Current Limit alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Current Limit alarm is no longer active in the power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Current Limit alarm is no longer\
    \ active in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcFanFailAlarm
  eventName: APCdcFanFailAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Fan Fail alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Fan Fail alarm is active in the DC power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Fan Fail alarm is active in the\
    \ DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcFanFailAlarmCleared
  eventName: APCdcFanFailAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Fan Fail alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Fan Fail alarm is no longer active in the DC power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Fan Fail alarm is no longer active\
    \ in the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcFuseCBAlarm
  eventName: APCdcFuseCBAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Fuse/CB alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Fuse/CB alarm is active in the DC power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Fuse/CB alarm is active in the\
    \ DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcFuseCBAlarmCleared
  eventName: APCdcFuseCBAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Fuse/CB alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Fuse/CB alarm is no longer active in the DC power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Fuse/CB alarm is no longer active\
    \ in the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcHumidityAlarm
  eventName: APCdcHumidityAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Humidity alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Humidity alarm is active in the DC power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Humidity alarm is active in the\
    \ DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcHumidityAlarmCleared
  eventName: APCdcHumidityAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Humidity alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Humidity alarm is no longer active in the DC power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Humidity alarm is no longer active\
    \ in the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcInputRelayOff
  eventName: APCdcInputRelayOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An input relay for the powerplant has been deactivated\
    \ (state changed to off).\nThe first variable is an integer representing the input\
    \ relay number that has gone off.\nThe second variable is the 16-character name\
    \ of the input relay.\n Lista varbinds:\n   mtrapargsString\n   dm3StatusInRlyIndex\n\
    \   dm3StatusInRlyName"
  explanation: "INFORMATIONAL: An input relay for the powerplant has been deactivated\
    \ (state changed to off).\nThe first variable is an integer representing the input\
    \ relay number that has gone off.\nThe second variable is the 16-character name\
    \ of the input relay.\n Lista varbinds:\n   mtrapargsString\n   dm3StatusInRlyIndex\n\
    \   dm3StatusInRlyName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An input relay has gone off in the\
    \ DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcInputRelayOn
  eventName: APCdcInputRelayOn
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An input relay for the powerplant has been activated (state changed\
    \ to on).\nThe first variable is an integer representing the input relay number\
    \ that has gone on.\nThe second variable is the 16-character name of the input\
    \ relay.\n Lista varbinds:\n   mtrapargsString\n   dm3StatusInRlyIndex\n   dm3StatusInRlyName"
  explanation: "WARNING: An input relay for the powerplant has been activated (state\
    \ changed to on).\nThe first variable is an integer representing the input relay\
    \ number that has gone on.\nThe second variable is the 16-character name of the\
    \ input relay.\n Lista varbinds:\n   mtrapargsString\n   dm3StatusInRlyIndex\n\
    \   dm3StatusInRlyName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An input relay has gone on in the\
    \ DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcLVDImminentAlarm
  eventName: APCdcLVDImminentAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A LVD Imminent alarm is active in the powerplant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A LVD Imminent alarm is active in the powerplant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A LVD Imminent alarm is active in\
    \ the powerplant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcLVDImminentAlarmCleared
  eventName: APCdcLVDImminentAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A LVD Imminent alarm is no longer active in the powerplant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A LVD Imminent alarm is no longer active in the powerplant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A LVD Imminent alarm is no longer\
    \ active in the powerplant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMainsFailAlarm
  eventName: APCdcMainsFailAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Mains Fail alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Mains Fail alarm is active in the DC power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Mains Fail alarm is active in\
    \ the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMainsFailAlarmCleared
  eventName: APCdcMainsFailAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Mains Fail alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Mains Fail alarm is no longer active in the DC power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Mains Fail alarm is no longer active\
    \ in the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMajorAlarm
  eventName: APCdcMajorAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Major alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "SEVERE: A Major alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Major alarm is active in the DC\
    \ power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMajorAlarmCleared
  eventName: APCdcMajorAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Major alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Major alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Major alarm is no longer active\
    \ in the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMinorAlarm
  eventName: APCdcMinorAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Minor alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Minor alarm is active in the DC power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Minor alarm is active in the DC\
    \ power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMinorAlarmCleared
  eventName: APCdcMinorAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Minor alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Minor alarm is no longer active in the DC power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Minor alarm is no longer active\
    \ in the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMultRectFailAlarm
  eventName: APCdcMultRectFailAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Multiple Rect. Fail alarm is active in the powerplant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "WARNING: Multiple Rect. Fail alarm is active in the powerplant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Multiple Rect. Fail alarm is active\
    \ in the powerplant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcMultRectFailAlarmCleared
  eventName: APCdcMultRectFailAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Multiple Rect Fail alarm is no longer active in the powerplant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Multiple Rect Fail alarm is no longer active in the\
    \ powerplant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Multiple Rect Fail alarm is no longer\
    \ active in the powerplant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcOutputRelayOff
  eventName: APCdcOutputRelayOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An output relay for the powerplant has been deactivated\
    \ (state changed to off).\nThe first variable is an integer representing the output\
    \ relay number that has gone off.\nThe second variable is the 16-character name\
    \ of the output relay.\n Lista varbinds:\n   dm3StatusOutRlyName\n   mtrapargsString\n\
    \   dm3StatusOutRlyIndex"
  explanation: "INFORMATIONAL: An output relay for the powerplant has been deactivated\
    \ (state changed to off).\nThe first variable is an integer representing the output\
    \ relay number that has gone off.\nThe second variable is the 16-character name\
    \ of the output relay.\n Lista varbinds:\n   dm3StatusOutRlyName\n   mtrapargsString\n\
    \   dm3StatusOutRlyIndex"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An output relay has gone off in\
    \ the DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcOutputRelayOn
  eventName: APCdcOutputRelayOn
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An output relay for the powerplant has been activated (state\
    \ changed to on).\nThe first variable is an integer representing the output relay\
    \ number that has gone on.\nThe second variable is the 16-character name of the\
    \ output relay.\n Lista varbinds:\n   dm3StatusOutRlyName\n   mtrapargsString\n\
    \   dm3StatusOutRlyIndex"
  explanation: "WARNING: An output relay for the powerplant has been activated (state\
    \ changed to on).\nThe first variable is an integer representing the output relay\
    \ number that has gone on.\nThe second variable is the 16-character name of the\
    \ output relay.\n Lista varbinds:\n   dm3StatusOutRlyName\n   mtrapargsString\n\
    \   dm3StatusOutRlyIndex"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An output relay has gone on in the\
    \ DC power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcPINChanged
  eventName: APCdcPINChanged
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The active PIN on the DC controller has been changed.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The active PIN on the DC controller has been changed.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The active PIN on the DC controller\
    \ has been changed.'\n"
- action: add_eventmapping
  eventClassKey: APCdcRectifierFailAlarm
  eventName: APCdcRectifierFailAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Rect. Fail alarm is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Rect. Fail alarm is active in the power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rect. Fail alarm is active in\
    \ the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcRectifierFailAlarmCleared
  eventName: APCdcRectifierFailAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Rect. Fail alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Rect. Fail alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Rect. Fail alarm is no longer active\
    \ in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcRectifierOVPAlarm
  eventName: APCdcRectifierOVPAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Rect. OVP alarm is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Rect. OVP alarm is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rect. OVP alarm is active in the\
    \ power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcRectifierOVPAlarmCleared
  eventName: APCdcRectifierOVPAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Rect. OVP alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Rect. OVP alarm is no longer active in the power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rect. OVP alarm is no longer active\
    \ in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcRectifierOvertempAlarm
  eventName: APCdcRectifierOvertempAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Rect. Overtemp alarm is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: Rect. Overtemp alarm is active in the power plant.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Rect. Overtemp alarm is active in\
    \ the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcRectifierOvertempAlarmCleared
  eventName: APCdcRectifierOvertempAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Rect. Overtemp alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Rect. Overtemp alarm is no longer active in the power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Rect. Overtemp alarm is no longer\
    \ active in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcTemperatureAlarm
  eventName: APCdcTemperatureAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Temperature is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A Temperature is active in the power plant.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Temperature alarm is active in\
    \ the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdcTemperatureAlarmCleared
  eventName: APCdcTemperatureAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Temperature alarm is no longer active in the power plant.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Temperature alarm is no longer active in the power\
    \ plant.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Temperature alarm is no longer\
    \ active in the power plant.'\n"
- action: add_eventmapping
  eventClassKey: APCdeviceStatusChange
  eventName: APCdeviceStatusChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The status of the device being monitored has changed.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The status of the device being monitored has changed.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The status of the device being monitored\
    \ has changed.'\n"
- action: add_eventmapping
  eventClassKey: APCdischargeCleared
  eventName: APCdischargeCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A UPS discharge condition has been cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A UPS discharge condition has been cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI en funcionamiento. (Baterias\
    \ en Carga)'\n"
- action: add_eventmapping
  eventClassKey: APCemsAlinkPowerOverload
  eventName: APCemsAlinkPowerOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Alink Power Overload.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: Alink Power Overload.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Alink Power Overload.'\n"
- action: add_eventmapping
  eventClassKey: APCemsAlinkPowerOverloadCleared
  eventName: APCemsAlinkPowerOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Alink Power Overload Cleared.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: Alink Power Overload Cleared.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Alink Power Overload Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCemsBeaconConnected
  eventName: APCemsBeaconConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A beacon has been connected to the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A beacon has been connected to the EMS.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon Connected.'\n"
- action: add_eventmapping
  eventClassKey: APCemsBeaconDisconnected
  eventName: APCemsBeaconDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A beacon has been disconnected from the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: A beacon has been disconnected from the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon Disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCemsBeaconOff
  eventName: APCemsBeaconOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A EMS beacon has gone off.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A EMS beacon has gone off.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon Off.'\n"
- action: add_eventmapping
  eventClassKey: APCemsBeaconOn
  eventName: APCemsBeaconOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A EMS beacon has gone on.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A EMS beacon has gone on.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Beacon On.'\n"
- action: add_eventmapping
  eventClassKey: APCemsCommunicationEstablished
  eventName: APCemsCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communication Established.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communication Established.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Established.'\n"
- action: add_eventmapping
  eventClassKey: APCemsCommunicationLost
  eventName: APCemsCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communication Lost.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: Communication Lost.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCemsDeviceConfigChange
  eventName: APCemsDeviceConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A device configuration change has been made on the EMS.\n\
    The first argument is the EMS serial number.\nThe second argument is the EMS name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A device configuration change has been made on the\
    \ EMS.\nThe first argument is the EMS serial number.\nThe second argument is the\
    \ EMS name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n \
    \  mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A device configuration change has\
    \ been made on a EMS.'\n"
- action: add_eventmapping
  eventClassKey: APCemsHardwareStateAbnormal
  eventName: APCemsHardwareStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's hardware is improperly configured and operating outside\n\
    normal bounds for the hardware.  This can be caused by improper devices being\n\
    connected to the EMS ports or Alink Current limit detection.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The device's hardware is improperly configured and operating\
    \ outside\nnormal bounds for the hardware.  This can be caused by improper devices\
    \ being\nconnected to the EMS ports or Alink Current limit detection.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Hardware is in an abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsHardwareStateNormal
  eventName: APCemsHardwareStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's hardware is in its normal operational state.\n\
    The first argument is the host device serial number.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: The device's hardware is in its normal operational\
    \ state.\nThe first argument is the host device serial number.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Hardware is in its normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsInputContactStateAbnormal
  eventName: APCemsInputContactStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An input contact on the EMS has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the input contact number. \nThe fourth\
    \ argument is the input contact name.\nThe fifth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n  \
    \ emsInputContactStatusInputContactState\n   emsInputContactStatusInputContactIndex\n\
    \   emsInputContactStatusInputContactNormalState\n   emsIdentSerialNumber\n  \
    \ emsInputContactStatusInputContactName\n   mtrapargsString"
  explanation: "WARNING: An input contact on the EMS has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the input contact number. \nThe fourth\
    \ argument is the input contact name.\nThe fifth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n  \
    \ emsInputContactStatusInputContactState\n   emsInputContactStatusInputContactIndex\n\
    \   emsInputContactStatusInputContactNormalState\n   emsIdentSerialNumber\n  \
    \ emsInputContactStatusInputContactName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input contact has changed to its\
    \ abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsInputContactStateNormal
  eventName: APCemsInputContactStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An input contact on the EMS has changed to its normal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the input contact number. \nThe fourth\
    \ argument is the input contact name.\nThe fifth argument is the input contact\
    \ state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal input\
    \ contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n  \
    \ emsInputContactStatusInputContactState\n   emsInputContactStatusInputContactIndex\n\
    \   emsInputContactStatusInputContactNormalState\n   emsIdentSerialNumber\n  \
    \ emsInputContactStatusInputContactName\n   mtrapargsString"
  explanation: "INFORMATIONAL: An input contact on the EMS has changed to its normal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal\
    \ input contact state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsInputContactStatusInputContactState\n   emsInputContactStatusInputContactIndex\n\
    \   emsInputContactStatusInputContactNormalState\n   emsIdentSerialNumber\n  \
    \ emsInputContactStatusInputContactName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input contact has changed to its\
    \ normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsMajorAlarm
  eventName: APCemsMajorAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Major Alarm is present in the EMS.\nThe first argument is the\
    \ EMS serial number.\nThe second argument is the EMS name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: A Major Alarm is present in the EMS.\nThe first argument is\
    \ the EMS serial number.\nThe second argument is the EMS name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Major Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCemsMajorAlarmCleared
  eventName: APCemsMajorAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Major Alarm condition has been cleared in the EMS.\n\
    The first argument is the EMS serial number.\nThe second argument is the EMS name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Major Alarm condition has been cleared in the EMS.\n\
    The first argument is the EMS serial number.\nThe second argument is the EMS name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Major Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCemsMinorAlarm
  eventName: APCemsMinorAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Minor Alarm is present in the EMS.\nThe first argument is the\
    \ EMS serial number.\nThe second argument is the EMS name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: A Minor Alarm is present in the EMS.\nThe first argument is\
    \ the EMS serial number.\nThe second argument is the EMS name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Minor Alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCemsMinorAlarmCleared
  eventName: APCemsMinorAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Minor Alarm condition has been cleared in the EMS.\n\
    The first argument is the EMS serial number.\nThe second argument is the EMS name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A Minor Alarm condition has been cleared in the EMS.\n\
    The first argument is the EMS serial number.\nThe second argument is the EMS name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Minor Alarm Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCemsOutletStateAbnormal
  eventName: APCemsOutletStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An outlet on the EMS has changed to its abnormal state.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the outlet number. \nThe fourth argument\
    \ is the outlet name.\nThe fifth argument is the current outlet state (1=ON, 2=OFF).\n\
    The sixth argument is the configured normal outlet state (1=ON, 2=OFF).\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsOutletStatusOutletIndex\n   emsOutletStatusOutletState\n\
    \   emsOutletStatusOutletNormalState\n   emsIdentSerialNumber\n   emsOutletStatusOutletName\n\
    \   mtrapargsString"
  explanation: "WARNING: An outlet on the EMS has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the outlet number. \nThe fourth argument\
    \ is the outlet name.\nThe fifth argument is the current outlet state (1=ON, 2=OFF).\n\
    The sixth argument is the configured normal outlet state (1=ON, 2=OFF).\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsOutletStatusOutletIndex\n   emsOutletStatusOutletState\n\
    \   emsOutletStatusOutletNormalState\n   emsIdentSerialNumber\n   emsOutletStatusOutletName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has changed to its abnormal\
    \ state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsOutletStateNormal
  eventName: APCemsOutletStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on the EMS has changed to its normal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the outlet number. \nThe fourth argument\
    \ is the outlet name.\nThe fifth argument is the current outlet state (1=ON, 2=OFF).\n\
    The sixth argument is the configured normal outlet state (1=ON, 2=OFF).\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsOutletStatusOutletIndex\n   emsOutletStatusOutletState\n\
    \   emsOutletStatusOutletNormalState\n   emsIdentSerialNumber\n   emsOutletStatusOutletName\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet on the EMS has changed to its normal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the outlet number. \nThe fourth argument\
    \ is the outlet name.\nThe fifth argument is the current outlet state (1=ON, 2=OFF).\n\
    The sixth argument is the configured normal outlet state (1=ON, 2=OFF).\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsOutletStatusOutletIndex\n   emsOutletStatusOutletState\n\
    \   emsOutletStatusOutletNormalState\n   emsIdentSerialNumber\n   emsOutletStatusOutletName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has changed to its normal\
    \ state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsOutputRelayStateAbnormal
  eventName: APCemsOutputRelayStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: An output relay on the EMS has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the output relay number. \nThe fourth\
    \ argument is the output relay name.\nThe fifth argument is the current output\
    \ relay state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal\
    \ output relay state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsOutputRelayStatusOutputRelayState\n   emsOutputRelayStatusOutputRelayIndex\n\
    \   emsOutputRelayStatusOutputRelayName\n   emsIdentSerialNumber\n   emsOutputRelayStatusOutputRelayNormalState\n\
    \   mtrapargsString"
  explanation: "WARNING: An output relay on the EMS has changed to its abnormal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the output relay number. \nThe fourth\
    \ argument is the output relay name.\nThe fifth argument is the current output\
    \ relay state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal\
    \ output relay state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsOutputRelayStatusOutputRelayState\n   emsOutputRelayStatusOutputRelayIndex\n\
    \   emsOutputRelayStatusOutputRelayName\n   emsIdentSerialNumber\n   emsOutputRelayStatusOutputRelayNormalState\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output Relay has changed to its\
    \ abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsOutputRelayStateNormal
  eventName: APCemsOutputRelayStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An output relay on the EMS has changed to its normal state.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the output relay number. \nThe fourth\
    \ argument is the output relay name.\nThe fifth argument is the current output\
    \ relay state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal\
    \ output relay state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsOutputRelayStatusOutputRelayState\n   emsOutputRelayStatusOutputRelayIndex\n\
    \   emsOutputRelayStatusOutputRelayName\n   emsIdentSerialNumber\n   emsOutputRelayStatusOutputRelayNormalState\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An output relay on the EMS has changed to its normal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the output relay number. \n\
    The fourth argument is the output relay name.\nThe fifth argument is the current\
    \ output relay state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured\
    \ normal output relay state (1=CLOSED, 2=OPEN).\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsOutputRelayStatusOutputRelayState\n   emsOutputRelayStatusOutputRelayIndex\n\
    \   emsOutputRelayStatusOutputRelayName\n   emsIdentSerialNumber\n   emsOutputRelayStatusOutputRelayNormalState\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output Relay has changed to its\
    \ normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCemsProbeConnected
  eventName: APCemsProbeConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A probe has been connected to the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the probe number. \nThe fourth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: A probe has been connected to the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the probe number. \nThe fourth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Probe Connected.'\n"
- action: add_eventmapping
  eventClassKey: APCemsProbeDisconnected
  eventName: APCemsProbeDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A probe has been disconnected from the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the probe number. \nThe fourth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  explanation: "SEVERE: A probe has been disconnected from the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the probe number. \nThe fourth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Probe Disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCemsSensorConnected
  eventName: APCemsSensorConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A sensor has been connected to the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the sensor number. \nThe fourth argument is the sensor name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   emsSensorStatusSensorIndex\n\
    \   emsSensorStatusSensorName\n   mtrapargsString"
  explanation: "INFORMATIONAL: A sensor has been connected to the EMS.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the sensor number. \nThe fourth argument\
    \ is the sensor name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   emsSensorStatusSensorIndex\n   emsSensorStatusSensorName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Sensor Connected.'\n"
- action: add_eventmapping
  eventClassKey: APCemsSensorDisconnected
  eventName: APCemsSensorDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A sensor has been disconnected from the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the sensor number. \nThe fourth argument is the sensor name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   emsSensorStatusSensorIndex\n\
    \   emsSensorStatusSensorName\n   mtrapargsString"
  explanation: "SEVERE: A sensor has been disconnected from the EMS.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the sensor number. \nThe fourth argument is the sensor name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   emsSensorStatusSensorIndex\n\
    \   emsSensorStatusSensorName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Sensor Disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCemsSensorFault
  eventName: APCemsSensorFault
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A EMS sensor is in the fault condition.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the sensor number. \nThe fourth argument is the sensor name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   emsSensorStatusSensorIndex\n\
    \   emsSensorStatusSensorName\n   mtrapargsString"
  explanation: "SEVERE: A EMS sensor is in the fault condition.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the sensor number. \nThe fourth argument is the sensor name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   emsSensorStatusSensorIndex\n\
    \   emsSensorStatusSensorName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Sensor Fault.'\n"
- action: add_eventmapping
  eventClassKey: APCemsSensorFaultCleared
  eventName: APCemsSensorFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A EMS sensor fault condition has cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the sensor number. \nThe fourth argument is the sensor name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n   emsSensorStatusSensorIndex\n\
    \   emsSensorStatusSensorName\n   mtrapargsString"
  explanation: "INFORMATIONAL: A EMS sensor fault condition has cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the sensor number. \nThe fourth argument\
    \ is the sensor name.\n Lista varbinds:\n   emsIdentEMSName\n   emsIdentSerialNumber\n\
    \   emsSensorStatusSensorIndex\n   emsSensorStatusSensorName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Sensor Fault Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvAlinkCommunicationEstablished
  eventName: APCenvAlinkCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Remote Probe Communication Established.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the probe number. \nThe fourth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: Remote Probe Communication Established.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the probe number. \nThe fourth argument\
    \ is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Established.'\n"
- action: add_eventmapping
  eventClassKey: APCenvAlinkCommunicationLost
  eventName: APCenvAlinkCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Remote Probe Communication Lost.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the probe number. \nThe fourth argument is the probe name.\n Lista\
    \ varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  explanation: "SEVERE: Remote Probe Communication Lost.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the probe number. \nThe fourth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCenvHighHumidityThresholdViolation
  eventName: APCenvHighHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: High humidity threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current humidity\nThe fourth argument is the probe number.\
    \ \nThe fifth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "SEVERE: High humidity threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current humidity\nThe fourth argument\
    \ is the probe number. \nThe fifth argument is the probe name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvHighHumidityThresholdViolationCleared
  eventName: APCenvHighHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "INFORMATIONAL: High humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvHighTempThresholdViolation
  eventName: APCenvHighTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: High temperature threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current temperature. \nThe fourth argument\
    \ is the temperature scale. \nThe fifth argument is the probe number. \nThe sixth\
    \ argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: High temperature threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current temperature. \nThe fourth argument\
    \ is the temperature scale. \nThe fifth argument is the probe number. \nThe sixth\
    \ argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvHighTempThresholdViolationCleared
  eventName: APCenvHighTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High temperature threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: High temperature threshold violation cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLTDecTempRateViolation
  eventName: APCenvLTDecTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Long-term decreasing temperature rate violated on the probe. \n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the current temperature. \nThe fourth\
    \ argument is the temperature scale. \nThe fifth argument is the probe number.\
    \ \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Long-term decreasing temperature rate violated on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm dec. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLTDecTempRateViolationCleared
  eventName: APCenvLTDecTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Long-term decreasing temperature rate cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Long-term decreasing temperature rate cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm dec. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLTIncTempRateViolation
  eventName: APCenvLTIncTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Long-term increasing temperature rate violated on the probe. \n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the current temperature. \nThe fourth\
    \ argument is the temperature scale. \nThe fifth argument is the probe number.\
    \ \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Long-term increasing temperature rate violated on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm inc. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLTIncTempRateViolationCleared
  eventName: APCenvLTIncTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Long-term increasing temperature rate cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Long-term increasing temperature rate cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Longterm inc. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLowHumidityThresholdViolation
  eventName: APCenvLowHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Low humidity threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current humidity\nThe fourth argument is the probe number.\
    \ \nThe fifth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "SEVERE: Low humidity threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current humidity\nThe fourth argument\
    \ is the probe number. \nThe fifth argument is the probe name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLowHumidityThresholdViolationCleared
  eventName: APCenvLowHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "INFORMATIONAL: Low humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLowTempThresholdViolation
  eventName: APCenvLowTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Low temperature threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current temperature. \nThe fourth argument is the temperature\
    \ scale. \nThe fifth argument is the probe number. \nThe sixth argument is the\
    \ probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Low temperature threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current temperature. \nThe fourth argument\
    \ is the temperature scale. \nThe fifth argument is the probe number. \nThe sixth\
    \ argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvLowTempThresholdViolationCleared
  eventName: APCenvLowTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low temperature threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Low temperature threshold violation cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMaxHumidityThresholdViolation
  eventName: APCenvMaxHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Max humidity threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current humidity\nThe fourth argument is the probe number.\
    \ \nThe fifth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "SEVERE: Max humidity threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current humidity\nThe fourth argument\
    \ is the probe number. \nThe fifth argument is the probe name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMaxHumidityThresholdViolationCleared
  eventName: APCenvMaxHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Max humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "INFORMATIONAL: Max humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMaxTempThresholdViolation
  eventName: APCenvMaxTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Max temperature threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current temperature. \nThe fourth argument is the temperature\
    \ scale. \nThe fifth argument is the probe number. \nThe sixth argument is the\
    \ probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Max temperature threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current temperature. \nThe fourth argument\
    \ is the temperature scale. \nThe fifth argument is the probe number. \nThe sixth\
    \ argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMaxTempThresholdViolationCleared
  eventName: APCenvMaxTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Max temperature threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Max temperature threshold violation cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Max temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMinHumidityThresholdViolation
  eventName: APCenvMinHumidityThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Min humidity threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current humidity\nThe fourth argument is the probe number.\
    \ \nThe fifth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "SEVERE: Min humidity threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current humidity\nThe fourth argument\
    \ is the probe number. \nThe fifth argument is the probe name.\n Lista varbinds:\n\
    \   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMinHumidityThresholdViolationCleared
  eventName: APCenvMinHumidityThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Min humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  explanation: "INFORMATIONAL: Min humidity threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current humidity. \nThe\
    \ fourth argument is the probe number. \nThe fifth argument is the probe name.\n\
    \ Lista varbinds:\n   emsIdentEMSName\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeHumidity\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min humidity threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMinTempThresholdViolation
  eventName: APCenvMinTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Min temperature threshold violated on the probe. \nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the current temperature. \nThe fourth argument is the temperature\
    \ scale. \nThe fifth argument is the probe number. \nThe sixth argument is the\
    \ probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Min temperature threshold violated on the probe. \nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the current temperature. \nThe fourth argument\
    \ is the temperature scale. \nThe fifth argument is the probe number. \nThe sixth\
    \ argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n   emsStatusSysTempUnits\n\
    \   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n   emsIdentSerialNumber\n\
    \   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvMinTempThresholdViolationCleared
  eventName: APCenvMinTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Min temperature threshold violation cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Min temperature threshold violation cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Min temperature threshold violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvSTDecTempRateViolation
  eventName: APCenvSTDecTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Short-term decreasing temperature rate violated on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Short-term decreasing temperature rate violated on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm dec. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvSTDecTempRateViolationCleared
  eventName: APCenvSTDecTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Short-term decreasing temperature rate cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Short-term decreasing temperature rate cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm dec. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCenvSTIncTempRateViolation
  eventName: APCenvSTIncTempRateViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Short-term increasing temperature rate violated on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "SEVERE: Short-term increasing temperature rate violated on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm inc. temp rate violation.'\n"
- action: add_eventmapping
  eventClassKey: APCenvSTIncTempRateViolationCleared
  eventName: APCenvSTIncTempRateViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Short-term increasing temperature rate cleared on the probe.\
    \ \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  explanation: "INFORMATIONAL: Short-term increasing temperature rate cleared on the\
    \ probe. \nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the current temperature. \n\
    The fourth argument is the temperature scale. \nThe fifth argument is the probe\
    \ number. \nThe sixth argument is the probe name.\n Lista varbinds:\n   emsIdentEMSName\n\
    \   emsStatusSysTempUnits\n   emsProbeStatusProbeName\n   emsProbeStatusProbeIndex\n\
    \   emsIdentSerialNumber\n   emsProbeStatusProbeTemperature\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Shortterm inc. temp rate violation\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCextBatteryFrameDecrease
  eventName: APCextBatteryFrameDecrease
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An external battery frame has been removed.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An external battery frame has been removed.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An external battery frame has been\
    \ removed.'\n"
- action: add_eventmapping
  eventClassKey: APCextBatteryFrameIncease
  eventName: APCextBatteryFrameIncease
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An external battery frame has been added.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An external battery frame has been added.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An external battery frame has been\
    \ added.'\n"
- action: add_eventmapping
  eventClassKey: APCexternalSwitchGearClosed
  eventName: APCexternalSwitchGearClosed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: External Switch Gear closed.\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: External Switch Gear closed.\n Lista varbinds:\n  \
    \ mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'External Switch Gear closed.'\n"
- action: add_eventmapping
  eventClassKey: APCexternalSwitchGearOpened
  eventName: APCexternalSwitchGearOpened
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: External Switch Gear opened.\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: External Switch Gear opened.\n Lista varbinds:\n  \
    \ mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'External Switch Gear opened.'\n"
- action: add_eventmapping
  eventClassKey: APCgeneralDeviceEvent
  eventName: APCgeneralDeviceEvent
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: APC Device event.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: APC Device event.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'APC Device event.'\n"
- action: add_eventmapping
  eventClassKey: APCgracefullShutdown
  eventName: APCgracefullShutdown
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A graceful shutdown has been initiated.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A graceful shutdown has been initiated.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Inicio Cierre controlado.'\n"
- action: add_eventmapping
  eventClassKey: APChardwareFailureBypass
  eventName: APChardwareFailureBypass
  eventPath: /CYIIG/SAI_APC/APCswitchedBypass
  example: "SEVERE: UPS on bypass due to internal fault\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: UPS on bypass due to internal fault\n Lista varbinds:\n  \
    \ mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fallo interno, funcionamiento en\
    \ BYPASS'\n"
- action: add_eventmapping
  eventClassKey: APChumidityThresholdViolation1
  eventName: APChumidityThresholdViolation1
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Probe 1 humidity threshold violated. The\nfirst variable is the\
    \ current humidity.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Probe 1 humidity threshold violated. The\nfirst variable is\
    \ the current humidity.\n Lista varbinds:\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A humidity threshold has been violated\
    \ on probe 1.'\n"
- action: add_eventmapping
  eventClassKey: APChumidityThresholdViolation2
  eventName: APChumidityThresholdViolation2
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An Environmental Monitor humidity threshold has been violated\
    \ on probe 2.\nThe first variable is the current humidity.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: An Environmental Monitor humidity threshold has been violated\
    \ on probe 2.\nThe first variable is the current humidity.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A humidity threshold has been violated\
    \ on probe 2.'\n"
- action: add_eventmapping
  eventClassKey: APChumidityThresholdViolationCleared1
  eventName: APChumidityThresholdViolationCleared1
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Environmental Monitor humidity threshold violation has\
    \ been cleared on probe 1.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: An Environmental Monitor humidity threshold violation\
    \ has been cleared on probe 1.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A humidity threshold violation has\
    \ been cleared on probe 1.'\n"
- action: add_eventmapping
  eventClassKey: APChumidityThresholdViolationCleared2
  eventName: APChumidityThresholdViolationCleared2
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Environmental Monitor humidity threshold violation has\
    \ been cleared on probe 2.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: An Environmental Monitor humidity threshold violation\
    \ has been cleared on probe 2.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A humidity threshold violation has\
    \ been cleared on probe 2.'\n"
- action: add_eventmapping
  eventClassKey: APCiemContactFault
  eventName: APCiemContactFault
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: There is a contact fault on the Integrated\nEnvironmental Monitor.\
    \ The first argument is the number\nof the contact. The second argument is the\
    \ name of the\ncontact.\n Lista varbinds:\n   iemStatusContactNumber\n   iemStatusContactName\n\
    \   mtrapargsString"
  explanation: "SEVERE: There is a contact fault on the Integrated\nEnvironmental\
    \ Monitor. The first argument is the number\nof the contact. The second argument\
    \ is the name of the\ncontact.\n Lista varbinds:\n   iemStatusContactNumber\n\
    \   iemStatusContactName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Contact fault.'\n"
- action: add_eventmapping
  eventClassKey: APCiemContactFaultCleared
  eventName: APCiemContactFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The contact fault on the Integrated\nEnvironmental Monitor\
    \ has been cleared. The first\nargument is the number of the contact. The second\n\
    argument is the name of the contact.\n Lista varbinds:\n   iemStatusContactNumber\n\
    \   iemStatusContactName\n   mtrapargsString"
  explanation: "INFORMATIONAL: The contact fault on the Integrated\nEnvironmental\
    \ Monitor has been cleared. The first\nargument is the number of the contact.\
    \ The second\nargument is the name of the contact.\n Lista varbinds:\n   iemStatusContactNumber\n\
    \   iemStatusContactName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Contact fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCiemHighHumidThresholdViolation
  eventName: APCiemHighHumidThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: High humidity threshold violated on integrated\nprobe. The first\
    \ variable is the current humidity. The\nsecond variable is the probe number.\
    \ The third variable\nis the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n\
    \   mtrapargsString\n   iemStatusProbeName\n   iemStatusProbeCurrentHumid"
  explanation: "SEVERE: High humidity threshold violated on integrated\nprobe. The\
    \ first variable is the current humidity. The\nsecond variable is the probe number.\
    \ The third variable\nis the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n\
    \   mtrapargsString\n   iemStatusProbeName\n   iemStatusProbeCurrentHumid"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCiemHighHumidThresholdViolationCleared
  eventName: APCiemHighHumidThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High humidity threshold violated on integrated\nprobe cleared.\
    \ The first variable is the probe number. The second\nvariable is the probe name.\n\
    \ Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeName\n   mtrapargsString"
  explanation: "INFORMATIONAL: High humidity threshold violated on integrated\nprobe\
    \ cleared. The first variable is the probe number. The second\nvariable is the\
    \ probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High humidity threshold violation\
    \ has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCiemHighTempThresholdViolation
  eventName: APCiemHighTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: High temperature threshold violated on Integrated\nEnvironmental\
    \ Monitor probe. The first variable is the\ncurrent temperature. The second variable\
    \ is the temperature\nscale. The third variable is the probe number. The fourth\n\
    variable is the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeTempUnits\n\
    \   iemStatusProbeName\n   mtrapargsString\n   iemStatusProbeCurrentTemp"
  explanation: "SEVERE: High temperature threshold violated on Integrated\nEnvironmental\
    \ Monitor probe. The first variable is the\ncurrent temperature. The second variable\
    \ is the temperature\nscale. The third variable is the probe number. The fourth\n\
    variable is the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeTempUnits\n\
    \   iemStatusProbeName\n   mtrapargsString\n   iemStatusProbeCurrentTemp"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCiemHighTempThresholdViolationCleared
  eventName: APCiemHighTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: High temperature threshold violated on Integrated\nEnvironmental\
    \ Monitor probe has been cleared. The first variable\nis the probe number. The\
    \ second variable is the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n\
    \   iemStatusProbeName\n   mtrapargsString"
  explanation: "INFORMATIONAL: High temperature threshold violated on Integrated\n\
    Environmental Monitor probe has been cleared. The first variable\nis the probe\
    \ number. The second variable is the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n\
    \   iemStatusProbeName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'High temperature threshold violation\
    \ has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCiemLowHumidThresholdViolation
  eventName: APCiemLowHumidThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Low humidity threshold violated on integrated\nprobe. The first\
    \ variable is the current humidity. The\nsecond variable is the probe number.\
    \ The third variable\nis the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n\
    \   mtrapargsString\n   iemStatusProbeName\n   iemStatusProbeCurrentHumid"
  explanation: "SEVERE: Low humidity threshold violated on integrated\nprobe. The\
    \ first variable is the current humidity. The\nsecond variable is the probe number.\
    \ The third variable\nis the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n\
    \   mtrapargsString\n   iemStatusProbeName\n   iemStatusProbeCurrentHumid"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low humidity threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCiemLowHumidThresholdViolationCleared
  eventName: APCiemLowHumidThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low humidity threshold violated on integrated\nprobe cleared.\
    \ The first variable is the probe number. The second\nvariable is the probe name.\n\
    \ Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeName\n   mtrapargsString"
  explanation: "INFORMATIONAL: Low humidity threshold violated on integrated\nprobe\
    \ cleared. The first variable is the probe number. The second\nvariable is the\
    \ probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low humidity threshold violation\
    \ has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCiemLowTempThresholdViolation
  eventName: APCiemLowTempThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Low temperature threshold violated on integrated\nprobe. The first\
    \ variable is the current temperature. The\nsecond variable is the temperature\
    \ scale. The third\nvariable is the probe number. The fourth variable is the\n\
    probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeTempUnits\n\
    \   iemStatusProbeName\n   mtrapargsString\n   iemStatusProbeCurrentTemp"
  explanation: "SEVERE: Low temperature threshold violated on integrated\nprobe. The\
    \ first variable is the current temperature. The\nsecond variable is the temperature\
    \ scale. The third\nvariable is the probe number. The fourth variable is the\n\
    probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeTempUnits\n\
    \   iemStatusProbeName\n   mtrapargsString\n   iemStatusProbeCurrentTemp"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low temperature threshold violation.'\n"
- action: add_eventmapping
  eventClassKey: APCiemLowTempThresholdViolationCleared
  eventName: APCiemLowTempThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low temperature threshold violated on integrated\nprobe\
    \ has been cleared. The first variable is the probe number.\nThe second variable\
    \ is the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeName\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: Low temperature threshold violated on integrated\n\
    probe has been cleared. The first variable is the probe number.\nThe second variable\
    \ is the probe name.\n Lista varbinds:\n   iemStatusProbeNumber\n   iemStatusProbeName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Low temperature threshold violation\
    \ has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCiemProbeConnected
  eventName: APCiemProbeConnected
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The temperature/humidity probe on the Integrated\nEnvironmental\
    \ Monitor has been connected. This trap is generated\nwhen the Environmental Monitor\
    \ establishes communication with a\nprobe that had previously not been connected.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The temperature/humidity probe on the Integrated\n\
    Environmental Monitor has been connected. This trap is generated\nwhen the Environmental\
    \ Monitor establishes communication with a\nprobe that had previously not been\
    \ connected.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Probe has been connected.'\n"
- action: add_eventmapping
  eventClassKey: APCiemProbeDisconnected
  eventName: APCiemProbeDisconnected
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The temperature/humidity probe on the Integrated\nEnvironmental\
    \ Monitor has been disconnected. This trap is\ngenerated when a probe that has\
    \ been in communication with\nthe Environmental Monitor has been disconnected\
    \ or can no\nlonger communicate.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The temperature/humidity probe on the Integrated\nEnvironmental\
    \ Monitor has been disconnected. This trap is\ngenerated when a probe that has\
    \ been in communication with\nthe Environmental Monitor has been disconnected\
    \ or can no\nlonger communicate.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Probe has been disconnected.'\n"
- action: add_eventmapping
  eventClassKey: APCiemRelayFault
  eventName: APCiemRelayFault
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The output relay on the Integrated Environmental\nMonitor has\
    \ switched to the fault state. The first\nargument is the number of the output\
    \ relay. The second\nargument is the name of the output relay. The third\nargument\
    \ is the event that caused the fault.\n Lista varbinds:\n   iemStatusRelayNumber\n\
    \   mtrapargsString02\n   mtrapargsString\n   iemStatusRelayName"
  explanation: "SEVERE: The output relay on the Integrated Environmental\nMonitor\
    \ has switched to the fault state. The first\nargument is the number of the output\
    \ relay. The second\nargument is the name of the output relay. The third\nargument\
    \ is the event that caused the fault.\n Lista varbinds:\n   iemStatusRelayNumber\n\
    \   mtrapargsString02\n   mtrapargsString\n   iemStatusRelayName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output relay has faulted.'\n"
- action: add_eventmapping
  eventClassKey: APCiemRelayFaultCleared
  eventName: APCiemRelayFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The fault condition on the output relay on the\nIntegrated\
    \ Environmental Monitor has cleared. The first\nargument is the number of the\
    \ output relay. The second\nargument is the name of the output relay.\n Lista\
    \ varbinds:\n   iemStatusRelayNumber\n   mtrapargsString\n   iemStatusRelayName"
  explanation: "INFORMATIONAL: The fault condition on the output relay on the\nIntegrated\
    \ Environmental Monitor has cleared. The first\nargument is the number of the\
    \ output relay. The second\nargument is the name of the output relay.\n Lista\
    \ varbinds:\n   iemStatusRelayNumber\n   mtrapargsString\n   iemStatusRelayName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output relay fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCintelligenceModuleInserted
  eventName: APCintelligenceModuleInserted
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An intelligence module has been inserted.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An intelligence module has been inserted.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An intelligence module has been\
    \ inserted.'\n"
- action: add_eventmapping
  eventClassKey: APCintelligenceModuleRemoved
  eventName: APCintelligenceModuleRemoved
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An intelligence module has been removed.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: An intelligence module has been removed.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An intelligence module has been\
    \ removed.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularBreakerOpenAlarm
  eventName: APCisxModularBreakerOpenAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A distribution module breaker is open and in an alarm condition.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the module number.\nThe fourth argument\
    \ is the module breaker(s) (1=L1, 2=L2, 3=L3, 4=L12, 5=L23, 6=L123).\nThe fifth\
    \ argument is the load name associated with the circuit/cable fed by this breaker.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: A distribution module breaker is open and in an alarm condition.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the module number.\nThe fourth argument\
    \ is the module breaker(s) (1=L1, 2=L2, 3=L3, 4=L12, 5=L23, 6=L123).\nThe fifth\
    \ argument is the load name associated with the circuit/cable fed by this breaker.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution breaker open alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularBreakerOpenAlarmCleared
  eventName: APCisxModularBreakerOpenAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An alarm caused by a distribution breaker being open has\
    \ been cleared.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the module number.\n\
    The fourth argument is the breaker(s) (1=L1, 2=L2, 3=L3, 4=L12, 5=L23, 6=L123).\n\
    The fifth argument is the load name associated with the circuit/cable fed by this\
    \ breaker.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: An alarm caused by a distribution breaker being open\
    \ has been cleared.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the module number.\n\
    The fourth argument is the breaker(s) (1=L1, 2=L2, 3=L3, 4=L12, 5=L23, 6=L123).\n\
    The fifth argument is the load name associated with the circuit/cable fed by this\
    \ breaker.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution breaker open alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularDistributionCommEstablished
  eventName: APCisxModularDistributionCommEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communication with a metering segment of the modular \n\
    distribution system has been restored.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the segment number.\nThe fourth argument describes the modules served by\
    \ this metering segment.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Communication with a metering segment of the modular\
    \ \ndistribution system has been restored.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the segment number.\nThe fourth argument describes the modules served by\
    \ this metering segment.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Modular distribution communication\
    \ restored.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularDistributionCommLost
  eventName: APCisxModularDistributionCommLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communication with a metering segment of the modular \ndistribution\
    \ system has been lost.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the segment\
    \ number.\nThe fourth argument describes the modules served by this metering segment.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Communication with a metering segment of the modular \ndistribution\
    \ system has been lost.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the segment\
    \ number.\nThe fourth argument describes the modules served by this metering segment.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Modular distribution communication\
    \ lost.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularDistributionModuleInserted
  eventName: APCisxModularDistributionModuleInserted
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A distribution module has been inserted into the system.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the module location number.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A distribution module has been inserted into the system.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the module location number.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution module inserted.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularDistributionModuleRemoved
  eventName: APCisxModularDistributionModuleRemoved
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A distribution module has been removed from the system.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the module location number.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A distribution module has been removed from the system.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the module location number.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution module removed.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularHighCurrentThresholdViolation
  eventName: APCisxModularHighCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The current in a distribution module is above the high/warning\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: The current in a distribution module is above the high/warning\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current is above the\
    \ warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularHighCurrentThresholdViolationCleared
  eventName: APCisxModularHighCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution module is no longer above\
    \ the high/warning\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution module is no longer above\
    \ the high/warning\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current no longer above\
    \ the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularLowCurrentThresholdViolation
  eventName: APCisxModularLowCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The current in a distribution module is below the low/warning\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: The current in a distribution module is below the low/warning\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current is below the\
    \ warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularLowCurrentThresholdViolationCleared
  eventName: APCisxModularLowCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution module is no longer below\
    \ the low/warning\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution module is no longer below\
    \ the low/warning\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current no longer below\
    \ the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularMaxCurrentThresholdViolation
  eventName: APCisxModularMaxCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The current in a distribution module is above the maximum/critical\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The current in a distribution module is above the maximum/critical\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current is above the\
    \ critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularMaxCurrentThresholdViolationCleared
  eventName: APCisxModularMaxCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution module is no longer above\
    \ the maximum/critical\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution module is no longer above\
    \ the maximum/critical\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current no longer above\
    \ the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularMinCurrentThresholdViolation
  eventName: APCisxModularMinCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The current in a distribution module is below the minimum/critical\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The current in a distribution module is below the minimum/critical\n\
    limit specified for the circuit/cable.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the module number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the threshold, in tenths of Amps, from which\
    \ the alarm was generated.\nThe sixth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current is below the\
    \ critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularMinCurrentThresholdViolationCleared
  eventName: APCisxModularMinCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution module is no longer below\
    \ the minimum/critical\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution module is no longer below\
    \ the minimum/critical\nlimit specified for the circuit/cable.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the module number.\nThe fourth argument is the breaker/phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with\
    \ the circuit/cable fed by this breaker.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsInteger03\n   mtrapargsInteger\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution current no longer below\
    \ the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputFrequencyThresholdViolation
  eventName: APCisxModularOutputFrequencyThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The distribution output frequency is outside of the operating\
    \ range specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the threshold,\
    \ in tenths of Hertz, from which the alarm was generated.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: The distribution output frequency is outside of the operating\
    \ range specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the threshold,\
    \ in tenths of Hertz, from which the alarm was generated.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output frequency out\
    \ of range.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputFrequencyViolationCleared
  eventName: APCisxModularOutputFrequencyViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The distribution output frequency is no longer out of range.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The distribution output frequency is no longer out\
    \ of range.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output frequency no\
    \ longer out of range.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageHighThresholdViolation
  eventName: APCisxModularOutputVoltageHighThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The distribution output voltage is above the high/warning limit\
    \ specified.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts, from\
    \ which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "WARNING: The distribution output voltage is above the high/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage is above\
    \ the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageHighThresholdViolationCleared
  eventName: APCisxModularOutputVoltageHighThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The distribution output voltage is no longer above the\
    \ high/warning limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The distribution output voltage is no longer above\
    \ the high/warning limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage no longer\
    \ above the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageLowThresholdViolation
  eventName: APCisxModularOutputVoltageLowThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The distribution output voltage is below the low/warning limit\
    \ specified.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts, from\
    \ which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "WARNING: The distribution output voltage is below the low/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage is below\
    \ the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageLowThresholdViolationCleared
  eventName: APCisxModularOutputVoltageLowThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The distribution output voltage is no longer below the\
    \ low/warning limit specified.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The distribution output voltage is no longer below\
    \ the low/warning limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage no longer\
    \ below the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageMaxThresholdViolation
  eventName: APCisxModularOutputVoltageMaxThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The distribution output voltage is above the maximum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "SEVERE: The distribution output voltage is above the maximum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage is above\
    \ the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageMaxThresholdViolationCleared
  eventName: APCisxModularOutputVoltageMaxThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The distribution output voltage is no longer above the\
    \ maximum/critical limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The distribution output voltage is no longer above\
    \ the maximum/critical limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage no longer\
    \ above the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageMinThresholdViolation
  eventName: APCisxModularOutputVoltageMinThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The distribution output voltage is below the minimum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "SEVERE: The distribution output voltage is below the minimum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage is below\
    \ the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularOutputVoltageMinThresholdViolationCleared
  eventName: APCisxModularOutputVoltageMinThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The distribution output voltage is no longer below the\
    \ minimum/critical limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The distribution output voltage is no longer below\
    \ the minimum/critical limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution output voltage no longer\
    \ below the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedBreakerOpenAlarm
  eventName: APCisxModularSubfeedBreakerOpenAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A distribution subfeed breaker is open and in an alarm condition.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the subfeed number.\nThe fourth argument\
    \ is the load name associated with the subfeed.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A distribution subfeed breaker is open and in an alarm condition.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the subfeed number.\nThe fourth argument\
    \ is the load name associated with the subfeed.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString04\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed breaker open\
    \ alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedBreakerOpenAlarmCleared
  eventName: APCisxModularSubfeedBreakerOpenAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An alarm caused by a distribution subfeed breaker being\
    \ open has been cleared.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: An alarm caused by a distribution subfeed breaker being\
    \ open has been cleared.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed breaker open\
    \ alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedHighCurrentThresholdViolation
  eventName: APCisxModularSubfeedHighCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The current in a distribution subfeed is above the high/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: The current in a distribution subfeed is above the high/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current is\
    \ above the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedHighCurrentThresholdViolationCleared
  eventName: APCisxModularSubfeedHighCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution subfeed is no longer above\
    \ the high/warning limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the subfeed number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2,\
    \ 3=L3).\nThe fifth argument is the load name associated with the subfeed.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution subfeed is no longer\
    \ above the high/warning limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the subfeed number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current no\
    \ longer above the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedLowCurrentThresholdViolation
  eventName: APCisxModularSubfeedLowCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The current in a distribution subfeed is below the low/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "WARNING: The current in a distribution subfeed is below the low/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current is\
    \ below the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedLowCurrentThresholdViolationCleared
  eventName: APCisxModularSubfeedLowCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution subfeed is no longer below\
    \ the low/warning limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the subfeed number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2,\
    \ 3=L3).\nThe fifth argument is the load name associated with the subfeed.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution subfeed is no longer\
    \ below the low/warning limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the subfeed number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current is\
    \ no longer below the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedMaxCurrentThresholdViolation
  eventName: APCisxModularSubfeedMaxCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The current in a distribution subfeed is above the maximum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The current in a distribution subfeed is above the maximum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current is\
    \ above the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedMaxCurrentThresholdViolationCleared
  eventName: APCisxModularSubfeedMaxCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution subfeed is no longer above\
    \ the maximum/critical limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the subfeed number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution subfeed is no longer\
    \ above the maximum/critical limit specified.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the subfeed number.\nThe fourth argument is the breaker/phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with the\
    \ subfeed.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current no\
    \ longer above the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedMinCurrentThresholdViolation
  eventName: APCisxModularSubfeedMinCurrentThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The current in a distribution subfeed is below the minimum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The current in a distribution subfeed is below the minimum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the subfeed\
    \ number.\nThe fourth argument is the breaker/phase index (1=L1, 2=L2, 3=L3).\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\nThe sixth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current is\
    \ below the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularSubfeedMinCurrentThresholdViolationCleared
  eventName: APCisxModularSubfeedMinCurrentThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a distribution subfeed is no longer below\
    \ the minimum/critical limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the subfeed number.\nThe fourth argument is the breaker/phase index (1=L1,\
    \ 2=L2, 3=L3).\nThe fifth argument is the load name associated with the subfeed.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: The current in a distribution subfeed is no longer\
    \ below the minimum/critical limit specified.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the subfeed number.\nThe fourth argument is the breaker/phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fifth argument is the load name associated with the\
    \ subfeed.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString04\n\
    \   mtrapargsInteger03\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution subfeed current no\
    \ longer below the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentHighThresholdViolation
  eventName: APCisxModularTotalOutputCurrentHighThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The total output current of the distribution is above the high/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Amps,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "WARNING: The total output current of the distribution is above the\
    \ high/warning limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current is above\
    \ the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentHighThresholdViolationCleared
  eventName: APCisxModularTotalOutputCurrentHighThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The total output current of the distribution is no longer\
    \ above the high/warning limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The total output current of the distribution is no\
    \ longer above the high/warning limit specified.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current no longer\
    \ above the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentLowThresholdViolation
  eventName: APCisxModularTotalOutputCurrentLowThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The total output current of the distribution is below the low/warning\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Amps,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "WARNING: The total output current of the distribution is below the\
    \ low/warning limit specified.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ index (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of\
    \ Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current is below\
    \ the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentLowThresholdViolationCleared
  eventName: APCisxModularTotalOutputCurrentLowThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The total output current of the distribution is no longer\
    \ below the low/warning limit specified.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The total output current of the distribution is no\
    \ longer below the low/warning limit specified.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current no longer\
    \ below the warning threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentMaxThresholdViolation
  eventName: APCisxModularTotalOutputCurrentMaxThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The total output current of the distribution is above the maximum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Amps,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "SEVERE: The total output current of the distribution is above the\
    \ maximum/critical limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current is above\
    \ the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentMaxThresholdViolationCleared
  eventName: APCisxModularTotalOutputCurrentMaxThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The total output current of the distribution is no longer\
    \ above the maximum/critical limit specified.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The total output current of the distribution is no\
    \ longer above the maximum/critical limit specified.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n  \
    \ mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current no longer\
    \ above the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentMinThresholdViolation
  eventName: APCisxModularTotalOutputCurrentMinThresholdViolation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The total output current of the distribution is below the minimum/critical\
    \ limit specified.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase index\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in tenths of Amps,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  explanation: "SEVERE: The total output current of the distribution is below the\
    \ minimum/critical limit specified.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase index (1=L1, 2=L2, 3=L3).\nThe fourth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger03\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current is below\
    \ the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTotalOutputCurrentMinThresholdViolationCleared
  eventName: APCisxModularTotalOutputCurrentMinThresholdViolationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The total output current of the distribution is no longer\
    \ below the minimum/critical limit specified.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The total output current of the distribution is no\
    \ longer below the minimum/critical limit specified.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the phase index (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n  \
    \ mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution total current no longer\
    \ below the critical threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTransformerOverheating
  eventName: APCisxModularTransformerOverheating
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The distribution transformer temperature is too hot.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  explanation: "SEVERE: The distribution transformer temperature is too hot.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution transformer temperature\
    \ is too hot.'\n"
- action: add_eventmapping
  eventClassKey: APCisxModularTransformerOverheatingCleared
  eventName: APCisxModularTransformerOverheatingCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The distribution transformer temperature has returned to\
    \ normal.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The distribution transformer temperature has returned\
    \ to normal.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Distribution transformer temperature\
    \ has returned to normal.'\n"
- action: add_eventmapping
  eventClassKey: APClogicPowerSuppliesDecreased
  eventName: APClogicPowerSuppliesDecreased
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The number of system power supplies has decreased.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The number of system power supplies has decreased.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The number of system power supplies\
    \ has decreased.'\n"
- action: add_eventmapping
  eventClassKey: APClogicPowerSuppliesIncreased
  eventName: APClogicPowerSuppliesIncreased
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The number of system power supplies has increased.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The number of system power supplies has increased.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The number of system power supplies\
    \ has increased.'\n"
- action: add_eventmapping
  eventClassKey: APClowBattery
  eventName: APClowBattery
  eventPath: /CYIIG/SAI_APC/APClowBattery
  example: "SEVERE: The UPS batteries are low and will soon be exhausted.\nIf utility\
    \ power is not restored the UPS will put itself \nto 'sleep' and immediately cut\
    \ power to the load.\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: The UPS batteries are low and will soon be exhausted.\nIf\
    \ utility power is not restored the UPS will put itself \nto 'sleep' and immediately\
    \ cut power to the load.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Bateria BAJA'\n"
- action: add_eventmapping
  eventClassKey: APCmspCommunicationEstablished
  eventName: APCmspCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communications with the MasterSwitch plus has been established.\n\
    \ Lista varbinds:\n   sPDUMasterControlMSPIndex\n   sPDUMasterControlMSPName\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: Communications with the MasterSwitch plus has been\
    \ established.\n Lista varbinds:\n   sPDUMasterControlMSPIndex\n   sPDUMasterControlMSPName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the MasterSwitch\
    \ plus has been established.'\n"
- action: add_eventmapping
  eventClassKey: APCmspCommunicationLost
  eventName: APCmspCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communications with the MasterSwitch plus has been lost.\n Lista\
    \ varbinds:\n   sPDUMasterControlMSPIndex\n   sPDUMasterControlMSPName\n   mtrapargsString"
  explanation: "SEVERE: Communications with the MasterSwitch plus has been lost.\n\
    \ Lista varbinds:\n   sPDUMasterControlMSPIndex\n   sPDUMasterControlMSPName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the MasterSwitch\
    \ plus has been lost.'\n"
- action: add_eventmapping
  eventClassKey: APCmspDeviceConfigChange
  eventName: APCmspDeviceConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A device configuration change has been made on a MasterSwitch\
    \ plus.\n Lista varbinds:\n   sPDUMasterControlMSPIndex\n   sPDUMasterControlMSPName\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A device configuration change has been made on a MasterSwitch\
    \ plus.\n Lista varbinds:\n   sPDUMasterControlMSPIndex\n   sPDUMasterControlMSPName\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A device configuration change has\
    \ been made on a MasterSwitch plus.'\n"
- action: add_eventmapping
  eventClassKey: APCmspOutletConfigChange
  eventName: APCmspOutletConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet configuration change has been made on a MasterSwitch\
    \ plus.\n Lista varbinds:\n   sPDUOutletControlMSPOutletIndex\n   sPDUMasterControlMSPIndex\n\
    \   sPDUOutletControlMSPOutletName\n   sPDUMasterControlMSPName\n   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet configuration change has been made on a MasterSwitch\
    \ plus.\n Lista varbinds:\n   sPDUOutletControlMSPOutletIndex\n   sPDUMasterControlMSPIndex\n\
    \   sPDUOutletControlMSPOutletName\n   sPDUMasterControlMSPName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet configuration change has\
    \ been made on a MasterSwitch plus.'\n"
- action: add_eventmapping
  eventClassKey: APCmspOutletOff
  eventName: APCmspOutletOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on the MasterSwitch plus has turned off.\n Lista\
    \ varbinds:\n   sPDUOutletControlMSPOutletIndex\n   sPDUMasterControlMSPIndex\n\
    \   sPDUOutletControlMSPOutletName\n   sPDUMasterControlMSPName\n   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet on the MasterSwitch plus has turned off.\n\
    \ Lista varbinds:\n   sPDUOutletControlMSPOutletIndex\n   sPDUMasterControlMSPIndex\n\
    \   sPDUOutletControlMSPOutletName\n   sPDUMasterControlMSPName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet on the MasterSwitch plus\
    \ has turned off.'\n"
- action: add_eventmapping
  eventClassKey: APCmspOutletOn
  eventName: APCmspOutletOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on the MasterSwitch plus has turned on.\n Lista\
    \ varbinds:\n   sPDUOutletControlMSPOutletIndex\n   sPDUMasterControlMSPIndex\n\
    \   sPDUOutletControlMSPOutletName\n   sPDUMasterControlMSPName\n   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet on the MasterSwitch plus has turned on.\n\
    \ Lista varbinds:\n   sPDUOutletControlMSPOutletIndex\n   sPDUMasterControlMSPIndex\n\
    \   sPDUOutletControlMSPOutletName\n   sPDUMasterControlMSPName\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet on the MasterSwitch plus\
    \ has turned on.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmCommunicationEstablished
  eventName: APCmsvmCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communications with the MasterSwitch VM has been established.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n \
    \  mtrapargsString"
  explanation: "INFORMATIONAL: Communications with the MasterSwitch VM has been established.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n \
    \  mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the MasterSwitch\
    \ VM has been established.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmCommunicationLost
  eventName: APCmsvmCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communications with the MasterSwitch VM has been lost.\n Lista\
    \ varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  explanation: "SEVERE: Communications with the MasterSwitch VM has been lost.\n Lista\
    \ varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the MasterSwitch\
    \ VM has been lost.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmDeviceConfigChange
  eventName: APCmsvmDeviceConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A device configuration change has been made on a MasterSwitch\
    \ VM.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A device configuration change has been made on a MasterSwitch\
    \ VM.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A device configuration change has\
    \ been made on a MasterSwitch VM.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmLowLoad
  eventName: APCmsvmLowLoad
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The MasterSwitch VM has violated the low load threshold.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n \
    \  mtrapargsString"
  explanation: "INFORMATIONAL: The MasterSwitch VM has violated the low load threshold.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n \
    \  mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The MasterSwitch VM has violated\
    \ the low load threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmLowLoadCleared
  eventName: APCmsvmLowLoadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The low load condition on the MasterSwitch VM has been\
    \ cleared.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The low load condition on the MasterSwitch VM has been\
    \ cleared.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The low load condition on the MasterSwitch\
    \ VM has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmNearOverload
  eventName: APCmsvmNearOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The MasterSwitch VM is approaching an overload condition.\n Lista\
    \ varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  explanation: "SEVERE: The MasterSwitch VM is approaching an overload condition.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n \
    \  mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The MasterSwitch VM is near or at\
    \ an overload condition.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmNearOverloadCleared
  eventName: APCmsvmNearOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The near overload condition on the MasterSwitch VM has\
    \ been cleared.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The near overload condition on the MasterSwitch VM\
    \ has been cleared.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The overload condition on the MasterSwitch\
    \ VM has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmOutletConfigChange
  eventName: APCmsvmOutletConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet configuration change has been made on a MasterSwitch\
    \ VM.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUOutletControlVMOutletIndex\n\
    \   sPDUOutletControlVMOutletName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet configuration change has been made on a MasterSwitch\
    \ VM.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUOutletControlVMOutletIndex\n\
    \   sPDUOutletControlVMOutletName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet configuration change has\
    \ been made on a MasterSwitch VM.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmOutletOff
  eventName: APCmsvmOutletOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on the MasterSwitch VM has turned off.\n Lista\
    \ varbinds:\n   sPDUMasterControlVMName\n   sPDUOutletControlVMOutletIndex\n \
    \  sPDUOutletControlVMOutletName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet on the MasterSwitch VM has turned off.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUOutletControlVMOutletIndex\n\
    \   sPDUOutletControlVMOutletName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet on the MasterSwitch VM\
    \ has turned off.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmOutletOn
  eventName: APCmsvmOutletOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on the MasterSwitch VM has turned on.\n Lista\
    \ varbinds:\n   sPDUMasterControlVMName\n   sPDUOutletControlVMOutletIndex\n \
    \  sPDUOutletControlVMOutletName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: An outlet on the MasterSwitch VM has turned on.\n Lista\
    \ varbinds:\n   sPDUMasterControlVMName\n   sPDUOutletControlVMOutletIndex\n \
    \  sPDUOutletControlVMOutletName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet on the MasterSwitch VM\
    \ has turned on.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmOverload
  eventName: APCmsvmOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The MasterSwitch VM in an overload condition.\n Lista varbinds:\n\
    \   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  explanation: "SEVERE: The MasterSwitch VM in an overload condition.\n Lista varbinds:\n\
    \   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The MasterSwitch VM is near or at\
    \ an overload condition.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmOverloadCleared
  eventName: APCmsvmOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The overload condition on the MasterSwitch VM has been\
    \ cleared.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The overload condition on the MasterSwitch VM has been\
    \ cleared.\n Lista varbinds:\n   sPDUMasterControlVMName\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The overload condition on the MasterSwitch\
    \ VM has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCmsvmPowerSupplyStatusChange
  eventName: APCmsvmPowerSupplyStatusChange
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The power supply status of the MasterSwitch VM has changed.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   mtrapargsString\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsInteger"
  explanation: "WARNING: The power supply status of the MasterSwitch VM has changed.\n\
    \ Lista varbinds:\n   sPDUMasterControlVMName\n   mtrapargsString\n   sPDUMasterControlVMIndex\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The power supply status of the MasterSwitch\
    \ VM has changed.'\n"
- action: add_eventmapping
  eventClassKey: APCmupsCommunicationEstablished
  eventName: APCmupsCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communication with the Environmental Monitor has been established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communication with the Environmental Monitor has been\
    \ established.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication established between\
    \ the agent and the Environmental Monitor.'\n"
- action: add_eventmapping
  eventClassKey: APCmupsCommunicationLost
  eventName: APCmupsCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communication to the Environmental Monitor has been lost.  Steps\n\
    to reestablish communication are in progress.\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Communication to the Environmental Monitor has been lost.\
    \  Steps\nto reestablish communication are in progress.\n Lista varbinds:\n  \
    \ mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication lost between the agent\
    \ and the Environmental Monitor.'\n"
- action: add_eventmapping
  eventClassKey: APCnoBatteries
  eventName: APCnoBatteries
  eventPath: /CYIIG/SAI_APC/APCnoBatteries
  example: "WARNING: The UPS has no batteries attached.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The UPS has no batteries attached.\n Lista varbinds:\n  \
    \ mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has no batteries attached.'\n"
- action: add_eventmapping
  eventClassKey: APCnoBatteriesCleared
  eventName: APCnoBatteriesCleared
  eventPath: /CYIIG/SAI_APC/APCnoBatteries
  example: "INFORMATIONAL: The UPSs batteries have been attached.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The UPSs batteries have been attached.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: The UPSs batteries have\
    \ been attached.'\n"
- action: add_eventmapping
  eventClassKey: APCoutletOff
  eventName: APCoutletOff
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The specified PDU outlet has turned off.\nIf sPDUOutletControlIndex\
    \ equals zero, then all outlets \nhave turned off.\n Lista varbinds:\n   sPDUOutletControlIndex"
  explanation: "WARNING: The specified PDU outlet has turned off.\nIf sPDUOutletControlIndex\
    \ equals zero, then all outlets \nhave turned off.\n Lista varbinds:\n   sPDUOutletControlIndex"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has turned off.'\n"
- action: add_eventmapping
  eventClassKey: APCoutletOn
  eventName: APCoutletOn
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The specified PDU outlet has turned on.\nIf sPDUOutletControlIndex\
    \ equals zero, then all outlets have \nturned on.\n Lista varbinds:\n   sPDUOutletControlIndex"
  explanation: "WARNING: The specified PDU outlet has turned on.\nIf sPDUOutletControlIndex\
    \ equals zero, then all outlets have \nturned on.\n Lista varbinds:\n   sPDUOutletControlIndex"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has been turned on'\n"
- action: add_eventmapping
  eventClassKey: APCoutletReboot
  eventName: APCoutletReboot
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The specified PDU outlet has rebooted.\nIf sPDUOutletControlIndex\
    \ equals zero, then all outlets \nhave rebooted.\n Lista varbinds:\n   sPDUOutletControlIndex"
  explanation: "WARNING: The specified PDU outlet has rebooted.\nIf sPDUOutletControlIndex\
    \ equals zero, then all outlets \nhave rebooted.\n Lista varbinds:\n   sPDUOutletControlIndex"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet has rebooted.'\n"
- action: add_eventmapping
  eventClassKey: APCpasswordChange
  eventName: APCpasswordChange
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The password for the device has been changed.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The password for the device has been changed.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Someone has changed the password\
    \ on the device.'\n"
- action: add_eventmapping
  eventClassKey: APCpduAtypicalBypassMode
  eventName: APCpduAtypicalBypassMode
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: PDU is in Atypical Bypass Mode.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "WARNING: PDU is in Atypical Bypass Mode.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU is in Atypical Bypass Mode.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelFrequencyOutOfRange
  eventName: APCpduCircuitPanelFrequencyOutOfRange
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Circuit Panel Input Frequency Out Of Range.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: Circuit Panel Input Frequency Out Of Range.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Frequency Out\
    \ Of Range.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelFrequencyOutofRangeCleared
  eventName: APCpduCircuitPanelFrequencyOutofRangeCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Circuit Panel Input Frequency No Longer Out Of Range.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: Circuit Panel Input Frequency No Longer Out Of Range.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Frequency No\
    \ Longer Out Of Range.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputOvercurrent
  eventName: APCpduCircuitPanelInputOvercurrent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Circuit Panel Input Overcurrent.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Circuit Panel Input Overcurrent.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Overcurrent.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputOvercurrentCleared
  eventName: APCpduCircuitPanelInputOvercurrentCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Circuit Panel Input Overcurrent Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Circuit Panel Input Overcurrent Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the phase number.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Overcurrent\
    \ Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputOvervoltage
  eventName: APCpduCircuitPanelInputOvervoltage
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Circuit Panel Input Overvoltage.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Circuit Panel Input Overvoltage.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Overvoltage.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputOvervoltageCleared
  eventName: APCpduCircuitPanelInputOvervoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Circuit Panel Input Overvoltage Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Circuit Panel Input Overvoltage Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the phase number.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Overvoltage\
    \ Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputUndercurrent
  eventName: APCpduCircuitPanelInputUndercurrent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Circuit Panel Input Undercurrent.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Circuit Panel Input Undercurrent.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Undercurrent.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputUndercurrentCleared
  eventName: APCpduCircuitPanelInputUndercurrentCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Circuit Panel Input Undercurrent Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Circuit Panel Input Undercurrent Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the phase number.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Undercurrent\
    \ Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputUndervoltage
  eventName: APCpduCircuitPanelInputUndervoltage
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Circuit Panel Input Undervoltage.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Circuit Panel Input Undervoltage.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Undervoltage.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelInputUndervoltageCleared
  eventName: APCpduCircuitPanelInputUndervoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Circuit Panel Input Undervoltage Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Circuit Panel Input Undervoltage Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the phase number.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Undervoltage\
    \ Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelNeutralOvercurrent
  eventName: APCpduCircuitPanelNeutralOvercurrent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Circuit Panel Input Neutral Overcurrent.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: Circuit Panel Input Neutral Overcurrent.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Neutral Overcurrent.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCircuitPanelNeutralOvercurrentCleared
  eventName: APCpduCircuitPanelNeutralOvercurrentCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Circuit Panel Input Neutral Overcurrent Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: Circuit Panel Input Neutral Overcurrent Cleared.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Circuit Panel Input Neutral Overcurrent\
    \ Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCommunicationEstablished
  eventName: APCpduCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communication Established.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communication Established.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Established.'\n"
- action: add_eventmapping
  eventClassKey: APCpduCommunicationLost
  eventName: APCpduCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communication Lost.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: Communication Lost.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCpduContactFault
  eventName: APCpduContactFault
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A contact closure in the PDU is in an abnormal position. \nThe\
    \ first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the number of the contact.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: A contact closure in the PDU is in an abnormal position. \n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the number of the contact.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Contact Abnormal.'\n"
- action: add_eventmapping
  eventClassKey: APCpduContactFaultCleared
  eventName: APCpduContactFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A contact closure in the PDU is in a normal position. \n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the number of the contact.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: A contact closure in the PDU is in a normal position.\
    \ \nThe first argument is the serial number.\nThe second argument is the device\
    \ name.\nThe third argument is the number of the contact.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Contact Normal.'\n"
- action: add_eventmapping
  eventClassKey: APCpduForcedBypassMode
  eventName: APCpduForcedBypassMode
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: PDU is in Forced Bypass Mode.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "WARNING: PDU is in Forced Bypass Mode.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU is in Forced Bypass Mode.'\n"
- action: add_eventmapping
  eventClassKey: APCpduGroundOvercurrent
  eventName: APCpduGroundOvercurrent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Ground Overcurrent.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: Ground Overcurrent.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Ground Overcurrent.'\n"
- action: add_eventmapping
  eventClassKey: APCpduGroundOvercurrentCleared
  eventName: APCpduGroundOvercurrentCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Ground Overcurrent Cleared.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: Ground Overcurrent Cleared.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Ground Overcurrent Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduInputTransformerOverTemperature
  eventName: APCpduInputTransformerOverTemperature
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Input Transformer Over Temperature.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: Input Transformer Over Temperature.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input Transformer Over Temperature.'\n"
- action: add_eventmapping
  eventClassKey: APCpduInputTransformerOverTemperatureCleared
  eventName: APCpduInputTransformerOverTemperatureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Input Transformer Over Temperature Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: Input Transformer Over Temperature Cleared.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input Transformer Over Temperature\
    \ Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduMaintenanceBypassMode
  eventName: APCpduMaintenanceBypassMode
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: PDU is in Maintenance Bypass Mode.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: PDU is in Maintenance Bypass Mode.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU is in Maintenance Bypass Mode.'\n"
- action: add_eventmapping
  eventClassKey: APCpduNoPanelFeedMode
  eventName: APCpduNoPanelFeedMode
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: PDU is in No Panel Feed Mode.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: PDU is in No Panel Feed Mode.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU is in No Panel Feed Mode.'\n"
- action: add_eventmapping
  eventClassKey: APCpduOnBatteryMode
  eventName: APCpduOnBatteryMode
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: PDU is in On Battery Mode.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: PDU is in On Battery Mode.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU is in On Battery Mode.'\n"
- action: add_eventmapping
  eventClassKey: APCpduSystemOff
  eventName: APCpduSystemOff
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: PDU System Off.\nThe first argument is the serial number.\nThe\
    \ second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: PDU System Off.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU System Off.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUPSInputVoltageLost
  eventName: APCpduUPSInputVoltageLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: UPS Input Voltage phase-N Lost.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: UPS Input Voltage phase-N Lost.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'UPS Input Voltage phaseN Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUPSInputVoltageRestored
  eventName: APCpduUPSInputVoltageRestored
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: UPS Input Voltage phase-N Restored.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: UPS Input Voltage phase-N Restored.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'UPS Input Voltage phaseN Restored.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUpsOperationMode
  eventName: APCpduUpsOperationMode
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: PDU is in Ups Operation Mode.\nThe first argument is the\
    \ serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  explanation: "INFORMATIONAL: PDU is in Ups Operation Mode.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU is in Ups Operation Mode.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUtilityLineOvervoltage
  eventName: APCpduUtilityLineOvervoltage
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Utility Line Overvoltage.\nThe first argument is the serial number.\n\
    The second argument is the device name.\nThe third argument is the phase number.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: Utility Line Overvoltage.\nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Utility Line Overvoltage.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUtilityLineOvervoltageCleared
  eventName: APCpduUtilityLineOvervoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Utility Line Overvoltage Cleared.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Utility Line Overvoltage Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Utility Line Overvoltage Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUtilityLineUndervoltage
  eventName: APCpduUtilityLineUndervoltage
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Utility Line Undervoltage. \nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: Utility Line Undervoltage. \nThe first argument is the serial\
    \ number.\nThe second argument is the device name.\nThe third argument is the\
    \ phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Utility Line Undervoltage.'\n"
- action: add_eventmapping
  eventClassKey: APCpduUtilityLineUndervoltageCleared
  eventName: APCpduUtilityLineUndervoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Utility Line Undervoltage Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Utility Line Undervoltage Cleared.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Utility Line Undervoltage Cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCpowerModuleDecrease
  eventName: APCpowerModuleDecrease
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The number of power modules has decreased.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The number of power modules has decreased.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The number of power modules has\
    \ decreased.'\n"
- action: add_eventmapping
  eventClassKey: APCpowerModuleIncrease
  eventName: APCpowerModuleIncrease
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The number of power modules has increased.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The number of power modules has increased.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The number of power modules has\
    \ increased.'\n"
- action: add_eventmapping
  eventClassKey: APCpowerRestored
  eventName: APCpowerRestored
  eventPath: /CYIIG/SAI_APC/APCupsOnBattery
  example: "INFORMATIONAL: Utility power has been restored.\n Lista varbinds:\n  \
    \ mtrapargsString"
  explanation: "INFORMATIONAL: Utility power has been restored.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: SIN RED'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUBankPhaseLowLoad
  eventName: APCrPDUBankPhaseLowLoad
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A bank or phase on the Rack PDU has violated the low load threshold.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the bank number (0 if this is phase data).\nThe fourth argument\
    \ is the phase number (0 if this is bank data).\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDULoadStatusBankNumber\n \
    \  rPDUIdentName"
  explanation: "WARNING: A bank or phase on the Rack PDU has violated the low load\
    \ threshold.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the bank number (0 if this is phase\
    \ data).\nThe fourth argument is the phase number (0 if this is bank data).\n\
    \ Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n  \
    \ mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A bank or phase on the Rack PDU\
    \ has violated the low load threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUBankPhaseLowLoadCleared
  eventName: APCrPDUBankPhaseLowLoadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The bank or phase low load condition on a Rack PDU has\
    \ been \ncleared.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the bank number (0 if this is phase\
    \ data).\nThe fourth argument is the phase number (0 if this is bank data).\n\
    \ Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n  \
    \ mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The bank or phase low load condition on a Rack PDU\
    \ has been \ncleared.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the bank number (0 if this is phase\
    \ data).\nThe fourth argument is the phase number (0 if this is bank data).\n\
    \ Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n  \
    \ mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The bank or phase low load condition\
    \ on a Rack PDU has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUBankPhaseNearOverload
  eventName: APCrPDUBankPhaseNearOverload
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A bank or phase of the Rack PDU is near an overload condition.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the bank number (0 if this is phase data).\nThe fourth argument\
    \ is the phase number (0 if this is bank data).\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDULoadStatusBankNumber\n \
    \  rPDUIdentName"
  explanation: "WARNING: A bank or phase of the Rack PDU is near an overload condition.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the bank number (0 if this is phase data).\nThe fourth argument\
    \ is the phase number (0 if this is bank data).\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDULoadStatusBankNumber\n \
    \  rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A bank or phase of the Rack PDU\
    \ is near an overload condition.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUBankPhaseNearOverloadCleared
  eventName: APCrPDUBankPhaseNearOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The bank or phase near overload condition on a Rack PDU\
    \ has \nbeen cleared.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the bank number (0 if this is phase\
    \ data).\nThe fourth argument is the phase number (0 if this is bank data).\n\
    \ Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n  \
    \ mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The bank or phase near overload condition on a Rack\
    \ PDU has \nbeen cleared.\nThe first argument is the serial number.\nThe second\
    \ argument is the device name.\nThe third argument is the bank number (0 if this\
    \ is phase data).\nThe fourth argument is the phase number (0 if this is bank\
    \ data).\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Rack PDU bank or phase near overload\
    \ condition has cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUBankPhaseOverload
  eventName: APCrPDUBankPhaseOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A bank or phase of the Rack PDU is in an overload condition.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\nThe third argument is the bank number\
    \ (0 if this is phase data).\nThe fourth argument is the phase number (0 if this\
    \ is bank data).\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  explanation: "SEVERE: A bank or phase of the Rack PDU is in an overload condition.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\nThe third argument is the bank number\
    \ (0 if this is phase data).\nThe fourth argument is the phase number (0 if this\
    \ is bank data).\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A bank or phase of the Rack PDU\
    \ is in an overload condition.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUBankPhaseOverloadCleared
  eventName: APCrPDUBankPhaseOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The bank or phase overload condition on a Rack PDU has\
    \ been \ncleared.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the bank number (0 if this is phase\
    \ data).\nThe fourth argument is the phase number (0 if this is bank data).\n\
    \ Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n  \
    \ mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The bank or phase overload condition on a Rack PDU\
    \ has been \ncleared.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the bank number (0 if this is phase\
    \ data).\nThe fourth argument is the phase number (0 if this is bank data).\n\
    \ Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n  \
    \ mtrapargsString\n   rPDULoadStatusBankNumber\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The bank or phase overload condition\
    \ on a Rack PDU has cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUCancelPendingCommand
  eventName: APCrPDUCancelPendingCommand
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A cancel pending command has been made on a \nSwitched\
    \ Rack PDU.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the outlet index number (0 indicates\
    \ all outlets).\nThe fourth argument is the outlet name (or device name if all\
    \ outlets).\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletControlOutletName\n\
    \   rPDUOutletControlIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: A cancel pending command has been made on a \nSwitched\
    \ Rack PDU.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the outlet index number (0 indicates\
    \ all outlets).\nThe fourth argument is the outlet name (or device name if all\
    \ outlets).\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletControlOutletName\n\
    \   rPDUOutletControlIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Cancel Pending Command has been\
    \ made on a Switched Rack PDU.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUCommunicationEstablished
  eventName: APCrPDUCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communication with a Rack PDU has been established.\nThe\
    \ first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: Communication with a Rack PDU has been established.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication with a Rack PDU established.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUCommunicationLost
  eventName: APCrPDUCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communication with a Rack PDU has been lost.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "SEVERE: Communication with a Rack PDU has been lost.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication with a Rack PDU has\
    \ been lost.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUDeviceConfigChange
  eventName: APCrPDUDeviceConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A device configuration change has been made on a \nRack\
    \ PDU.\nThe first argument is the serial number.\nThe second argument is the device\
    \ name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: A device configuration change has been made on a \n\
    Rack PDU.\nThe first argument is the serial number.\nThe second argument is the\
    \ device name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n\
    \   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Device configuration change has\
    \ been made on a Rack PDU.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDULowLoad
  eventName: APCrPDULowLoad
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Rack PDU has violated the low load threshold.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDUIdentName"
  explanation: "WARNING: A Rack PDU has violated the low load threshold.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rack PDU has violated the low\
    \ load threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDULowLoadCleared
  eventName: APCrPDULowLoadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The low load condition on a Rack PDU has been \ncleared.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The low load condition on a Rack PDU has been \ncleared.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The low load condition on a Rack\
    \ PDU has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUNearOverload
  eventName: APCrPDUNearOverload
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Rack PDU is near an overload condition.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDUIdentName"
  explanation: "WARNING: A Rack PDU is near an overload condition.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rack PDU is near an overload condition.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUNearOverloadCleared
  eventName: APCrPDUNearOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The near overload condition on a Rack PDU has \nbeen cleared.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The near overload condition on a Rack PDU has \nbeen\
    \ cleared.\nThe first argument is the serial number.\nThe second argument is the\
    \ device name.\nThe third argument is the phase number.\n Lista varbinds:\n  \
    \ rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n   mtrapargsString\n  \
    \ rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Rack PDU near overload condition\
    \ has cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletConfigChange
  eventName: APCrPDUOutletConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet configuration change has been made on a \nSwitched\
    \ Rack PDU.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the outlet index number.\nThe fourth\
    \ argument is the outlet name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n \
    \  rPDUOutletControlOutletName\n   rPDUOutletControlIndex\n   mtrapargsString\n\
    \   rPDUIdentName"
  explanation: "INFORMATIONAL: An outlet configuration change has been made on a \n\
    Switched Rack PDU.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the outlet index number.\nThe fourth\
    \ argument is the outlet name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n \
    \  rPDUOutletControlOutletName\n   rPDUOutletControlIndex\n   mtrapargsString\n\
    \   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet configuration change has\
    \ been made on a Switched Rack PDU.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletLowLoad
  eventName: APCrPDUOutletLowLoad
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Rack PDU has violated the outlet low load threshold.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the outlet number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n\
    \   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "WARNING: A Rack PDU has violated the outlet low load threshold.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the outlet number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n\
    \   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rack PDU has violated the outlet\
    \ low load threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletLowLoadCleared
  eventName: APCrPDUOutletLowLoadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The outlet low load condition on a Rack PDU has been \n\
    cleared.\nThe first argument is the serial number.\nThe second argument is the\
    \ device name.\nThe third argument is the outlet number.\n Lista varbinds:\n \
    \  rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The outlet low load condition on a Rack PDU has been\
    \ \ncleared.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the outlet number.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The low load condition on a Rack\
    \ PDU has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletNearOverload
  eventName: APCrPDUOutletNearOverload
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Rack PDU is near an outlet overload condition.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the outlet number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n\
    \   mtrapargsString\n   rPDUIdentName"
  explanation: "WARNING: A Rack PDU is near an outlet overload condition.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the outlet number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n\
    \   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rack PDU is near an outlet overload\
    \ condition.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletNearOverloadCleared
  eventName: APCrPDUOutletNearOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The outlet near overload condition on a Rack PDU has \n\
    been cleared.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the outlet number.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The outlet near overload condition on a Rack PDU has\
    \ \nbeen cleared.\nThe first argument is the serial number.\nThe second argument\
    \ is the device name.\nThe third argument is the outlet number.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Rack PDU outlet near overload condition\
    \ has cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletOff
  eventName: APCrPDUOutletOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on a Switched Rack PDU has turned off.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the outlet index number.\nThe fourth argument is the outlet\
    \ name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletControlOutletName\n\
    \   rPDUOutletControlIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: An outlet on a Switched Rack PDU has turned off.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the outlet index number.\nThe fourth argument is the outlet\
    \ name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletControlOutletName\n\
    \   rPDUOutletControlIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet on a Switched Rack PDU\
    \ has turned off.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletOn
  eventName: APCrPDUOutletOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An outlet on a Switched Rack PDU has turned on.\nThe first\
    \ argument is the serial number.\nThe second argument is the device name.\nThe\
    \ third argument is the outlet index number.\nThe fourth argument is the outlet\
    \ name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletControlOutletName\n\
    \   rPDUOutletControlIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: An outlet on a Switched Rack PDU has turned on.\nThe\
    \ first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the outlet index number.\nThe fourth argument is the outlet\
    \ name.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletControlOutletName\n\
    \   rPDUOutletControlIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An outlet on a Switched Rack PDU\
    \ has turned on.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletOverload
  eventName: APCrPDUOutletOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Rack PDU is in an overload condition.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the outlet number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n\
    \   mtrapargsString\n   rPDUIdentName"
  explanation: "SEVERE: A Rack PDU is in an overload condition.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the outlet number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n\
    \   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rack PDU is in an outlet overload\
    \ condition.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOutletOverloadCleared
  eventName: APCrPDUOutletOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The outlet overload condition on a Rack PDU has been \n\
    cleared.\nThe first argument is the serial number.\nThe second argument is the\
    \ device name.\nThe third argument is the outlet number.\n Lista varbinds:\n \
    \  rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The outlet overload condition on a Rack PDU has been\
    \ \ncleared.\nThe first argument is the serial number.\nThe second argument is\
    \ the device name.\nThe third argument is the outlet number.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   rPDUOutletStatusIndex\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The outlet overload condition on\
    \ a Rack PDU has cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOverload
  eventName: APCrPDUOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Rack PDU is in an overload condition.\nThe first argument is\
    \ the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDUIdentName"
  explanation: "SEVERE: A Rack PDU is in an overload condition.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\nThe third argument\
    \ is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n   rPDUIdentSerialNumber\n\
    \   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A Rack PDU is in an overload condition.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUOverloadCleared
  eventName: APCrPDUOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The overload condition on a Rack PDU has been \ncleared.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: The overload condition on a Rack PDU has been \ncleared.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    The third argument is the phase number.\n Lista varbinds:\n   rPDULoadStatusPhaseNumber\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The overload condition on a Rack\
    \ PDU has cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUPhaseConfigChange
  eventName: APCrPDUPhaseConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A phase configuration change has been made on a \nRack\
    \ PDU.\nThe first argument is the serial number.\nThe second argument is the device\
    \ name.\nThe third argument is the phase index number.\n Lista varbinds:\n   rPDUIdentSerialNumber\n\
    \   rPDULoadPhaseConfigIndex\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: A phase configuration change has been made on a \n\
    Rack PDU.\nThe first argument is the serial number.\nThe second argument is the\
    \ device name.\nThe third argument is the phase index number.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   rPDULoadPhaseConfigIndex\n   mtrapargsString\n \
    \  rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Phase configuration change has been\
    \ made on a Rack PDU.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUPowerSupply1Fail
  eventName: APCrPDUPowerSupply1Fail
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Power Supply 1 on Rack PDU is in FAIL state.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "SEVERE: Power Supply 1 on Rack PDU is in FAIL state.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Power Supply 1 on Rack PDU is in\
    \ FAIL state.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUPowerSupply1Ok
  eventName: APCrPDUPowerSupply1Ok
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Power Supply 1 on Rack PDU is operating normally.\nThe\
    \ first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: Power Supply 1 on Rack PDU is operating normally.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Power Supply 1 on Rack PDU is operating\
    \ normally.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUPowerSupply2Fail
  eventName: APCrPDUPowerSupply2Fail
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Power Supply 2 on Rack PDU is in FAIL state.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "SEVERE: Power Supply 2 on Rack PDU is in FAIL state.\nThe first argument\
    \ is the serial number.\nThe second argument is the device name.\n Lista varbinds:\n\
    \   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Power Supply 2 on Rack PDU is in\
    \ FAIL state.'\n"
- action: add_eventmapping
  eventClassKey: APCrPDUPowerSupply2Ok
  eventName: APCrPDUPowerSupply2Ok
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Power Supply 2 on Rack PDU is operating normally.\nThe\
    \ first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  explanation: "INFORMATIONAL: Power Supply 2 on Rack PDU is operating normally.\n\
    The first argument is the serial number.\nThe second argument is the device name.\n\
    \ Lista varbinds:\n   rPDUIdentSerialNumber\n   mtrapargsString\n   rPDUIdentName"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Power Supply 2 on Rack PDU is operating\
    \ normally.'\n"
- action: add_eventmapping
  eventClassKey: APCrestartAgent
  eventName: APCrestartAgent
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Agent restarting as commanded by manager.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: Agent restarting as commanded by manager.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Agent restarting as commanded by\
    \ manager.'\n"
- action: add_eventmapping
  eventClassKey: APCreturnFromBypass
  eventName: APCreturnFromBypass
  eventPath: /CYIIG/SAI_APC/APCswitchedBypass
  example: "INFORMATIONAL: UPS has returned from bypass\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: UPS has returned from bypass\n Lista varbinds:\n  \
    \ mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: Funcionamiento en BYPASS'\n"
- action: add_eventmapping
  eventClassKey: APCreturnFromLowBattery
  eventName: APCreturnFromLowBattery
  eventPath: /CYIIG/SAI_APC/APClowBattery
  example: "INFORMATIONAL: The UPS has returned from a low battery\ncondition.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The UPS has returned from a low battery\ncondition.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: Bateria Baja'\n"
- action: add_eventmapping
  eventClassKey: APCrintelligenceModuleInserted
  eventName: APCrintelligenceModuleInserted
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A redundant intelligence module has been inserted.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A redundant intelligence module has been inserted.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A redundant intelligence module\
    \ has been inserted.'\n"
- action: add_eventmapping
  eventClassKey: APCrintelligenceModuleRemoved
  eventName: APCrintelligenceModuleRemoved
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A redundant intelligence module has been removed.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A redundant intelligence module has been removed.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A redundant intelligence module\
    \ has been removed.'\n"
- action: add_eventmapping
  eventClassKey: APCrmPDUCommunicationLost
  eventName: APCrmPDUCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communication Lost.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  explanation: "SEVERE: Communication Lost.\nThe first argument is the serial number.\n\
    The second argument is the device name.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication Lost.'\n"
- action: add_eventmapping
  eventClassKey: APCrsCommunicationEstablished
  eventName: APCrsCommunicationEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Communications with the Redundant Switch has been established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: Communications with the Redundant Switch has been established.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the Redundant\
    \ Switch has been established.'\n"
- action: add_eventmapping
  eventClassKey: APCrsCommunicationLost
  eventName: APCrsCommunicationLost
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Communications with the Redundant Switch has been lost.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "SEVERE: Communications with the Redundant Switch has been lost.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communications with the Redundant\
    \ Switch has been lost.'\n"
- action: add_eventmapping
  eventClassKey: APCrsConfigChange
  eventName: APCrsConfigChange
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A configuration change has been made on a Redundant Switch.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A configuration change has been made on a Redundant\
    \ Switch.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A configuration change has been\
    \ made on a Redundant Switch.'\n"
- action: add_eventmapping
  eventClassKey: APCrsLostRedundancy
  eventName: APCrsLostRedundancy
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The Redundant Switch has lost redundancy.\nThe first variable\
    \ is an integer representing the source which is no longer available: 0=A, 1=B.\n\
    The second variable is the 32-character name of the source which is no longer\
    \ available.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: The Redundant Switch has lost redundancy.\nThe first variable\
    \ is an integer representing the source which is no longer available: 0=A, 1=B.\n\
    The second variable is the 32-character name of the source which is no longer\
    \ available.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Redundant Switch has lost redundancy.'\n"
- action: add_eventmapping
  eventClassKey: APCrsRedundancyRestored
  eventName: APCrsRedundancyRestored
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Redundancy has been restored to the Redundant Switch .\n\
    The first variable is an integer representing the source which has been restored:\
    \ 0=A, 1=B.\nThe second variable is the 32-character name of the source which\
    \ has been restored.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Redundancy has been restored to the Redundant Switch\
    \ .\nThe first variable is an integer representing the source which has been restored:\
    \ 0=A, 1=B.\nThe second variable is the 32-character name of the source which\
    \ has been restored.\n Lista varbinds:\n   mtrapargsString02\n   mtrapargsString\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Redundancy has been restored to\
    \ the Redundant Switch .'\n"
- action: add_eventmapping
  eventClassKey: APCrsSourceSwitched
  eventName: APCrsSourceSwitched
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The Redundant Switch has switched source.\nThe first variable\
    \ is an integer representing the current source: 0=A, 1=B.\nThe second variable\
    \ is the 32-character name of the current source.\nThe third variable is an integer\
    \ representing the transfer cause:\n 0=No Transfers Recorded, 1=Due to user action\
    \ or preferred switching,\n 3=Due to line notch or spike, 5=Due to low line voltage,\n\
    \ 7=Transfer due to high line voltage,\n 9=Transfer due to frequency out of range.\n\
    The fourth variable is a character string listing the transfer cause.\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsInteger\n   mtrapargsString02\n\
    \   mtrapargsString\n   mtrapargsInteger02"
  explanation: "INFORMATIONAL: The Redundant Switch has switched source.\nThe first\
    \ variable is an integer representing the current source: 0=A, 1=B.\nThe second\
    \ variable is the 32-character name of the current source.\nThe third variable\
    \ is an integer representing the transfer cause:\n 0=No Transfers Recorded, 1=Due\
    \ to user action or preferred switching,\n 3=Due to line notch or spike, 5=Due\
    \ to low line voltage,\n 7=Transfer due to high line voltage,\n 9=Transfer due\
    \ to frequency out of range.\nThe fourth variable is a character string listing\
    \ the transfer cause.\n Lista varbinds:\n   mtrapargsString03\n   mtrapargsInteger\n\
    \   mtrapargsString02\n   mtrapargsString\n   mtrapargsInteger02"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Redundant Switch has switched\
    \ source.'\n"
- action: add_eventmapping
  eventClassKey: APCsmartAvrReducing
  eventName: APCsmartAvrReducing
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The UPS is reducing the line voltage via SmartTrim(TM).\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "WARNING: The UPS is reducing the line voltage via SmartTrim(TM).\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has enabled SmartTrim(TM)\
    \ voltage reduction.'\n"
- action: add_eventmapping
  eventClassKey: APCsmartAvrReducingOff
  eventName: APCsmartAvrReducingOff
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The UPS has returned from SmartTrim(TM).\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The UPS has returned from SmartTrim(TM).\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has returned from SmartTrim(TM)\
    \ voltage reduction.'\n"
- action: add_eventmapping
  eventClassKey: APCsmartBoostOff
  eventName: APCsmartBoostOff
  eventPath: /CYIIG
  example: The UPS has returned from SmartBoost
  explanation: The UPS has returned from SmartBoost
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has returned from SmartBoost'\n"
- action: add_eventmapping
  eventClassKey: APCsmartBoostOn
  eventName: APCsmartBoostOn
  eventPath: /CYIIG
  example: The UPS has enabled SmartBoost low incoming line voltage
  explanation: The UPS has enabled SmartBoost low incoming line voltage
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has enabled SmartBoost low\
    \ incoming line voltage.'\n"
- action: add_eventmapping
  eventClassKey: APCsmartRelayFault
  eventName: APCsmartRelayFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: SmartBoost(TM) or SmartTrim(TM) relay fault.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: SmartBoost(TM) or SmartTrim(TM) relay fault.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SmartBoost(TM) or SmartTrim(TM)\
    \ relay fault.'\n"
- action: add_eventmapping
  eventClassKey: APCsmartRelayFaultCleared
  eventName: APCsmartRelayFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: SmartBoost(TM) or SmartTrim(TM) relay fault has been cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: SmartBoost(TM) or SmartTrim(TM) relay fault has been\
    \ cleared.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SmartBoost(TM) or SmartTrim(TM)\
    \ relay fault has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCsmwCriticalCondition
  eventName: APCsmwCriticalCondition
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A Symmetra MW UPS critical condition has been detected.\nThe first\
    \ variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n   mtrapargsString"
  explanation: "SEVERE: A Symmetra MW UPS critical condition has been detected.\n\
    The first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A critical condition has been detected.'\n"
- action: add_eventmapping
  eventClassKey: APCsmwCriticalConditionCleared
  eventName: APCsmwCriticalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Symmetra MW UPS critical condition has been cleared.\n\
    The first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A Symmetra MW UPS critical condition has been cleared.\n\
    The first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A critical condition has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCsmwInformationalCondition
  eventName: APCsmwInformationalCondition
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Symmetra MW UPS informational condition has been detected.\n\
    The first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A Symmetra MW UPS informational condition has been\
    \ detected.\nThe first variable is the fault condition.\n Lista varbinds:\n  \
    \ mtrapargsGauge\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition has been\
    \ detected.'\n"
- action: add_eventmapping
  eventClassKey: APCsmwInformationalConditionCleared
  eventName: APCsmwInformationalConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A Symmetra MW UPS informational condition has been cleared.\n\
    The first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A Symmetra MW UPS informational condition has been\
    \ cleared.\nThe first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'An informational condition has been\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCsmwWarningCondition
  eventName: APCsmwWarningCondition
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Symmetra MW UPS warning condition has been detected.\nThe first\
    \ variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n   mtrapargsString"
  explanation: "WARNING: A Symmetra MW UPS warning condition has been detected.\n\
    The first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition has been detected.'\n"
- action: add_eventmapping
  eventClassKey: APCsmwWarningConditionCleared
  eventName: APCsmwWarningConditionCleared
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A Symmetra MW UPS warning condition has been cleared.\nThe first\
    \ variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n   mtrapargsString"
  explanation: "WARNING: A Symmetra MW UPS warning condition has been cleared.\nThe\
    \ first variable is the fault condition.\n Lista varbinds:\n   mtrapargsGauge\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A warning condition has been cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCsoftwareBypass
  eventName: APCsoftwareBypass
  eventPath: /CYIIG/SAI_APC/APCswitchedBypass
  example: "WARNING: UPS on bypass - user set via software or panel\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: UPS on bypass - user set via software or panel\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI puesta en BYPASS por software.'\n"
- action: add_eventmapping
  eventClassKey: APCswitchedBypass
  eventName: APCswitchedBypass
  eventPath: /CYIIG/SAI_APC/APCswitchedBypass
  example: "WARNING: UPS on bypass - initiated by user\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: UPS on bypass - initiated by user\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI puesta en BYPASS por el usuario.'\n"
- action: add_eventmapping
  eventClassKey: APCtemperatureThresholdViolation1
  eventName: APCtemperatureThresholdViolation1
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An Environmental Monitor temperature threshold has been violated\
    \ on probe 1.\nThe first variable is the current temperature.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: An Environmental Monitor temperature threshold has been violated\
    \ on probe 1.\nThe first variable is the current temperature.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A temperature threshold has been\
    \ violated on probe 1.'\n"
- action: add_eventmapping
  eventClassKey: APCtemperatureThresholdViolation2
  eventName: APCtemperatureThresholdViolation2
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An Environmental Monitor temperature threshold has been violated\
    \ on probe 2.\nThe first variable is the current temperature.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  explanation: "SEVERE: An Environmental Monitor temperature threshold has been violated\
    \ on probe 2.\nThe first variable is the current temperature.\n Lista varbinds:\n\
    \   mtrapargsString\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A temperature threshold has been\
    \ violated on probe 2.'\n"
- action: add_eventmapping
  eventClassKey: APCtemperatureThresholdViolationCleared1
  eventName: APCtemperatureThresholdViolationCleared1
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Environmental Monitor temperature threshold violation\
    \ has been cleared on probe 1.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: An Environmental Monitor temperature threshold violation\
    \ has been cleared on probe 1.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A temperature threshold violation\
    \ has been cleared on probe 1.'\n"
- action: add_eventmapping
  eventClassKey: APCtemperatureThresholdViolationCleared2
  eventName: APCtemperatureThresholdViolationCleared2
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: An Environmental Monitor temperature threshold violation\
    \ has been cleared on probe 2.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: An Environmental Monitor temperature threshold violation\
    \ has been cleared on probe 2.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A temperature threshold violation\
    \ has been cleared on probe 2.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBackfeedRelayFault
  eventName: APCupsBackfeedRelayFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The backfeed relay (or its driver) has a fault.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The backfeed relay (or its driver) has a fault.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The backfeed relay (or its driver)\
    \ has a fault.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBackfeedRelayFaultCleared
  eventName: APCupsBackfeedRelayFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The backfeed relay (or its driver) has a fault cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "WARNING: The backfeed relay (or its driver) has a fault cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The backfeed relay (or its driver)\
    \ has a fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatteryNeedsReplacement
  eventName: APCupsBatteryNeedsReplacement
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The batteries of the UPS need immediate replacement.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "SEVERE: The batteries of the UPS need immediate replacement.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Baterias de la SAI en mal estado\
    \ (necesitan remplazarse)'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatteryOverVoltage
  eventName: APCupsBatteryOverVoltage
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The battery over voltage condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The battery over voltage condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery over voltage condition\
    \ exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatteryOverVoltageCleared
  eventName: APCupsBatteryOverVoltageCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The battery over voltage condition cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The battery over voltage condition cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery over voltage condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatteryReplaced
  eventName: APCupsBatteryReplaced
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A bad battery fault has been cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A bad battery fault has been cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The UPS has returned from a bad\
    \ battery fault.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatterySoftBusStartFault
  eventName: APCupsBatterySoftBusStartFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A battery bus soft start fault exists.\n Lista varbinds:\n  \
    \ mtrapargsString"
  explanation: "WARNING: A battery bus soft start fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A battery bus soft start fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatterySoftBusStartFaultCleared
  eventName: APCupsBatterySoftBusStartFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A battery bus soft start fault exists cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A battery bus soft start fault exists cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A battery bus soft start fault exists\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatteryTempSensorFault
  eventName: APCupsBatteryTempSensorFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The battery temperature sensor fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The battery temperature sensor fault exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery temperature sensor fault\
    \ exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBatteryTempSensorFaultCleared
  eventName: APCupsBatteryTempSensorFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The battery temperature sensor fault cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The battery temperature sensor fault cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The battery temperature sensor fault\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBypassRelayFault
  eventName: APCupsBypassRelayFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A bypass relay (or its driver) has a fault.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A bypass relay (or its driver) has a fault.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A bypass relay (or its driver) has\
    \ a fault.'\n"
- action: add_eventmapping
  eventClassKey: APCupsBypassRelayFaultCleared
  eventName: APCupsBypassRelayFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A bypass relay (or its driver) has a fault cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: A bypass relay (or its driver) has a fault cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A bypass relay (or its driver) has\
    \ a fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsCalibrationStackChanged
  eventName: APCupsCalibrationStackChanged
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A calibration value in the stack was changed.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: A calibration value in the stack was changed.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A calibration value in the stack\
    \ was changed.'\n"
- action: add_eventmapping
  eventClassKey: APCupsDiagnosticsFailed
  eventName: APCupsDiagnosticsFailed
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The UPS failed its internal diagnostic self-test.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "SEVERE: The UPS failed its internal diagnostic self-test.\n Lista\
    \ varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 4\nevt.summary = 'FALLO de internal self-test'\n"
- action: add_eventmapping
  eventClassKey: APCupsDiagnosticsPassed
  eventName: APCupsDiagnosticsPassed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The UPS passed its internal self-test.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The UPS passed its internal self-test.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI internal self-test OK PASADO'\n\
    \n\t\t\t\t\t\nevt._action = \"history\"\n"
- action: add_eventmapping
  eventClassKey: APCupsDipSwitchChanged
  eventName: APCupsDipSwitchChanged
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The dip switch settings on the UPS have been\nchanged, possibly\
    \ altering UPS performance.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The dip switch settings on the UPS have been\nchanged, possibly\
    \ altering UPS performance.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The DIP switch settings on the UPS\
    \ have been changed.'\n"
- action: add_eventmapping
  eventClassKey: APCupsDischarged
  eventName: APCupsDischarged
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The UPS batteries are discharged; if utility power fails\nan immediate\
    \ low battery condition will exist.  Sufficient runtime \nfor necessary action\
    \ cannot be guaranteed.\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: The UPS batteries are discharged; if utility power fails\n\
    an immediate low battery condition will exist.  Sufficient runtime \nfor necessary\
    \ action cannot be guaranteed.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 4\nevt.summary = 'Baterias de la SAI descargadas'\n"
- action: add_eventmapping
  eventClassKey: APCupsEepromFault
  eventName: APCupsEepromFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The EEPROM fault exists.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The EEPROM fault exists.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The EEPROM fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsEepromFaultCleared
  eventName: APCupsEepromFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The EEPROM fault cleared.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The EEPROM fault cleared.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The EEPROM fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsInternalOverTemperature
  eventName: APCupsInternalOverTemperature
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The internal over temperature condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The internal over temperature condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The internal over temperature condition\
    \ exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsInternalOverTemperatureCleared
  eventName: APCupsInternalOverTemperatureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The internal over temperature condition cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The internal over temperature condition cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The internal over temperature condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsInverterFault
  eventName: APCupsInverterFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The inverter fault exists.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The inverter fault exists.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The inverter fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsInverterFaultCleared
  eventName: APCupsInverterFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The inverter fault cleared.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The inverter fault cleared.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The inverter fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsInverterOverTemperature
  eventName: APCupsInverterOverTemperature
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The inverter over temperature condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The inverter over temperature condition exists.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The inverter over temperature condition\
    \ exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsInverterOverTemperatureCleared
  eventName: APCupsInverterOverTemperatureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The inverter over temperature condition cleared.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The inverter over temperature condition cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The inverter over temperature condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsMpuReset
  eventName: APCupsMpuReset
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The MPU has been reset.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The MPU has been reset.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The MPU has been reset.'\n"
- action: add_eventmapping
  eventClassKey: APCupsOnBattery
  eventName: APCupsOnBattery
  eventPath: /CYIIG/SAI_APC/APCupsOnBattery
  example: "WARNING: The UPS has switched to battery backup power.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "WARNING: The UPS has switched to battery backup power.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 4\nevt.summary = 'SIN RED'\n"
- action: add_eventmapping
  eventClassKey: APCupsOutletGroupTurnedOff
  eventName: APCupsOutletGroupTurnedOff
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The specified Outlet Group turned off.\n Lista varbinds:\n  \
    \ upsOutletGroupControlIndex\n   mtrapargsString"
  explanation: "WARNING: The specified Outlet Group turned off.\n Lista varbinds:\n\
    \   upsOutletGroupControlIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet Group turned off.'\n"
- action: add_eventmapping
  eventClassKey: APCupsOutletGroupTurnedOn
  eventName: APCupsOutletGroupTurnedOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The specified Outlet Group turned on.\n Lista varbinds:\n\
    \   upsOutletGroupControlIndex\n   mtrapargsString"
  explanation: "INFORMATIONAL: The specified Outlet Group turned on.\n Lista varbinds:\n\
    \   upsOutletGroupControlIndex\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Outlet Group turned on'\n"
- action: add_eventmapping
  eventClassKey: APCupsOutputSwitchClosed
  eventName: APCupsOutputSwitchClosed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The Output Switch is closed.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The Output Switch is closed.\n Lista varbinds:\n  \
    \ mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Output Switch is closed.'\n"
- action: add_eventmapping
  eventClassKey: APCupsOutputSwitchOpened
  eventName: APCupsOutputSwitchOpened
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The Output Switch is open.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The Output Switch is open.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The Output Switch is open.'\n"
- action: add_eventmapping
  eventClassKey: APCupsOverload
  eventName: APCupsOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The UPS has sensed a load greater than 100 percent\nof its rated\
    \ capacity.\n Lista varbinds:\n   mtrapargsString"
  explanation: "SEVERE: The UPS has sensed a load greater than 100 percent\nof its\
    \ rated capacity.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 4\nevt.summary = 'SAI sobrecarga'\n"
- action: add_eventmapping
  eventClassKey: APCupsOverloadCleared
  eventName: APCupsOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The overload condition has been cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The overload condition has been cleared.\n Lista varbinds:\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The overload condition has been\
    \ cleared. .'\n"
- action: add_eventmapping
  eventClassKey: APCupsPfcFault
  eventName: APCupsPfcFault
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: A PFC fault exists.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: A PFC fault exists.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A PFC fault exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsPfcFaultCleared
  eventName: APCupsPfcFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The PFC fault cleared.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The PFC fault cleared.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The PFC fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsPfcInputRelayFailure
  eventName: APCupsPfcInputRelayFailure
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The PFC (Power Factor Correction) input relay failure exists.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The PFC (Power Factor Correction) input relay failure exists.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The PFC (Power Factor Correction)\
    \ input relay failure exists.'\n"
- action: add_eventmapping
  eventClassKey: APCupsPfcInputRelayFailureCleared
  eventName: APCupsPfcInputRelayFailureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The PFC (Power Factor Correction) input relay failure cleared.\n\
    \ Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: The PFC (Power Factor Correction) input relay failure\
    \ cleared.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'The PFC (Power Factor Correction)\
    \ input relay failure cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCupsRebootStarted
  eventName: APCupsRebootStarted
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The UPS has started its reboot sequence.\nThe UPS will reboot\
    \ itself at this time.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The UPS has started its reboot sequence.\nThe UPS will reboot\
    \ itself at this time.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI Reiniciandose'\n"
- action: add_eventmapping
  eventClassKey: APCupsSleeping
  eventName: APCupsSleeping
  eventPath: /CYIIG/SAI_APC/APCupsSleeping
  example: "WARNING: The UPS is entering 'sleep' mode.  Power \nto the load will be\
    \ cut off.\n Lista varbinds:\n   mtrapargsString"
  explanation: "WARNING: The UPS is entering 'sleep' mode.  Power \nto the load will\
    \ be cut off.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI entrado en modo SLEEP (La carga\
    \ sera desconectada)'\n"
- action: add_eventmapping
  eventClassKey: APCupsTurnedOff
  eventName: APCupsTurnedOff
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The UPS has been turned 'off' by the management station.\n Lista\
    \ varbinds:\n   mtrapargsString"
  explanation: "WARNING: The UPS has been turned 'off' by the management station.\n\
    \ Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Apagado SAI controlado.'\n"
- action: add_eventmapping
  eventClassKey: APCupsTurnedOn
  eventName: APCupsTurnedOn
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A UPS is turned on.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A UPS is turned on.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SAI en funcionamiento.'\n"
- action: add_eventmapping
  eventClassKey: APCupsWokeUp
  eventName: APCupsWokeUp
  eventPath: /CYIIG/SAI_APC/APCupsSleeping
  example: "INFORMATION: The UPS has returned from 'sleep' mode.  Power \nto the load\
    \ has been restored.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATION: The UPS has returned from 'sleep' mode.  Power \nto the\
    \ load has been restored.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 1\nevt.summary = '.CLEAR: modo SLEEP (La carga sera\
    \ reconectada)'\n"
- action: add_eventmapping
  eventClassKey: APCuserAdded
  eventName: APCuserAdded
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A new user has been added.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A new user has been added.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A new user has been added.'\n"
- action: add_eventmapping
  eventClassKey: APCuserDeleted
  eventName: APCuserDeleted
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A user has been deleted.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A user has been deleted.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A user has been deleted.'\n"
- action: add_eventmapping
  eventClassKey: APCuserModified
  eventName: APCuserModified
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A user has been modified.\n Lista varbinds:\n   mtrapargsString"
  explanation: "INFORMATIONAL: A user has been modified.\n Lista varbinds:\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'A user has been modified.'\n"
- action: add_eventmapping
  eventClassKey: APCxAPCControllerFirmwareUpdateTransferComplete
  eventName: APCxAPCControllerFirmwareUpdateTransferComplete
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Transfer of controller firmware was completed in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device model name that completed the transfer.\nThe third argument is the\
    \ name of the file that was transferred. \nThe fourth argument is the revision\
    \ of the file that was transferred, if available.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString05\n   mtrapargsString04\n   mtrapargsString"
  explanation: "INFORMATIONAL: Transfer of controller firmware was completed in the\
    \ device.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device model name that completed the transfer.\nThe third argument\
    \ is the name of the file that was transferred. \nThe fourth argument is the revision\
    \ of the file that was transferred, if available.\n Lista varbinds:\n   mtrapargsString03\n\
    \   mtrapargsString02\n   mtrapargsString05\n   mtrapargsString04\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Update transfer complete.'\n"
- action: add_eventmapping
  eventClassKey: APCxAPCControllerFirmwareUpdateTransferFailed
  eventName: APCxAPCControllerFirmwareUpdateTransferFailed
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Transfer of controller firmware failed.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device model\
    \ name that failed to transfer.\nThe third argument is the name of the file that\
    \ failed the transfer, if available.\nThe fourth argument is the reason for failure.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  explanation: "SEVERE: Transfer of controller firmware failed.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device model\
    \ name that failed to transfer.\nThe third argument is the name of the file that\
    \ failed the transfer, if available.\nThe fourth argument is the reason for failure.\n\
    \ Lista varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Update transfer failed.'\n"
- action: add_eventmapping
  eventClassKey: APCxAPCControllerFirmwareUpdateTransferStart
  eventName: APCxAPCControllerFirmwareUpdateTransferStart
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Start controller firmware transfer in the device.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host model name that initiated the transfer.\nThe third argument is the name\
    \ of the file that is transferred. \nThe fourth argument is the updated revision\
    \ of the file, if available\nThe fifth argument is the reason for the update,\
    \ if available\n (1=User request, 2=Automatic upgrade by NMC, 3=Unknown).\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: Start controller firmware transfer in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host model name that initiated the transfer.\nThe third argument is the name\
    \ of the file that is transferred. \nThe fourth argument is the updated revision\
    \ of the file, if available\nThe fifth argument is the reason for the update,\
    \ if available\n (1=User request, 2=Automatic upgrade by NMC, 3=Unknown).\n Lista\
    \ varbinds:\n   mtrapargsString03\n   mtrapargsString02\n   mtrapargsString05\n\
    \   mtrapargsString04\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Start update transfer.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSDCBackupAlarm
  eventName: APCxATSDCBackupAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The XATS's DC backup has been lost. The XATS will lose power\n\
    on Source 1 failure, causing the Engine Start signal to be asserted.\nThe XATS\
    \ will then restart from Source 2.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "WARNING: The XATS's DC backup has been lost. The XATS will lose power\n\
    on Source 1 failure, causing the Engine Start signal to be asserted.\nThe XATS\
    \ will then restart from Source 2.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS DC backup failure.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSDCBackupAlarmCleared
  eventName: APCxATSDCBackupAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: DC backup alarm has been cleared in the device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: DC backup alarm has been cleared in the device.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'DC backup alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSDataCommMismatchError
  eventName: APCxATSDataCommMismatchError
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A data incompatibility exists within the device.  This\nis typically\
    \ the result of mismatches between firmware revisions\nof the transfer switch\
    \ controller and the Network Management interface.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: A data incompatibility exists within the device.  This\nis\
    \ typically the result of mismatches between firmware revisions\nof the transfer\
    \ switch controller and the Network Management interface.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS data mismatch error.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSDataCommMismatchErrorCleared
  eventName: APCxATSDataCommMismatchErrorCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The internal data incompatibility has been resolved.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The internal data incompatibility has been resolved.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS data mismatch error cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSDoorOpenAlarm
  eventName: APCxATSDoorOpenAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The XATS exterior panel door is open.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "WARNING: The XATS exterior panel door is open.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Panel door open alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSDoorOpenAlarmCleared
  eventName: APCxATSDoorOpenAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The external door to the device is closed.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: The external door to the device is closed.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Panel door open alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSEngineStartAsserted
  eventName: APCxATSEngineStartAsserted
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The XATS has asserted the Engine Start contact.\nThis should\
    \ result in the generator producing output voltage.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument indicates the reason that the start signal was asserted\n1=Unknown,\
    \ 2=S1 Low Voltage, 3=S1 High Voltage, 4=S1 Line Imbalance,\n5=S1 Freq Range,\
    \ 6=S1 Bad Rotation.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The XATS has asserted the Engine Start contact.\nThis\
    \ should result in the generator producing output voltage.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument indicates the reason that the start signal was asserted\n1=Unknown,\
    \ 2=S1 Low Voltage, 3=S1 High Voltage, 4=S1 Line Imbalance,\n5=S1 Freq Range,\
    \ 6=S1 Bad Rotation.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Engine Start asserted.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSEngineStopAsserted
  eventName: APCxATSEngineStopAsserted
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The XATS has de-asserted the Engine Start contact.\nThis\
    \ should result in the generator shutting down, and producing no output voltage.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The XATS has de-asserted the Engine Start contact.\n\
    This should result in the generator shutting down, and producing no output voltage.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Engine Stop asserted.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSEpoArmed
  eventName: APCxATSEpoArmed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's Emergency Power Off (EPO) circuit has been\n\
    switched back to the armed position.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: The device's Emergency Power Off (EPO) circuit has\
    \ been\nswitched back to the armed position.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'EPO armed.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSEpoReset
  eventName: APCxATSEpoReset
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's Emergency Power Off (EPO) circuit has been\n\
    reset to the armed position.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: The device's Emergency Power Off (EPO) circuit has\
    \ been\nreset to the armed position.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'EPO armed.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSEpoTestMode
  eventName: APCxATSEpoTestMode
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The device's Emergency Power Off (EPO) circuit has been\nswitched\
    \ back to the test position.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "WARNING: The device's Emergency Power Off (EPO) circuit has been\n\
    switched back to the test position.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'EPO disabled.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSEpoTripped
  eventName: APCxATSEpoTripped
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's Emergency Power Off (EPO) circuit is tripped.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "SEVERE: The device's Emergency Power Off (EPO) circuit is tripped.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'EPO tripped.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGenCommEstablished
  eventName: APCxATSGenCommEstablished
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The XATS has established communication with the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The XATS has established communication with the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS/generator communication established.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGenCommLost
  eventName: APCxATSGenCommLost
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The XATS cannot communicate with the generator.\nThis will make\
    \ unavailable all the xATSGenerator OIDs.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "WARNING: The XATS cannot communicate with the generator.\nThis will\
    \ make unavailable all the xATSGenerator OIDs.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS/Generator communication lost.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorBatteryCharger
  eventName: APCxATSGeneratorBatteryCharger
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator battery charger is nonfunctional.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator battery charger is nonfunctional.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator battery charger is nonfunctional'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorBatteryChargerCleared
  eventName: APCxATSGeneratorBatteryChargerCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Fault in the generator battery charger is cleared.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Fault in the generator battery charger is cleared.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fault in the generator battery charger\
    \ is cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorControlSwitchNotAuto
  eventName: APCxATSGeneratorControlSwitchNotAuto
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The control switch on the generator is not in auto position.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The control switch on the generator is not in auto position.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator notinauto.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorControlSwitchNotAutoCleared
  eventName: APCxATSGeneratorControlSwitchNotAutoCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The control switch on the generator is in auto position.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The control switch on the generator is in auto position.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator notinauto cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorEStop
  eventName: APCxATSGeneratorEStop
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator's emergency stop input has been activated.\nAfter\
    \ the emergency stop signal has been removed, the E-Stop condition  \nmust be\
    \ cleared before the generator can be started again.\nE-Stop conditions can only\
    \ be cleared via the generator front panel.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the OEM's fault/event code.\nThe fourth argument is the type of E-Stop (1=LOCAL,\
    \ 2=REMOTE).\n Lista varbinds:\n   mtrapargsInteger02\n   xATSIdentProductName\n\
    \   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator's emergency stop input has been activated.\n\
    After the emergency stop signal has been removed, the E-Stop condition  \nmust\
    \ be cleared before the generator can be started again.\nE-Stop conditions can\
    \ only be cleared via the generator front panel.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\nThe fourth argument is the type of\
    \ E-Stop (1=LOCAL, 2=REMOTE).\n Lista varbinds:\n   mtrapargsInteger02\n   xATSIdentProductName\n\
    \   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator emergency stop engaged.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorEStopCleared
  eventName: APCxATSGeneratorEStopCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator's emergency stop condition has been cleared.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\nThe fourth\
    \ argument is the type of E-Stop (1=LOCAL, 2=REMOTE).\n Lista varbinds:\n   mtrapargsInteger02\n\
    \   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator's emergency stop condition has been cleared.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\nThe fourth\
    \ argument is the type of E-Stop (1=LOCAL, 2=REMOTE).\n Lista varbinds:\n   mtrapargsInteger02\n\
    \   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator emergency stop condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorEngineCold
  eventName: APCxATSGeneratorEngineCold
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator engine is cold, may not start.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator engine is cold, may not start.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator engine is cold.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorEngineColdCleared
  eventName: APCxATSGeneratorEngineColdCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The engine is not cold to start.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The engine is not cold to start.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Engine is cold to start condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorFuelTankRuptureAlarm
  eventName: APCxATSGeneratorFuelTankRuptureAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Detected a rupture in the inner wall of the generator fuel tank.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "WARNING: Detected a rupture in the inner wall of the generator fuel\
    \ tank.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the OEM's fault/event code.\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator inner wall rupture alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorFuelTankRuptureAlarmCleared
  eventName: APCxATSGeneratorFuelTankRuptureAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The rupture in the inner wall of the generator is not detected.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The rupture in the inner wall of the generator is not\
    \ detected.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator inner wall rupture alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorGenericEvent
  eventName: APCxATSGeneratorGenericEvent
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Any generic generator event.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "WARNING: Any generic generator event.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator generic event.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorGenericEventCleared
  eventName: APCxATSGeneratorGenericEventCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Generated generic generator event is cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Generated generic generator event is cleared.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generic generator event is cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorGroundFaultAlarm
  eventName: APCxATSGeneratorGroundFaultAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Generator ground fault alarm.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: Generator ground fault alarm.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator ground fault alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorGroundFaultAlarmCleared
  eventName: APCxATSGeneratorGroundFaultAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Generator ground fault alarm cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: Generator ground fault alarm cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator ground fault alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorHighACVEvent
  eventName: APCxATSGeneratorHighACVEvent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator AC voltage is outside the acceptable bounds.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The generator AC voltage is outside the acceptable bounds.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'State of the Generator AC voltage.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorHighACVEventCleared
  eventName: APCxATSGeneratorHighACVEventCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator AC voltage is within normal bounds.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator AC voltage is within normal bounds.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'State of the Generator AC voltage\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorHighBatteryVolt
  eventName: APCxATSGeneratorHighBatteryVolt
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The generator's battery voltage has been detected as high.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "WARNING: The generator's battery voltage has been detected as high.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator high battery volts.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorHighBatteryVoltCleared
  eventName: APCxATSGeneratorHighBatteryVoltCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected high battery voltage has been cleared, on\
    \ the generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected high battery voltage has been cleared,\
    \ on the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator high battery volts condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorHighCoolantTempAlarm
  eventName: APCxATSGeneratorHighCoolantTempAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: High coolant temperature has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: High coolant temperature has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator high coolant temperature\
    \ alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorHighCoolantTempAlarmCleared
  eventName: APCxATSGeneratorHighCoolantTempAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected high coolant temperature has been cleared\
    \ in the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected high coolant temperature has been cleared\
    \ in the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator high coolant temperature\
    \ alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowACVEvent
  eventName: APCxATSGeneratorLowACVEvent
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator AC voltage is outside the acceptable bounds.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The generator AC voltage is outside the acceptable bounds.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'State of the Generator AC voltage.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowACVEventCleared
  eventName: APCxATSGeneratorLowACVEventCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator AC voltage is within normal bounds.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator AC voltage is within normal bounds.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'State of the Generator AC voltage\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowBatteryVolt
  eventName: APCxATSGeneratorLowBatteryVolt
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator's battery voltage has been detected as low.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The generator's battery voltage has been detected as low.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low battery volts.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowBatteryVoltCleared
  eventName: APCxATSGeneratorLowBatteryVoltCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected low battery voltage has been cleared, on the\
    \ generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected low battery voltage has been cleared,\
    \ on the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low battery volts condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowBatteryVoltDuringCrankAlarm
  eventName: APCxATSGeneratorLowBatteryVoltDuringCrankAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator's battery voltage has been detected \nas low while\
    \ cranking the engine.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the OEM's\
    \ fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator's battery voltage has been detected \nas low\
    \ while cranking the engine.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the OEM's\
    \ fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low battery volts while\
    \ cranking alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowBatteryVoltDuringCrankAlarmCleared
  eventName: APCxATSGeneratorLowBatteryVoltDuringCrankAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator's low battery voltage while\ncranking condition\
    \ has been cleared.\nThe second argument is the host device name.\nThe third argument\
    \ is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator's low battery voltage while\ncranking\
    \ condition has been cleared.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low battery volts while\
    \ cranking alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowCoolantLevelAlarm
  eventName: APCxATSGeneratorLowCoolantLevelAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Low coolant level has been detected in the generator.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: Low coolant level has been detected in the generator.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low coolant level alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowCoolantLevelAlarmCleared
  eventName: APCxATSGeneratorLowCoolantLevelAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected low coolant level has been cleared in the\
    \ generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected low coolant level has been cleared in\
    \ the generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low coolant level alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowCoolantTempAlarm
  eventName: APCxATSGeneratorLowCoolantTempAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: Low coolant temperature has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "WARNING: Low coolant temperature has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low coolant temperature\
    \ alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowCoolantTempAlarmCleared
  eventName: APCxATSGeneratorLowCoolantTempAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The low coolant temperature condition has been cleared\
    \ in the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The low coolant temperature condition has been cleared\
    \ in the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low coolant temperature\
    \ alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowFuelLevelAlarm
  eventName: APCxATSGeneratorLowFuelLevelAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The tank fuel level is below the limits specified\nin the xATSGeneratorFuelSystemLowFuelLevelThreshold\
    \ OID.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the measured fuel level in percent\
    \ of full.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n  \
    \ xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "WARNING: The tank fuel level is below the limits specified\nin the\
    \ xATSGeneratorFuelSystemLowFuelLevelThreshold OID.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the measured fuel level in percent of full.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low fuel level alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowFuelLevelAlarmCleared
  eventName: APCxATSGeneratorLowFuelLevelAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The tank fuel level is back above the specified limit.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The tank fuel level is back above the specified limit.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low fuel level alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowOilLevelAlarm
  eventName: APCxATSGeneratorLowOilLevelAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Low oil level has been detected in the generator.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: Low oil level has been detected in the generator.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low oil level alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowOilLevelAlarmCleared
  eventName: APCxATSGeneratorLowOilLevelAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Low oil level alarm has been cleared in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: Low oil level alarm has been cleared in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low oil level alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowOilPressure
  eventName: APCxATSGeneratorLowOilPressure
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator's oil pressure has been detected as low.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator's oil pressure has been detected as low.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low oil pressure.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowOilPressureCleared
  eventName: APCxATSGeneratorLowOilPressureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected low oil pressure has been cleared, on the\
    \ generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected low oil pressure has been cleared, on\
    \ the generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low oil pressure condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowRunTimeAlarm
  eventName: APCxATSGeneratorLowRunTimeAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The estimated runtime is below the limits specified.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the estimated runtime in hours.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "WARNING: The estimated runtime is below the limits specified.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the estimated runtime in hours.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low run time alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorLowRunTimeAlarmCleared
  eventName: APCxATSGeneratorLowRunTimeAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected low runtime has been cleared in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The detected low runtime has been cleared in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator low run time alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorOutputBreakerOpen
  eventName: APCxATSGeneratorOutputBreakerOpen
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generators output breaker has been detected as open.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The generators output breaker has been detected as open.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator output breaker open.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorOutputBreakerOpenCleared
  eventName: APCxATSGeneratorOutputBreakerOpenCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The engine is not cold to start.\nThe first argument is\
    \ the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The engine is not cold to start.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator output breaker open cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorOverload
  eventName: APCxATSGeneratorOverload
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator is overloaded.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator is overloaded.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator on overload event.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorOverloadCleared
  eventName: APCxATSGeneratorOverloadCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator is running within loading limits.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator is running within loading limits.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator on overload event cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorOverspeed
  eventName: APCxATSGeneratorOverspeed
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator is running over the acceptable RPM.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator is running over the acceptable RPM.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator overspeed condition.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorOverspeedCleared
  eventName: APCxATSGeneratorOverspeedCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator overspeed shutdown has been cleared.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator overspeed shutdown has been cleared.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator overspeed condition cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorServiceDueAlarm
  eventName: APCxATSGeneratorServiceDueAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The generator is due for scheduled service.\nGeneration of this\
    \ alarm is based on calendar days since \nand/or actual generator run-hours since\
    \ last service.\nThis alarm is cleared using the xATSGeneratorServiceResetRecord\
    \ OID.\n\n  (See also: xATSGeneratorServiceCalendarIntervalThreshold\n   and xATSGeneratorServiceRunHoursThreshold\
    \ OIDs)\n\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "WARNING: The generator is due for scheduled service.\nGeneration of\
    \ this alarm is based on calendar days since \nand/or actual generator run-hours\
    \ since last service.\nThis alarm is cleared using the xATSGeneratorServiceResetRecord\
    \ OID.\n\n  (See also: xATSGeneratorServiceCalendarIntervalThreshold\n   and xATSGeneratorServiceRunHoursThreshold\
    \ OIDs)\n\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator maintenance due.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorServiceDueAlarmCleared
  eventName: APCxATSGeneratorServiceDueAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator's service registers have been reset.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The generator's service registers have been reset.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator service alarm is cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorShutdown
  eventName: APCxATSGeneratorShutdown
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator is shutdown.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator is shutdown.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator shutdown'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorShutdownCleared
  eventName: APCxATSGeneratorShutdownCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator shutdown alarm is cleared.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator shutdown alarm is cleared.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the OEM's fault/event code.\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator shutdown is cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryHighCoolantTempAlarm
  eventName: APCxATSGeneratorVeryHighCoolantTempAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Very high coolant temperature has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: Very high coolant temperature has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very high coolant temperature\
    \ alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryHighCoolantTempAlarmCleared
  eventName: APCxATSGeneratorVeryHighCoolantTempAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The Very high coolant temperature condition has been cleared\
    \ in the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The Very high coolant temperature condition has been\
    \ cleared in the generator.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the OEM's\
    \ fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very high coolant temperature\
    \ alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowBatteryVoltDuringCrankAlarm
  eventName: APCxATSGeneratorVeryLowBatteryVoltDuringCrankAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator's battery voltage has been detected \nas very low\
    \ while cranking the engine.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the OEM's\
    \ fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The generator's battery voltage has been detected \nas very\
    \ low while cranking the engine.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the OEM's fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator v.low battery volts while\
    \ cranking alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowBatteryVoltDuringCrankAlarmCleared
  eventName: APCxATSGeneratorVeryLowBatteryVoltDuringCrankAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The generator's high battery voltage while\ncranking condition\
    \ has been cleared.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The generator's high battery voltage while\ncranking\
    \ condition has been cleared.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the OEM's\
    \ fault/event code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator v.low battery volts while\
    \ cranking alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowCoolantLevelAlarm
  eventName: APCxATSGeneratorVeryLowCoolantLevelAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Very low coolant level has been detected in the generator.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: Very low coolant level has been detected in the generator.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very low coolant level\
    \ alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowCoolantLevelAlarmCleared
  eventName: APCxATSGeneratorVeryLowCoolantLevelAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected Very low coolant level has been cleared in\
    \ the generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected Very low coolant level has been cleared\
    \ in the generator.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very low coolant level\
    \ alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowFuelLevelAlarm
  eventName: APCxATSGeneratorVeryLowFuelLevelAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The tank fuel level is below the low threshold limits.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the measured tank fuel level in percent\
    \ of full.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n  \
    \ xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: The tank fuel level is below the low threshold limits.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the measured tank fuel level in percent\
    \ of full.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n  \
    \ xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very low fuel level alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowFuelLevelAlarmCleared
  eventName: APCxATSGeneratorVeryLowFuelLevelAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected low tank level has been cleared in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The detected low tank level has been cleared in the\
    \ device.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very low fuel level alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowOilPressure
  eventName: APCxATSGeneratorVeryLowOilPressure
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator's oil pressure has been detected as very low.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The generator's oil pressure has been detected as very low.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the OEM's fault/event code.\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator v.low oil pressure.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowOilPressureCleared
  eventName: APCxATSGeneratorVeryLowOilPressureCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected v.low oil pressure has been cleared, on the\
    \ generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected v.low oil pressure has been cleared, on\
    \ the generator.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the OEM's fault/event\
    \ code.\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator v.low oil pressure condition\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowRunTimeAlarm
  eventName: APCxATSGeneratorVeryLowRunTimeAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The estimated runtime is below the limits specified\nin the xATSGeneratorFuelSystemVeryLowRunTimeThreshold\
    \ OID.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the estimated runtime in hours.\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The estimated runtime is below the limits specified\nin the\
    \ xATSGeneratorFuelSystemVeryLowRunTimeThreshold OID.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\nThe\
    \ third argument is the estimated runtime in hours.\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very low run time alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSGeneratorVeryLowRunTimeAlarmCleared
  eventName: APCxATSGeneratorVeryLowRunTimeAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected low runtime has been cleared in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The detected low runtime has been cleared in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator very low run time alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSInputContactStateAbnormal
  eventName: APCxATSInputContactStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A user input contact on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=OPEN, 2=CLOSED).\nThe sixth argument is the configured normal\
    \ input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: A user input contact on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=OPEN, 2=CLOSED).\nThe sixth argument is the configured normal\
    \ input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input contact has changed to its\
    \ abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSInputContactStateNormal
  eventName: APCxATSInputContactStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A user input contact on the device has changed to its normal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=OPEN, 2=CLOSED).\nThe sixth argument is the configured normal\
    \ input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: A user input contact on the device has changed to its\
    \ normal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the input contact number.\
    \ \nThe fourth argument is the input contact name.\nThe fifth argument is the\
    \ input contact state (1=OPEN, 2=CLOSED).\nThe sixth argument is the configured\
    \ normal input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input contact has changed to its\
    \ normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSInternalATSFault
  eventName: APCxATSInternalATSFault
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: An internal XATS fault has been detected.\nThe XATS may have forced\
    \ itself to not-in-auto mode (abnormal condition),\nas indicated by the xATSSwitchStatusAutoSwitchOperationalMode\
    \ OID.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument indicates the detected fault.\n\
    \n   1=Cannot Close S1\n   2=Cannot Close S2\n   3=Cannot Open S1\n   4=Cannot\
    \ Open S2\n   5=Cannot Trip Open S1 \n   6=Cannot Trip Open S2 \n   7=Start Contact\
    \ Failure\n   8=Voltage Sensing Failure\n Lista varbinds:\n   mtrapargsString\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "SEVERE: An internal XATS fault has been detected.\nThe XATS may have\
    \ forced itself to not-in-auto mode (abnormal condition),\nas indicated by the\
    \ xATSSwitchStatusAutoSwitchOperationalMode OID.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument indicates the detected fault.\n\n   1=Cannot Close S1\n   2=Cannot\
    \ Close S2\n   3=Cannot Open S1\n   4=Cannot Open S2\n   5=Cannot Trip Open S1\
    \ \n   6=Cannot Trip Open S2 \n   7=Start Contact Failure\n   8=Voltage Sensing\
    \ Failure\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS internal fault detected.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSInternalATSFaultCleared
  eventName: APCxATSInternalATSFaultCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The detected internal XATS fault has been cleared.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument indicates the detected fault.\n\n   1=Cannot\
    \ Close S1\n   2=Cannot Close S2\n   3=Cannot Open S1\n   4=Cannot Open S2\n \
    \  5=Cannot Trip Open S1 \n   6=Cannot Trip Open S2 \n   7=Start Contact Failure\n\
    \   8=Voltage Sensing Failure\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The detected internal XATS fault has been cleared.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument indicates the detected fault.\n\n   1=Cannot\
    \ Close S1\n   2=Cannot Close S2\n   3=Cannot Open S1\n   4=Cannot Open S2\n \
    \  5=Cannot Trip Open S1 \n   6=Cannot Trip Open S2 \n   7=Start Contact Failure\n\
    \   8=Voltage Sensing Failure\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS internal fault cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSInternalCommError
  eventName: APCxATSInternalCommError
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: There is an internal communication error in the device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "SEVERE: There is an internal communication error in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Internal communication error.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSInternalCommErrorCleared
  eventName: APCxATSInternalCommErrorCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Internal communication has been restored.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: Internal communication has been restored.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS Communication error cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSNeutralPosition
  eventName: APCxATSNeutralPosition
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: XATS has transferred to neutral position.\nIn this position neither\
    \ Source 1 nor Source 2 is selected,\nand the XATS will have no output voltage.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the mode in which the switch is operating\n\
    (1=Auto, 2=Not-in-Auto, Abnormal Condition  3=Not-in-Auto, manual).\n Lista varbinds:\n\
    \   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "WARNING: XATS has transferred to neutral position.\nIn this position\
    \ neither Source 1 nor Source 2 is selected,\nand the XATS will have no output\
    \ voltage.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the mode in which the switch\
    \ is operating\n(1=Auto, 2=Not-in-Auto, Abnormal Condition  3=Not-in-Auto, manual).\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Transferred to neutral.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSNotInAutomaticMode
  eventName: APCxATSNotInAutomaticMode
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Automatic Transfer Switch is not in automatic mode.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe xATSSwitchStatusAutoSwitchStatus OID and the\nxATSSwitchStatusAutoSwitchOperationalMode\
    \ OID\ncan provide more information about the state of the XATS.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: Automatic Transfer Switch is not in automatic mode.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe xATSSwitchStatusAutoSwitchStatus OID and the\nxATSSwitchStatusAutoSwitchOperationalMode\
    \ OID\ncan provide more information about the state of the XATS.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS not in auto.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSNotInAutomaticModeCleared
  eventName: APCxATSNotInAutomaticModeCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Automatic Transfer Switch is in automatic mode.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: Automatic Transfer Switch is in automatic mode.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'ATS in auto mode.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputCurrentHighAlarm
  eventName: APCxATSOutputCurrentHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The three-phase output load current of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1,\
    \ 2=L2, 3=L3).\nThe fourth argument is the measured current in Amps.\nThe fifth\
    \ argument is the threshold, in Amps, from which the alarm was generated.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The three-phase output load current of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in Amps.\n\
    The fifth argument is the threshold, in Amps, from which the alarm was generated.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output current is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputCurrentHighAlarmCleared
  eventName: APCxATSOutputCurrentHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The three-phase output load current of the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in Amps.\n\
    \ Lista varbinds:\n   mtrapargsInteger02\n   xATSIdentProductName\n   mtrapargsString\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The three-phase output load current of the device is\
    \ back within the specified limits.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in\
    \ Amps.\n Lista varbinds:\n   mtrapargsInteger02\n   xATSIdentProductName\n  \
    \ mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output high current alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputCurrentLowAlarm
  eventName: APCxATSOutputCurrentLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The three-phase load current of the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1, 2=L2, 3=L3).\n\
    The fourth argument is the measured current in Amps.\nThe fifth argument is the\
    \ threshold, in Amps, from which the alarm was generated.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The three-phase load current of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1,\
    \ 2=L2, 3=L3).\nThe fourth argument is the measured current in Amps.\nThe fifth\
    \ argument is the threshold, in Amps, from which the alarm was generated.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output current is below threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputCurrentLowAlarmCleared
  eventName: APCxATSOutputCurrentLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The three-phase load current of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in Amps.\n\
    \ Lista varbinds:\n   mtrapargsInteger02\n   xATSIdentProductName\n   mtrapargsString\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The three-phase load current of the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in Amps.\n\
    \ Lista varbinds:\n   mtrapargsInteger02\n   xATSIdentProductName\n   mtrapargsString\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output low current alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputFrequencyAlarm
  eventName: APCxATSOutputFrequencyAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The devices output frequency is outside the specified limits.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the frequency deviation from the nominal\
    \ in tenths of Hertz.\nThe fourth argument is the frequency deviation threshold\
    \ in tenths of Hertz, \nfrom which the alarm was generated.\n Lista varbinds:\n\
    \   mtrapargsInteger02\n   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The devices output frequency is outside the specified limits.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the frequency deviation from the nominal\
    \ in tenths of Hertz.\nThe fourth argument is the frequency deviation threshold\
    \ in tenths of Hertz, \nfrom which the alarm was generated.\n Lista varbinds:\n\
    \   mtrapargsInteger02\n   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output frequency is outofrange.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputFrequencyAlarmCleared
  eventName: APCxATSOutputFrequencyAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The devices output frequency is back within the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The devices output frequency is back within the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output frequency in range.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputLoadPoweredByGeneratorAlarm
  eventName: APCxATSOutputLoadPoweredByGeneratorAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The system load on the output of the ATS is being powered by\
    \ source 2 (generator).\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument indicates if\
    \ the load is powered by the generator,\nwhen 'load testing' the generator (1\
    \ = LIVE, 2 = TEST).\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "WARNING: The system load on the output of the ATS is being powered\
    \ by source 2 (generator).\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument indicates if\
    \ the load is powered by the generator,\nwhen 'load testing' the generator (1\
    \ = LIVE, 2 = TEST).\n Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'System load powered by generator.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputLoadPoweredByGeneratorAlarmCleared
  eventName: APCxATSOutputLoadPoweredByGeneratorAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The system load on the output of the ATS is no longer being\
    \ powered by source 2 (generator).\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: The system load on the output of the ATS is no longer\
    \ being powered by source 2 (generator).\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'System load powered by generator\
    \ alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputVoltageHighAlarm
  eventName: APCxATSOutputVoltageHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device three-phase output voltage of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\nThe fifth argument is the threshold,\
    \ in tenths of Volts, above which the alarm is generated.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The device three-phase output voltage of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\nThe fifth argument is the threshold,\
    \ in tenths of Volts, above which the alarm is generated.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output voltage is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputVoltageHighAlarmCleared
  eventName: APCxATSOutputVoltageHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The devices three-phase output voltage is back within the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1-N,\
    \ 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument is\
    \ the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger02\n\
    \   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The devices three-phase output voltage is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger02\n\
    \   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output high voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputVoltageLowAlarm
  eventName: APCxATSOutputVoltageLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device three-phase output voltage of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\nThe fifth argument is the threshold,\
    \ in tenths of Volts, from which the alarm was generated.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "SEVERE: The device three-phase output voltage of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\nThe fifth argument is the threshold,\
    \ in tenths of Volts, from which the alarm was generated.\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output voltage is below threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSOutputVoltageLowAlarmCleared
  eventName: APCxATSOutputVoltageLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The devices three-phase output voltage is back within the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1-N,\
    \ 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument is\
    \ the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger02\n\
    \   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  explanation: "INFORMATIONAL: The devices three-phase output voltage is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger02\n\
    \   xATSIdentProductName\n   mtrapargsString\n   xATSIdentSerialNumber\n   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output low voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSRemoteStartContactMismatch
  eventName: APCxATSRemoteStartContactMismatch
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The state of the generator's Remote Start input\nand the ATS's\
    \ Engine Start output do not match. \nThis indicates something wrong in the Engine\
    \ Start wiring,\nwhich must be corrected. This condition will prevent the \ngenerator\
    \ from being started when needed.\n\n  (See also: xATSGeneratorStatusRemoteStart\
    \ \n   and xATSSwitchStatusEngineStartSignal OIDs)\n\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The state of the generator's Remote Start input\nand the ATS's\
    \ Engine Start output do not match. \nThis indicates something wrong in the Engine\
    \ Start wiring,\nwhich must be corrected. This condition will prevent the \ngenerator\
    \ from being started when needed.\n\n  (See also: xATSGeneratorStatusRemoteStart\
    \ \n   and xATSSwitchStatusEngineStartSignal OIDs)\n\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator/ATS start contact mismatch.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSRemoteStartContactMismatchCleared
  eventName: APCxATSRemoteStartContactMismatchCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Mismatch in the state of the generator's \nRemote Start\
    \ input and the ATS's Engine Start output as been resolved. \nThis indicates something\
    \ wrong in the Engine Start wiring,\nwhich must be corrected. This condition will\
    \ prevent the \ngenerator from being started when needed.\n\n  (See also: xATSGeneratorStatusRemoteStart\
    \ \n   and xATSSwitchStatusEngineStartSignal OIDs)\n\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: Mismatch in the state of the generator's \nRemote Start\
    \ input and the ATS's Engine Start output as been resolved. \nThis indicates something\
    \ wrong in the Engine Start wiring,\nwhich must be corrected. This condition will\
    \ prevent the \ngenerator from being started when needed.\n\n  (See also: xATSGeneratorStatusRemoteStart\
    \ \n   and xATSSwitchStatusEngineStartSignal OIDs)\n\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator/ATS start contact mismatch\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSS1BadPhaseBalance
  eventName: APCxATSS1BadPhaseBalance
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's source 1 phase balance is out of bounds.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\nThe third argument is the minimum phase balance as a percentage.\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The device's source 1 phase balance is out of bounds.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the minimum phase balance as a percentage.\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Phase imbalance on source 1 exceeds\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSS1BadPhaseBalanceCleared
  eventName: APCxATSS1BadPhaseBalanceCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's source 1 phase balance is back to normal.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The device's source 1 phase balance is back to normal.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'S1 phase balance back to normal.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSS1BadPhaseRotation
  eventName: APCxATSS1BadPhaseRotation
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's source 1 phase rotation is bad.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The device's source 1 phase rotation is bad.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Phase rotation on source 1 is bad.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSS1BadPhaseRotationCleared
  eventName: APCxATSS1BadPhaseRotationCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's source 1 phase rotation is back to normal.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "INFORMATIONAL: The device's source 1 phase rotation is back to normal.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'S1 phase rotation back to normal.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSStartFailure
  eventName: APCxATSStartFailure
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The generator failed to start. After assertion of the\nEngine\
    \ Start signal, the quality of Source 2 was not seen as good.\nThis alarm can\
    \ be cleared using the xATSSwitchStatusClearLatchedAlarms OID.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument indicates the line quality at S2\n 1=Unknown, 2=S2 Low Voltage,\
    \ 3=S2 High Voltage, 4=S2 Line Imbalance,\n 4=S2 Freq Range, 5=S2 Bad Rotation.\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "SEVERE: The generator failed to start. After assertion of the\nEngine\
    \ Start signal, the quality of Source 2 was not seen as good.\nThis alarm can\
    \ be cleared using the xATSSwitchStatusClearLatchedAlarms OID.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument indicates the line quality at S2\n 1=Unknown, 2=S2 Low Voltage,\
    \ 3=S2 High Voltage, 4=S2 Line Imbalance,\n 4=S2 Freq Range, 5=S2 Bad Rotation.\n\
    \ Lista varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator failed to start.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSStopFailure
  eventName: APCxATSStopFailure
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The generator failed to stop. After de-assertion of the\nEngine\
    \ Start signal, the quality of Source 2 continued to be seen as good.\nThis alarm\
    \ can be cleared using the xATSSwitchStatusClearLatchedAlarms OID.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "WARNING: The generator failed to stop. After de-assertion of the\n\
    Engine Start signal, the quality of Source 2 continued to be seen as good.\nThis\
    \ alarm can be cleared using the xATSSwitchStatusClearLatchedAlarms OID.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Generator failed to stop.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSSwitchTransferEvent
  eventName: APCxATSSwitchTransferEvent
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: XATS has transferred from one source to the other.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the mode in which the switch is operating.\n\
    (1=Auto, 2=Not-in-Auto, Abnormal Condition  3=Not-in-Auto, manual).\nThe fourth\
    \ argument is the input source selected (1=Source 1, 2=Source 2).\nThe fifth argument\
    \ is type of transfer that took place. (1=Closed, 2=Open, 3=Unknown)\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  explanation: "INFORMATIONAL: XATS has transferred from one source to the other.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the mode in which the switch is operating.\n\
    (1=Auto, 2=Not-in-Auto, Abnormal Condition  3=Not-in-Auto, manual).\nThe fourth\
    \ argument is the input source selected (1=Source 1, 2=Source 2).\nThe fifth argument\
    \ is type of transfer that took place. (1=Closed, 2=Open, 3=Unknown)\n Lista varbinds:\n\
    \   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsInteger03\n  \
    \ mtrapargsInteger02\n   mtrapargsInteger\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'SourcetoSource transfer.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSTestCanceled
  eventName: APCxATSTestCanceled
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The scheduled test has been canceled\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the type of test initiated (1=scheduled, 2=manual).\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: The scheduled test has been canceled\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the type of test initiated (1=scheduled, 2=manual).\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Test canceled.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSTestFailed
  eventName: APCxATSTestFailed
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The initiated test has failed.\nThis alarm can be cleared using\
    \ the xATSSwitchStatusClearLatchedAlarms OID.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The initiated test has failed.\nThis alarm can be cleared\
    \ using the xATSSwitchStatusClearLatchedAlarms OID.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xATSIdentProductName\n   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Initiated test failed.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSTestInitiated
  eventName: APCxATSTestInitiated
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A scheduled test has been initiated.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the type of test initiated (1=scheduled, 2=manual).\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  explanation: "INFORMATIONAL: A scheduled test has been initiated.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the type of test initiated (1=scheduled, 2=manual).\n Lista\
    \ varbinds:\n   mtrapargsString\n   xATSIdentProductName\n   xATSIdentSerialNumber\n\
    \   mtrapargsInteger"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Test initiated.'\n"
- action: add_eventmapping
  eventClassKey: APCxATSTestPassed
  eventName: APCxATSTestPassed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The initiated test has passed\nswitched back to the armed\
    \ position.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: The initiated test has passed\nswitched back to the\
    \ armed position.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\n Lista varbinds:\n   xATSIdentProductName\n\
    \   xATSIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Initiated test passed.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentHighAlarm
  eventName: APCxPDUBranchCurrentHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "WARNING: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit current is above\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentHighAlarmCleared
  eventName: APCxPDUBranchCurrentHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a branch circuit is back within the limits\
    \ \nspecified for that branch circuit.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the panel position of the branch circuit (1-based index).\nThe fourth argument\
    \ is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The current in a branch circuit is back within the\
    \ limits \nspecified for that branch circuit.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the panel position of the branch circuit (1-based index).\nThe fourth\
    \ argument is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit high current alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentLowAlarm
  eventName: APCxPDUBranchCurrentLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "WARNING: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit current is below\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentLowAlarmCleared
  eventName: APCxPDUBranchCurrentLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a branch circuit is back within the limits\
    \ \nspecified for that branch circuit.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the panel position of the branch circuit (1-based index).\nThe fourth argument\
    \ is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The current in a branch circuit is back within the\
    \ limits \nspecified for that branch circuit.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the panel position of the branch circuit (1-based index).\nThe fourth\
    \ argument is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit low current alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentMaxAlarm
  eventName: APCxPDUBranchCurrentMaxAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "SEVERE: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit current is above\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentMaxAlarmCleared
  eventName: APCxPDUBranchCurrentMaxAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a branch circuit is back within the limits\
    \ \nspecified for that branch circuit.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the panel position of the branch circuit (1-based index).\nThe fourth argument\
    \ is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The current in a branch circuit is back within the\
    \ limits \nspecified for that branch circuit.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the panel position of the branch circuit (1-based index).\nThe fourth\
    \ argument is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit high current alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentMinAlarm
  eventName: APCxPDUBranchCurrentMinAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "SEVERE: The current in a branch circuit is outside the limits specified\
    \ for that\nbranch circuit.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the panel\
    \ position of the branch circuit (1-based index).\nThe fourth argument is the\
    \ measured current in tenths of Amps.\nThe fifth argument is the threshold, in\
    \ tenths of Amps, from which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit current is below\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBranchCurrentMinAlarmCleared
  eventName: APCxPDUBranchCurrentMinAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The current in a branch circuit is back within the limits\
    \ \nspecified for that branch circuit.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the panel position of the branch circuit (1-based index).\nThe fourth argument\
    \ is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The current in a branch circuit is back within the\
    \ limits \nspecified for that branch circuit.\nThe first argument is the host\
    \ device serial number.\nThe second argument is the host device name.\nThe third\
    \ argument is the panel position of the branch circuit (1-based index).\nThe fourth\
    \ argument is the measured current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Branch circuit low current alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBreakerChangeEvent
  eventName: APCxPDUBreakerChangeEvent
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A system breaker or switch within the device has changed\
    \ state.\nThey are generated when any of the Q1, Q2 or Q3 breakers have changed\
    \ states.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the breaker that has changed\n\
    (1=UPS FEED (Q1), 2=UPS OUTPUT(Q2), 3=MAINTENANCE BYPASS (Q3).\nThe fourth argument\
    \ is the state of the breaker that has changed (1=OPEN, 2=CLOSED).\nThe fifth\
    \ argument is a 8-bit field representing the state of all breakers in the system,\n\
    when any of one of the Q1, Q2 or Q3 breakers have changed state.\n\nThe bit map\
    \ is represented in the following manner (b7, b6 ... b0)\nb0 - UPS FEED (Q1)\n\
    b1 - MAINTENANCE BYPASS (Q3)\nb2 - UPS OUTPUT (Q2)\nb3 - MAIN INPUT\nb4 - BYPASS\
    \ INPUT\nb5 - CROSS-TIE OUTPUT\n\nExample:  value of 60 (0x3C) indicates that\
    \ the CROSS_TIE, BYPASS and MAIN INPUT, and Q2 breakers \nare CLOSED and Q3, Q1\
    \ breakers are OPEN.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A system breaker or switch within the device has changed\
    \ state.\nThey are generated when any of the Q1, Q2 or Q3 breakers have changed\
    \ states.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the breaker that has changed\n\
    (1=UPS FEED (Q1), 2=UPS OUTPUT(Q2), 3=MAINTENANCE BYPASS (Q3).\nThe fourth argument\
    \ is the state of the breaker that has changed (1=OPEN, 2=CLOSED).\nThe fifth\
    \ argument is a 8-bit field representing the state of all breakers in the system,\n\
    when any of one of the Q1, Q2 or Q3 breakers have changed state.\n\nThe bit map\
    \ is represented in the following manner (b7, b6 ... b0)\nb0 - UPS FEED (Q1)\n\
    b1 - MAINTENANCE BYPASS (Q3)\nb2 - UPS OUTPUT (Q2)\nb3 - MAIN INPUT\nb4 - BYPASS\
    \ INPUT\nb5 - CROSS-TIE OUTPUT\n\nExample:  value of 60 (0x3C) indicates that\
    \ the CROSS_TIE, BYPASS and MAIN INPUT, and Q2 breakers \nare CLOSED and Q3, Q1\
    \ breakers are OPEN.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Breaker/switch change event.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBreakerPositionAlarm
  eventName: APCxPDUBreakerPositionAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A PDU breaker is in a state that compromises system availability.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the breaker (1=MAIN INPUT, 2=BYPASS\
    \ INPUT, 3=CROSS TIE, 4=OUTPUT).\n note: The OUTPUT breaker position alarm is\
    \ applicable only for PDUs with no system bypass.\nThe fourth argument is the\
    \ breaker position (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: A PDU breaker is in a state that compromises system availability.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the breaker (1=MAIN INPUT, 2=BYPASS\
    \ INPUT, 3=CROSS TIE, 4=OUTPUT).\n note: The OUTPUT breaker position alarm is\
    \ applicable only for PDUs with no system bypass.\nThe fourth argument is the\
    \ breaker position (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Breaker position alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBreakerPositionAlarmCleared
  eventName: APCxPDUBreakerPositionAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A PDU breaker is no longer in a state that compromises\
    \ system availability.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the breaker\
    \ (1=MAIN INPUT, 2=BYPASS INPUT, 3=CROSS TIE, 4=OUTPUT).\n note: The OUTPUT breaker\
    \ position alarm cleared is applicable only for PDUs with no system bypass.\n\
    \ Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: A PDU breaker is no longer in a state that compromises\
    \ system availability.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the breaker\
    \ (1=MAIN INPUT, 2=BYPASS INPUT, 3=CROSS TIE, 4=OUTPUT).\n note: The OUTPUT breaker\
    \ position alarm cleared is applicable only for PDUs with no system bypass.\n\
    \ Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Breaker alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBypassVoltageHighAlarm
  eventName: APCxPDUBypassVoltageHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Three-phase bypass input voltage to the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1-N,\
    \ 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths of Volts.\n\
    The fifth argument is the threshold, in tenths of Volts, above which the alarm\
    \ was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: Three-phase bypass input voltage to the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\nThe fifth argument is the threshold, in tenths of Volts, above which\
    \ the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Bypass input voltage is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBypassVoltageHighAlarmCleared
  eventName: APCxPDUBypassVoltageHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Three-phase bypass input voltage to the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: Three-phase bypass input voltage to the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Bypass input voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBypassVoltageLowAlarm
  eventName: APCxPDUBypassVoltageLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Three-phase bypass input voltage to the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1-N,\
    \ 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths of Volts.\n\
    The fifth argument is the threshold, in tenths of Volts, from which the alarm\
    \ was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: Three-phase bypass input voltage to the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\nThe fifth argument is the threshold, in tenths of Volts, from which\
    \ the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Bypass input voltage is below threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUBypassVoltageLowAlarmCleared
  eventName: APCxPDUBypassVoltageLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Three-phase bypass input voltage to the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: Three-phase bypass input voltage to the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Bypass input low voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUCoolingFanAlarm
  eventName: APCxPDUCoolingFanAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's internal cooling fans have failed.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: The device's internal cooling fans have failed.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Cooling fan failure.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUCoolingFanAlarmCleared
  eventName: APCxPDUCoolingFanAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's cooling fans are now functioning properly.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The device's cooling fans are now functioning properly.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Cooling fan alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUDataCommMismatchError
  eventName: APCxPDUDataCommMismatchError
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A data incompatibility exists within the device.  This\nis typically\
    \ the result of mismatches between firmware revisions\nof the transfer switch\
    \ controller and the Network Management interface.\nThe first argument is the\
    \ host device serial number.\nThe second argument is the host device name.\n Lista\
    \ varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: A data incompatibility exists within the device.  This\nis\
    \ typically the result of mismatches between firmware revisions\nof the transfer\
    \ switch controller and the Network Management interface.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'XPDU data mismatch error.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUDataCommMismatchErrorCleared
  eventName: APCxPDUDataCommMismatchErrorCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The internal data incompatibility has been resolved.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The internal data incompatibility has been resolved.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'XPDU data mismatch error cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUEpoArmed
  eventName: APCxPDUEpoArmed
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's Emergency Power Off (EPO) circuit has been\n\
    switched back to the armed position.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The device's Emergency Power Off (EPO) circuit has\
    \ been\nswitched back to the armed position.\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\n Lista varbinds:\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'EPO armed.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUEpoTestMode
  eventName: APCxPDUEpoTestMode
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The device's Emergency Power Off (EPO) circuit has been\nswitched\
    \ back to the test position.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\n Lista varbinds:\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "WARNING: The device's Emergency Power Off (EPO) circuit has been\n\
    switched back to the test position.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\n Lista varbinds:\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'EPO disabled.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUFuseBlownAlarm
  eventName: APCxPDUFuseBlownAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: One or more fuses in this PDU have been detected as open.\nThese\
    \ fuses are in the feed to the UPS associated with this PDU.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the phase (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: One or more fuses in this PDU have been detected as open.\n\
    These fuses are in the feed to the UPS associated with this PDU.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the phase (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fuse detected opened.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUFuseBlownAlarmCleared
  eventName: APCxPDUFuseBlownAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A previous check fuse alarm in this PDU has cleared.\n\
    These fuses are in the feed to the UPS associated with this PDU.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the phase (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: A previous check fuse alarm in this PDU has cleared.\n\
    These fuses are in the feed to the UPS associated with this PDU.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    The third argument is the phase (1=L1, 2=L2, 3=L3).\n Lista varbinds:\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Fuse alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInputContactStateAbnormal
  eventName: APCxPDUInputContactStateAbnormal
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: A user input contact on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=OPEN, 2=CLOSED).\nThe sixth argument is the configured normal\
    \ input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: A user input contact on the device has changed to its abnormal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=OPEN, 2=CLOSED).\nThe sixth argument is the configured normal\
    \ input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input contact has changed to its\
    \ abnormal state.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInputContactStateNormal
  eventName: APCxPDUInputContactStateNormal
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: A user input contact on the device has changed to its normal\
    \ state.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the input contact number. \n\
    The fourth argument is the input contact name.\nThe fifth argument is the input\
    \ contact state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured normal\
    \ input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "INFORMATIONAL: A user input contact on the device has changed to its\
    \ normal state.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\nThe third argument is the input contact number.\
    \ \nThe fourth argument is the input contact name.\nThe fifth argument is the\
    \ input contact state (1=CLOSED, 2=OPEN).\nThe sixth argument is the configured\
    \ normal input contact state (1=OPEN, 2=CLOSED).\n Lista varbinds:\n   mtrapargsString02\n\
    \   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input contact has changed to its\
    \ normal state.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInputVoltageHighAlarm
  eventName: APCxPDUInputVoltageHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Three-phase input voltage to the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1-N, 2=L2-N, 3=L3-N,\
    \ 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument is the measured voltage\
    \ in tenths of Volts.\nThe fifth argument is the threshold, in tenths of Volts,\
    \ above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "SEVERE: Three-phase input voltage to the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1-N, 2=L2-N, 3=L3-N,\
    \ 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument is the measured voltage\
    \ in tenths of Volts.\nThe fifth argument is the threshold, in tenths of Volts,\
    \ above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Main input voltage is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInputVoltageHighAlarmCleared
  eventName: APCxPDUInputVoltageHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Three-phase input voltage to the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: Three-phase input voltage to the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Main input high voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInputVoltageLowAlarm
  eventName: APCxPDUInputVoltageLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: Three-phase input voltage to the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1-N, 2=L2-N, 3=L3-N,\
    \ 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument is the measured voltage\
    \ in tenths of Volts.\nThe fifth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  explanation: "SEVERE: Three-phase input voltage to the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1-N, 2=L2-N, 3=L3-N,\
    \ 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument is the measured voltage\
    \ in tenths of Volts.\nThe fifth argument is the threshold, in tenths of Volts,\
    \ from which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n\
    \   mtrapargsInteger02\n   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n\
    \   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Input voltage is below threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInputVoltageLowAlarmCleared
  eventName: APCxPDUInputVoltageLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Three-phase input voltage to the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: Three-phase input voltage to the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N, 4=unused, 5=L1-L2, 6=L2-L3, 7=L3-L1).\nThe fourth argument\
    \ is the measured voltage in tenths of Volts.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Main input low voltage cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInternalCommError
  eventName: APCxPDUInternalCommError
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: There is an internal communication error in the device.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "SEVERE: There is an internal communication error in the device.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Internal communication error.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUInternalCommErrorCleared
  eventName: APCxPDUInternalCommErrorCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: Internal communication has been restored.\nThe first argument\
    \ is the host device serial number.\nThe second argument is the host device name.\n\
    \ Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: Internal communication has been restored.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Communication error cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputCurrentHighAlarm
  eventName: APCxPDUOutputCurrentHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The three-phase load current of the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1, 2=L2, 3=L3).\n\
    The fourth argument is the measured current in tenths of Amps.\nThe fifth argument\
    \ is the threshold, in tenths of Amps, above which the alarm was generated.\n\
    \ Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The three-phase load current of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1,\
    \ 2=L2, 3=L3).\nThe fourth argument is the measured current in tenths of Amps.\n\
    The fifth argument is the threshold, in tenths of Amps, above which the alarm\
    \ was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output current is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputCurrentHighAlarmCleared
  eventName: APCxPDUOutputCurrentHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The three-phase output current of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in tenths of\
    \ Amps.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The three-phase output current of the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in tenths of\
    \ Amps.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output high current alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputCurrentLowAlarm
  eventName: APCxPDUOutputCurrentLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The three-phase output load current of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1,\
    \ 2=L2, 3=L3).\nThe fourth argument is the measured current in tenths of Amps.\n\
    The fifth argument is the threshold, in tenths of Amps, from which the alarm was\
    \ generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The three-phase output load current of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in tenths of\
    \ Amps.\nThe fifth argument is the threshold, in tenths of Amps, from which the\
    \ alarm was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output current is below threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputCurrentLowAlarmCleared
  eventName: APCxPDUOutputCurrentLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The three-phase output load current of the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in tenths of\
    \ Amps.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The three-phase output load current of the device is\
    \ back within the specified limits.\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the phase (1=L1, 2=L2, 3=L3).\nThe fourth argument is the measured current in\
    \ tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output low current alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputFrequencyAlarm
  eventName: APCxPDUOutputFrequencyAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The devices output frequency is outside the specified limits.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the frequency deviation from the nominal\
    \ in tenths of Hertz.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: The devices output frequency is outside the specified limits.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the frequency deviation from the nominal\
    \ in tenths of Hertz.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output frequency is outofrange.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputFrequencyAlarmCleared
  eventName: APCxPDUOutputFrequencyAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The devices output frequency is back within the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The devices output frequency is back within the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output frequency in range.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputNeutralCurrentHighAlarm
  eventName: APCxPDUOutputNeutralCurrentHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The three-phase neutral current of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the measured\
    \ current in tenths of Amps.\nThe fourth argument is the threshold, in tenths\
    \ of Amps, above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "WARNING: The three-phase neutral current of the device is outside\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the measured\
    \ current in tenths of Amps.\nThe fourth argument is the threshold, in tenths\
    \ of Amps, above which the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger\n\
    \   mtrapargsInteger02\n   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output neutral current is above\
    \ threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputNeutralCurrentHighAlarmCleared
  eventName: APCxPDUOutputNeutralCurrentHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The output neutral current of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the measured\
    \ current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The output neutral current of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the measured\
    \ current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output neutral high current alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputVoltageHighAlarm
  eventName: APCxPDUOutputVoltageHighAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The three-phase output voltage of the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1-N, 2=L2-N, 3=L3-N).\n\
    The fourth argument is the measured voltage in tenths of Volts.\nThe fifth argument\
    \ is the threshold, in tenths of Volts, above which the alarm was generated.\n\
    \ Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The three-phase output voltage of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1-N,\
    \ 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths of Volts.\n\
    The fifth argument is the threshold, in tenths of Volts, above which the alarm\
    \ was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output voltage is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputVoltageHighAlarmCleared
  eventName: APCxPDUOutputVoltageHighAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The three-phase output voltage of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The three-phase output voltage of the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output high voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputVoltageLowAlarm
  eventName: APCxPDUOutputVoltageLowAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The three-phase output voltage of the device is outside the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the phase (1=L1-N, 2=L2-N, 3=L3-N).\n\
    The fourth argument is the measured voltage in tenths of Volts.\nThe fifth argument\
    \ is the threshold, in tenths of Volts, from which the alarm was generated.\n\
    \ Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n   mtrapargsInteger\n\
    \   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  explanation: "SEVERE: The three-phase output voltage of the device is outside the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the phase (1=L1-N,\
    \ 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths of Volts.\n\
    The fifth argument is the threshold, in tenths of Volts, from which the alarm\
    \ was generated.\n Lista varbinds:\n   mtrapargsInteger03\n   mtrapargsInteger02\n\
    \   mtrapargsInteger\n   xPDUIdentProductName\n   xPDUIdentSerialNumber\n   mtrapargsString"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output voltage is below threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUOutputVoltageLowAlarmCleared
  eventName: APCxPDUOutputVoltageLowAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The three-phase output voltage of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The three-phase output voltage of the device is back\
    \ within the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the phase\
    \ (1=L1-N, 2=L2-N, 3=L3-N).\nThe fourth argument is the measured voltage in tenths\
    \ of Volts.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n  \
    \ xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Output low voltage alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUSystemGroundCurrentAlarm
  eventName: APCxPDUSystemGroundCurrentAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The earth ground current of the device is over the specified limits.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\nThe third argument is the measured current in tenths of Amps.\n\
    The fourth argument is the threshold, in tenths of Amps, above which the alarm\
    \ was generated.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: The earth ground current of the device is over the specified\
    \ limits.\nThe first argument is the host device serial number.\nThe second argument\
    \ is the host device name.\nThe third argument is the measured current in tenths\
    \ of Amps.\nThe fourth argument is the threshold, in tenths of Amps, above which\
    \ the alarm was generated.\n Lista varbinds:\n   mtrapargsInteger\n   mtrapargsInteger02\n\
    \   xPDUIdentProductName\n   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Earth ground current is above threshold.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUSystemGroundCurrentAlarmCleared
  eventName: APCxPDUSystemGroundCurrentAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The earth ground current of the device is back within the\
    \ specified limits.\nThe first argument is the host device serial number.\nThe\
    \ second argument is the host device name.\nThe third argument is the measured\
    \ current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The earth ground current of the device is back within\
    \ the specified limits.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the measured\
    \ current in tenths of Amps.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Earth ground high current alarm\
    \ cleared.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUSystemInMaintenanceBypassMode
  eventName: APCxPDUSystemInMaintenanceBypassMode
  eventPath: /CYIIG/SAI_APC
  example: "WARNING: The PDU state has changed to maintenance bypass mode.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "WARNING: The PDU state has changed to maintenance bypass mode.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU state changed to maintenance\
    \ bypass.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUSystemInUPSOperationalMode
  eventName: APCxPDUSystemInUPSOperationalMode
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The PDU state has changed to UPS operational mode.\nThe\
    \ first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The PDU state has changed to UPS operational mode.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU state changed to UPS operational.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUSystemStateAlarm
  eventName: APCxPDUSystemStateAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The PDU's breakers (Q1, Q2 & Q3) are in a configuration that might\
    \ lead\nto system unavailability.  it may signify a temporary condition, when\
    \ the breakers\nare placed in an atypical manner as the user transitions to (UPS\
    \ OPERATION or MAINTENANCE BYPASS)\nThe first argument is the host device serial\
    \ number.\nThe second argument is the host device name.\nThe third argument is\
    \ the type of state change (1=NO UPS INPUT, 2=NO PANEL FEED, 3=ATYPICAL BYPASS\
    \ MODE).\n note: The NO_PANEL_FEED alarm is applicable only for PDUs with system\
    \ bypass.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n  \
    \ mtrapargsString\n   xPDUIdentSerialNumber"
  explanation: "SEVERE: The PDU's breakers (Q1, Q2 & Q3) are in a configuration that\
    \ might lead\nto system unavailability.  it may signify a temporary condition,\
    \ when the breakers\nare placed in an atypical manner as the user transitions\
    \ to (UPS OPERATION or MAINTENANCE BYPASS)\nThe first argument is the host device\
    \ serial number.\nThe second argument is the host device name.\nThe third argument\
    \ is the type of state change (1=NO UPS INPUT, 2=NO PANEL FEED, 3=ATYPICAL BYPASS\
    \ MODE).\n note: The NO_PANEL_FEED alarm is applicable only for PDUs with system\
    \ bypass.\n Lista varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n  \
    \ mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU state change alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUSystemStateAlarmCleared
  eventName: APCxPDUSystemStateAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The PDU's breakers (Q1, Q2 & Q3) are set in a configuration\n\
    that is a non-alarm state.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the type of\
    \ state change (1=NO UPS INPUT, 2=NO PANEL FEED, 3=ATYPICAL BYPASS MODE).\n note:\
    \ The NO_PANEL_FEED alarm is applicable only for PDUs with system bypass.\n Lista\
    \ varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The PDU's breakers (Q1, Q2 & Q3) are set in a configuration\n\
    that is a non-alarm state.\nThe first argument is the host device serial number.\n\
    The second argument is the host device name.\nThe third argument is the type of\
    \ state change (1=NO UPS INPUT, 2=NO PANEL FEED, 3=ATYPICAL BYPASS MODE).\n note:\
    \ The NO_PANEL_FEED alarm is applicable only for PDUs with system bypass.\n Lista\
    \ varbinds:\n   mtrapargsInteger\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'PDU normal state change.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUTransformerTempAlarm
  eventName: APCxPDUTransformerTempAlarm
  eventPath: /CYIIG/SAI_APC
  example: "SEVERE: The device's isolation transformer is over temperature.\nThe first\
    \ argument is the host device serial number.\nThe second argument is the host\
    \ device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "SEVERE: The device's isolation transformer is over temperature.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Transformer temp alarm.'\n"
- action: add_eventmapping
  eventClassKey: APCxPDUTransformerTempAlarmCleared
  eventName: APCxPDUTransformerTempAlarmCleared
  eventPath: /CYIIG/SAI_APC
  example: "INFORMATIONAL: The device's isolation transformer is no longer over temperature.\n\
    The first argument is the host device serial number.\nThe second argument is the\
    \ host device name.\n Lista varbinds:\n   xPDUIdentProductName\n   mtrapargsString\n\
    \   xPDUIdentSerialNumber"
  explanation: "INFORMATIONAL: The device's isolation transformer is no longer over\
    \ temperature.\nThe first argument is the host device serial number.\nThe second\
    \ argument is the host device name.\n Lista varbinds:\n   xPDUIdentProductName\n\
    \   mtrapargsString\n   xPDUIdentSerialNumber"
  sequence: 12
  transform: " \nevt.severity = 2\nevt.summary = 'Transformer temp alarm cleared.'\n"
- action: add_eventmapping
  eventClassKey: BatteryDischarging-Aranjuez-Monta
  eventName: BatteryDischarging-Aranjuez-Monta
  eventPath: /SNMPTraps/enertel
  example: "'Long Descr.:Battery is DischargingVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery is DischargingVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 3'
- action: add_eventmapping
  eventClassKey: CROND
  eventName: CROND
  eventPath: /App/Log
  example: (root) CMD (run-parts /etc/cron.hourly)
  explanation: (mythtv) CMD (/usr/bin/mythfilldatabase>/dev/null 2>&1)
  regex: \((?P<username>\S+)\) CMD \((?P<command>.*)\)
  sequence: 1
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLAUagingTRAP
  eventName: IDRbrzaccVLAUagingTRAP
  eventPath: /CYIIG/WimaxAlvarion/IDRbrzaccVLAUdisassociatedTRAP
  example: "'Long Descr.: An AU/BU trap indicating that the unit association was aged\
    \ outand removed from the Association database following its failureto acknowledge\
    \ a specified number of consecutive frames. Variables:  1: brzaccVLTrapSUMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU\
    \ only.SU/RB MAC Address. '"
  explanation: "'Long Descr.: An AU/BU trap indicating that the unit association was\
    \ aged outand removed from the Association database following its failureto acknowledge\
    \ a specified number of consecutive frames. Variables:  1: brzaccVLTrapSUMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU\
    \ only.SU/RB MAC Address. '"
  sequence: 12
  transform: 'evt.severity = 0

    evt.summary = "Equipo desasociado por inactividad" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLAUdisassociatedTRAP
  eventName: IDRbrzaccVLAUdisassociatedTRAP
  eventPath: /CYIIG/WimaxAlvarion/IDRbrzaccVLAUdisassociatedTRAP
  example: "'Long Descr.: An AU/BU trap indicating that an SU/RB has been disassociated\
    \ from the AU.The AU/BU decides that an SU/RB has been disassociated from it and\
    \ remove itfrom the ADB after receiving from another AU/BU a SNAP frame with the\
    \ SU/RB MAC address.The SNAP frame indicating a network topology change where\
    \ the SU/RB has associated with another AU/BU will be received if both AUs/BUs\
    \ are connected to the same Ethernet backbone. Variables:  1: brzaccVLTrapSUMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU\
    \ only.SU/RB MAC Address. '"
  explanation: "'Long Descr.: An AU/BU trap indicating that an SU/RB has been disassociated\
    \ from the AU.The AU/BU decides that an SU/RB has been disassociated from it and\
    \ remove itfrom the ADB after receiving from another AU/BU a SNAP frame with the\
    \ SU/RB MAC address.The SNAP frame indicating a network topology change where\
    \ the SU/RB has associated with another AU/BU will be received if both AUs/BUs\
    \ are connected to the same Ethernet backbone. Variables:  1: brzaccVLTrapSUMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU\
    \ only.SU/RB MAC Address. '"
  sequence: 12
  transform: 'evt.severity = 3

    evt.summary = "Equipo desasociado" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLAUwirelessQualityTRAP
  eventName: IDRbrzaccVLAUwirelessQualityTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap, indicating that the quality of the wireless\
    \ link (retransmissions rate) has changed and dropped below (Off) or increased\
    \  above (On) a threshold , defined by the *brzaccVLWirelessTrapThreshold. The\
    \ threshold for AU/BU is a percentage of retransmissions. Variables:  1: brzaccVLTrapToggle\t\
    \   Syntax= Integer      Descr= Applicable to all units.An On/Off toggle status.\
    \   2: brzaccVLTrapRTx\t   Syntax= Integer      Descr= Applicable to AU/BU only.\
    \ Retransmissions as a percentage of total transmissions. '"
  explanation: "'Long Descr.: An AU/BU trap, indicating that the quality of the wireless\
    \ link (retransmissions rate) has changed and dropped below (Off) or increased\
    \  above (On) a threshold , defined by the *brzaccVLWirelessTrapThreshold. The\
    \ threshold for AU/BU is a percentage of retransmissions. Variables:  1: brzaccVLTrapToggle\t\
    \   Syntax= Integer      Descr= Applicable to all units.An On/Off toggle status.\
    \   2: brzaccVLTrapRTx\t   Syntax= Integer      Descr= Applicable to AU/BU only.\
    \ Retransmissions as a percentage of total transmissions. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "La calidad del enlace es inferior al umbral" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLDFSFrequcnyTRAP
  eventName: IDRbrzaccVLDFSFrequcnyTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only.A trap indicating that the unit\
    \ moved to a new frequency.  Variables:  1: brzaccVLDFSMoveFreq\t   Syntax= Integer\
    \      Descr= Applicable to AU/BU with HW revision B and lower (for units with\
    \ HW revision C and higher replaced by brzaccVLTrapDFSMoveFreq New to support\
    \ a resolution of 0.5 MHz). The new frequency in MHz after detecting radar on\
    \ a previous channel.   2: brzaccVLDFSMoveFreqNew\t   Syntax= Display String \
    \     Descr= Applicable to AU/BU. The new frequency in MHz after detecting radar\
    \ on a previous channel. (Replaces brzaccVLDFSMoveFreq to support a resolution\
    \ of 0.5 MHz for units with HW revision C and higher). '"
  explanation: "'Long Descr.: Applicable to AU/BU only.A trap indicating that the\
    \ unit moved to a new frequency.  Variables:  1: brzaccVLDFSMoveFreq\t   Syntax=\
    \ Integer      Descr= Applicable to AU/BU with HW revision B and lower (for units\
    \ with HW revision C and higher replaced by brzaccVLTrapDFSMoveFreq New to support\
    \ a resolution of 0.5 MHz). The new frequency in MHz after detecting radar on\
    \ a previous channel.   2: brzaccVLDFSMoveFreqNew\t   Syntax= Display String \
    \     Descr= Applicable to AU/BU. The new frequency in MHz after detecting radar\
    \ on a previous channel. (Replaces brzaccVLDFSMoveFreq to support a resolution\
    \ of 0.5 MHz for units with HW revision C and higher). '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Frecuencia cambiada por radar a " + evt.brzaccVLDFSMoveFreqNew '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLDFSNoFreeChannelsExistsTRAP
  eventName: IDRbrzaccVLDFSNoFreeChannelsExistsTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: 'Long Descr.: Applicable to AU/BU only.A trap indicating that a radar was
    detected and there is no free channel.  '
  explanation: 'Long Descr.: Applicable to AU/BU only.A trap indicating that a radar
    was detected and there is no free channel.  '
  sequence: 12
  transform: 'evt.severity = 4

    evt.summary = "Radar detectado. No hay frecuencias libres" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLDFSRadarDetecetedTRAP
  eventName: IDRbrzaccVLDFSRadarDetecetedTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: 'Long Descr.: DFS: Applicable to AU/BU only.A trap indicating that a radar
    was detected.  '
  explanation: 'Long Descr.: DFS: Applicable to AU/BU only.A trap indicating that
    a radar was detected.  '
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Radar detectado" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLLoadingStatusTRAP
  eventName: IDRbrzaccVLLoadingStatusTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to all units.A trap indicating that last FTP/TFTP\
    \ loading process has been finished successfully or failed.  Variables:  1: brzaccVLTrapFtpOrTftpStatus\t\
    \   Syntax= Integer      Descr= Applicable to all units.The status of the last\
    \ FTP/TFTP loading procedure.   2: brzaccVLUnitMacAddress\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to all units.  Unit hardware\
    \ MAC address. '"
  explanation: "'Long Descr.: Applicable to all units.A trap indicating that last\
    \ FTP/TFTP loading process has been finished successfully or failed.  Variables:\
    \  1: brzaccVLTrapFtpOrTftpStatus\t   Syntax= Integer      Descr= Applicable to\
    \ all units.The status of the last FTP/TFTP loading procedure.   2: brzaccVLUnitMacAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.  Unit hardware MAC address. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"Volcado de fichero finalizado\" \n\
    evt._action = \"history\""
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLParameterChangedTRAP
  eventName: IDRbrzaccVLParameterChangedTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to all units. A trap indicating a change in a\
    \ CIR/MIR, IP Filter or VLAN parameter. Variables:  1: brzaccVLTrapParameterChanged\t\
    \   Syntax= Integer      Descr= Applicable to all units.A modification to one\
    \ of the parameters related to CIR/MIR,  IP Filtering or VLAN. '"
  explanation: "'Long Descr.: Applicable to all units. A trap indicating a change\
    \ in a CIR/MIR, IP Filter or VLAN parameter. Variables:  1: brzaccVLTrapParameterChanged\t\
    \   Syntax= Integer      Descr= Applicable to all units.A modification to one\
    \ of the parameters related to CIR/MIR,  IP Filtering or VLAN. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"Cambio de configuracion del equipo\"\
    \ \nevt._action = \"history\""
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLPowerUpFromReset
  eventName: IDRbrzaccVLPowerUpFromReset
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap indicating power up after Reset. Variables:\
    \  1: brzaccVLUnitMacAddress\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.  Unit hardware MAC address. '"
  explanation: "'Long Descr.: An AU/BU trap indicating power up after Reset. Variables:\
    \  1: brzaccVLUnitMacAddress\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.  Unit hardware MAC address. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Power up after reset" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLPromiscuousModeTRAP
  eventName: IDRbrzaccVLPromiscuousModeTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap, indicating that the AU/BU In (On) Promiscuous\
    \ Mode or out (Off) Promiscuous Mode. Variables:  1: brzaccVLTrapToggle\t   Syntax=\
    \ Integer      Descr= Applicable to all units.An On/Off toggle status.   2: brzaccVLUnitMacAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.  Unit hardware MAC address. '"
  explanation: "'Long Descr.: An AU/BU trap, indicating that the AU/BU In (On) Promiscuous\
    \ Mode or out (Off) Promiscuous Mode. Variables:  1: brzaccVLTrapToggle\t   Syntax=\
    \ Integer      Descr= Applicable to all units.An On/Off toggle status.   2: brzaccVLUnitMacAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.  Unit hardware MAC address. '"
  sequence: 12
  transform: "evt.severity = 2\nif  hasattr(evt, 'brzaccVLTrapToggle') :\n  if evt.brzaccVLTrapToggle\
    \ == \"1\":\n    evt.summary = \"Modo promiscuo activado/desactivado (On)\" \n\
    \  else:\n\tevt.severity = 0\n\tevt.summary = \"Modo promiscuo activado/desactivado\
    \ (Off)\"\n    "
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLSUassociatedAUTRAP
  eventName: IDRbrzaccVLSUassociatedAUTRAP
  eventPath: /CYIIG/WimaxAlvarion/IDRbrzaccVLAUdisassociatedTRAP
  example: "'Long Descr.: An AU/BU trap indicating a new association with an SU/RB.\
    \ Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress  (Octet String)\
    \ (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address. '"
  explanation: "'Long Descr.: An AU/BU trap indicating a new association with an SU/RB.\
    \ Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress  (Octet String)\
    \ (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address. '"
  sequence: 12
  transform: 'evt.severity = 1

    evt.summary = ".CLEAR: Equipo asociado" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLSUassociatedTRAP
  eventName: IDRbrzaccVLSUassociatedTRAP
  eventPath: /CYIIG/WimaxAlvarion/IDRbrzaccVLAUdisassociatedTRAP
  example: "'Long Descr.: An SU/RB trap indicating association with an AU/BU. In addition\
    \ to the MAC address information of the AU/BU, the trap also includes information\
    \ on the average SNR of frames received from the AU/BU. Variables:  1: brzaccVLAssociatedAU\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to SU/RB\
    \ only.  Associated AU MAC address. '"
  explanation: "'Long Descr.: An SU/RB trap indicating association with an AU/BU.\
    \ In addition to the MAC address information of the AU/BU, the trap also includes\
    \ information on the average SNR of frames received from the AU/BU. Variables:\
    \  1: brzaccVLAssociatedAU\t   Syntax= MacAddress  (Octet String) (SIZE(6))  \
    \    Descr= Applicable to SU/RB only.  Associated AU MAC address. '"
  sequence: 12
  transform: 'evt.severity = 0

    evt.summary = ".CLEAR: El cliente se ha asociado" '
- action: add_eventmapping
  eventClassKey: IDRbrzaccVLTelnetStatusTRAP
  eventName: IDRbrzaccVLTelnetStatusTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to all units.A trap indicating that a log-in\
    \ or log-out has been performed via Telnet. Includes the log-in access right and\
    \ the IP address of the PC performing Telnet. Variables:  1: brzaccVLTrapLog\t\
    \   Syntax= Integer      Descr= Applicable to all units.Login or logout to the\
    \ Monitor program via Telnet.   2: brzaccVLTrapAccessRights\t   Syntax= Integer\
    \      Descr= Applicable to all units.The access rights used for login.   3: brzaccVLTrapTelnetUserIpAddress\t\
    \   Syntax= IP Address      Descr= Applicable to all units.The IP address of a\
    \ Telnet user. '"
  explanation: "'Long Descr.: Applicable to all units.A trap indicating that a log-in\
    \ or log-out has been performed via Telnet. Includes the log-in access right and\
    \ the IP address of the PC performing Telnet. Variables:  1: brzaccVLTrapLog\t\
    \   Syntax= Integer      Descr= Applicable to all units.Login or logout to the\
    \ Monitor program via Telnet.   2: brzaccVLTrapAccessRights\t   Syntax= Integer\
    \      Descr= Applicable to all units.The access rights used for login.   3: brzaccVLTrapTelnetUserIpAddress\t\
    \   Syntax= IP Address      Descr= Applicable to all units.The IP address of a\
    \ Telnet user. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Conexion telnet de equipo " + evt.brzaccVLTrapTelnetUserIpAddress

    evt._action = "history"'
- action: add_eventmapping
  eventClassKey: alarmsBlockedTrap
  eventName: alarmsBlockedTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Alarms Are BlockedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Alarms Are BlockedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: battFailTrap
  eventName: battFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Battery FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 3'
- action: add_eventmapping
  eventClassKey: battFuseDisconTrap
  eventName: battFuseDisconTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Battery Fuse DisconnectedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery Fuse DisconnectedVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: battFuseTrap
  eventName: battFuseTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Battery Fuse FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery Fuse FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: battTempTrap
  eventName: battTempTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Battery Temperature AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery Temperature AlarmVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: battTestTrap
  eventName: battTestTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Battery Test in ProgressVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery Test in ProgressVariables:  1: trapString\t \
    \  Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: blockedAlarmsTrap
  eventName: blockedAlarmsTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Alarms are BlockedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Alarms are BlockedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: brzaccVLAUSUnsupportedSubscriberTypeTRAP
  eventName: brzaccVLAUSUnsupportedSubscriberTypeTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AUS only.This trap is generated when a subscriber\
    \ with unsupported type tries to associate to AUS.The AUS supports only SU-3,\
    \ SU-6, SU-V. If licensed, SU-54 is supported too.For 900 MHz band, AUS supports\
    \ only SU-3. If licensed, SU-8 is supported too.The first variable of the trap\
    \ is the subscriber MAC Address.The second variable is the type of subscriber\
    \ Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress  (Octet String)\
    \ (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address.   2: brzaccVLTrapSubscriberType\t\
    \   Syntax= Integer      Descr= Applicable to AUS only.The type of subscriber\
    \ that was rejected by AUS   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to AUS only.This trap is generated when a\
    \ subscriber with unsupported type tries to associate to AUS.The AUS supports\
    \ only SU-3, SU-6, SU-V. If licensed, SU-54 is supported too.For 900 MHz band,\
    \ AUS supports only SU-3. If licensed, SU-8 is supported too.The first variable\
    \ of the trap is the subscriber MAC Address.The second variable is the type of\
    \ subscriber Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress  (Octet\
    \ String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address.  \
    \ 2: brzaccVLTrapSubscriberType\t   Syntax= Integer      Descr= Applicable to\
    \ AUS only.The type of subscriber that was rejected by AUS   3: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLAUagingTRAP
  eventName: brzaccVLAUagingTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap indicating that the unit association was aged\
    \ outand removed from the Association database following its failureto acknowledge\
    \ a specified number of consecutive frames. Variables:  1: brzaccVLTrapSUMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU\
    \ only.SU/RB MAC Address.   2: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: An AU/BU trap indicating that the unit association was\
    \ aged outand removed from the Association database following its failureto acknowledge\
    \ a specified number of consecutive frames. Variables:  1: brzaccVLTrapSUMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU\
    \ only.SU/RB MAC Address.   2: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLAUwirelessQualityTRAP
  eventName: brzaccVLAUwirelessQualityTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap, indicating that the quality of the wireless\
    \ link (retransmissions rate) has changed and dropped below (Off) or increased\
    \  above (On) a threshold , defined by the *brzaccVLWirelessTrapThreshold. The\
    \ threshold for AU/BU is a percentage of retransmissions. Variables:  1: brzaccVLTrapToggle\t\
    \   Syntax= Integer      Descr= Applicable to AU/BU only.An On/Off toggle status.\
    \   2: brzaccVLTrapUnitMacAddr\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.The MAC Address of the unit that is initiating\
    \ the trap.   3: brzaccVLTrapRTx\t   Syntax= Integer      Descr= Applicable to\
    \ AU/BU only. Retransmissions as a percentage of total transmissions.   4: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  explanation: "'Long Descr.: An AU/BU trap, indicating that the quality of the wireless\
    \ link (retransmissions rate) has changed and dropped below (Off) or increased\
    \  above (On) a threshold , defined by the *brzaccVLWirelessTrapThreshold. The\
    \ threshold for AU/BU is a percentage of retransmissions. Variables:  1: brzaccVLTrapToggle\t\
    \   Syntax= Integer      Descr= Applicable to AU/BU only.An On/Off toggle status.\
    \   2: brzaccVLTrapUnitMacAddr\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.The MAC Address of the unit that is initiating\
    \ the trap.   3: brzaccVLTrapRTx\t   Syntax= Integer      Descr= Applicable to\
    \ AU/BU only. Retransmissions as a percentage of total transmissions.   4: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Calidad del enlace por debajo del margen definido" '
- action: add_eventmapping
  eventClassKey: brzaccVLDFSFrequencyTRAP
  eventName: brzaccVLDFSFrequencyTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only.A trap indicating that the unit\
    \ moved to a new frequency.  Variables:  1: brzaccVLDFSMoveFreq\t   Syntax= Integer\
    \      Descr= Applicable to AU/BU with HW revision B and lower (for units with\
    \ HW revision C and higher replaced by brzaccVLTrapDFSMoveFreq New to support\
    \ a resolution of 0.5 MHz). The new frequency in MHz after detecting radar on\
    \ a previous channel.   2: brzaccVLDFSMoveFreqNew\t   Syntax= Display String \
    \     Descr= Applicable to AU/BU. The new frequency in MHz after detecting radar\
    \ on a previous channel. (Replaces brzaccVLDFSMoveFreq to support a resolution\
    \ of 0.5 MHz for units with HW revision C and higher. If HW revision is B it will\
    \ contain the same value as brzaccVLDFSMoveFreq, but represented as string.).\
    \   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable to\
    \ AU/BU only. Trap Variable indicating the sequence number of the last trap generated.\
    \ '"
  explanation: "'Long Descr.: Applicable to AU/BU only.A trap indicating that the\
    \ unit moved to a new frequency.  Variables:  1: brzaccVLDFSMoveFreq\t   Syntax=\
    \ Integer      Descr= Applicable to AU/BU with HW revision B and lower (for units\
    \ with HW revision C and higher replaced by brzaccVLTrapDFSMoveFreq New to support\
    \ a resolution of 0.5 MHz). The new frequency in MHz after detecting radar on\
    \ a previous channel.   2: brzaccVLDFSMoveFreqNew\t   Syntax= Display String \
    \     Descr= Applicable to AU/BU. The new frequency in MHz after detecting radar\
    \ on a previous channel. (Replaces brzaccVLDFSMoveFreq to support a resolution\
    \ of 0.5 MHz for units with HW revision C and higher. If HW revision is B it will\
    \ contain the same value as brzaccVLDFSMoveFreq, but represented as string.).\
    \   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable to\
    \ AU/BU only. Trap Variable indicating the sequence number of the last trap generated.\
    \ '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Cambio de Frecuencia a "  + evt.brzaccVLDFSMoveFreqNew '
- action: add_eventmapping
  eventClassKey: brzaccVLDFSNoFreeChannelsExistsTRAP
  eventName: brzaccVLDFSNoFreeChannelsExistsTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only.A trap indicating that a radar\
    \ was detected and there is no free channel.  Variables:  1: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to AU/BU only.A trap indicating that a radar\
    \ was detected and there is no free channel.  Variables:  1: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: 'evt.severity = 5

    evt.summary = "Radar Detectado NO hay CANALES DISPONIBLES" '
- action: add_eventmapping
  eventClassKey: brzaccVLDFSRadarDetectedTRAP
  eventName: brzaccVLDFSRadarDetectedTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: DFS: Applicable to AU/BU only.A trap indicating that a radar\
    \ was detected.  Variables:  1: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: DFS: Applicable to AU/BU only.A trap indicating that\
    \ a radar was detected.  Variables:  1: brzaccVLTrapSequenceNumber\t   Syntax=\
    \ Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Radar detectado" '
- action: add_eventmapping
  eventClassKey: brzaccVLDisassociateAllStationsTRAP
  eventName: brzaccVLDisassociateAllStationsTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only.A trap indicating that all stations\
    \ were disassociated.  Variables:  1: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to AU/BU only.A trap indicating that all\
    \ stations were disassociated.  Variables:  1: brzaccVLTrapSequenceNumber\t  \
    \ Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: 'evt.severity = 4

    evt.summary = "Todos los clientes PERDIDOS" '
- action: add_eventmapping
  eventClassKey: brzaccVLEthBroadcastMulticastLimiterTRAP
  eventName: brzaccVLEthBroadcastMulticastLimiterTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to all units. The trap is sent if the ethernet\
    \ broadcast filter threshold is exceededand it contains the number of dropped\
    \ packets. Variables:  1: brzaccVLEthBroadcastThresholdExceeded\t   Syntax= Integer\
    \      Descr= Applicable to all units. The number of packets that are dropped\
    \ by the ethernet broadcast/multicast limiter.   2: brzaccVLTrapUnitMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.The MAC Address of the unit that is initiating the trap.   3: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to all units. The trap is sent if the ethernet\
    \ broadcast filter threshold is exceededand it contains the number of dropped\
    \ packets. Variables:  1: brzaccVLEthBroadcastThresholdExceeded\t   Syntax= Integer\
    \      Descr= Applicable to all units. The number of packets that are dropped\
    \ by the ethernet broadcast/multicast limiter.   2: brzaccVLTrapUnitMacAddr\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.The MAC Address of the unit that is initiating the trap.   3: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"Demasiados paquetes descartados\"\
    \ \nevt._action = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLLoadingStatusTRAP
  eventName: brzaccVLLoadingStatusTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to all units.A trap indicating that last FTP/TFTP\
    \ firmware loading process has been finished successfully or failed.  Variables:\
    \  1: brzaccVLTrapFtpOrTftpStatus\t   Syntax= Integer      Descr= Applicable to\
    \ all units.The status of the last FTP/TFTP loading procedure.   2: brzaccVLUnitMacAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.  Unit hardware MAC address.   3: brzaccVLTrapSequenceNumber\t   Syntax=\
    \ Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to all units.A trap indicating that last\
    \ FTP/TFTP firmware loading process has been finished successfully or failed.\
    \  Variables:  1: brzaccVLTrapFtpOrTftpStatus\t   Syntax= Integer      Descr=\
    \ Applicable to all units.The status of the last FTP/TFTP loading procedure. \
    \  2: brzaccVLUnitMacAddress\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.  Unit hardware MAC address.   3: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLParameterChangeTRAP
  eventName: brzaccVLParameterChangeTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only with SW version 5.0 or higher.This\
    \ trap is generated by AU/BU when a parameter from a groupwas changed. Also, if\
    \ an SU/RB parameter is changed and if the parameter is in ADB the Au/BU will\
    \ generate the trap for that SU/RB.brzaccVLTrapSequenceNumber\t  - trap sequence\
    \ numberbrzaccVLTrapUnitMacAddr\t\t  - MAC Address of the AU/BU if the parametr\
    \ was changed in AU/BU- MAC Address of the SU/RB if the parameter was changed\
    \ in SU/RBbrzaccVLTrapParameterGroupCode- Code of Parameter Group   Variables:\
    \  1: brzaccVLTrapUnitMacAddr\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.The MAC Address of the unit that is initiating\
    \ the trap.   2: brzaccVLTrapParameterGroupCode\t   Syntax= Integer      Descr=\
    \ Applicable to AU/BU only.The code of group parameter that was changed.   3:\
    \ brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable to AU/BU\
    \ only. Trap Variable indicating the sequence number of the last trap generated.\
    \ '"
  explanation: "'Long Descr.: Applicable to AU/BU only with SW version 5.0 or higher.This\
    \ trap is generated by AU/BU when a parameter from a groupwas changed. Also, if\
    \ an SU/RB parameter is changed and if the parameter is in ADB the Au/BU will\
    \ generate the trap for that SU/RB.brzaccVLTrapSequenceNumber\t  - trap sequence\
    \ numberbrzaccVLTrapUnitMacAddr\t\t  - MAC Address of the AU/BU if the parametr\
    \ was changed in AU/BU- MAC Address of the SU/RB if the parameter was changed\
    \ in SU/RBbrzaccVLTrapParameterGroupCode- Code of Parameter Group   Variables:\
    \  1: brzaccVLTrapUnitMacAddr\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.The MAC Address of the unit that is initiating\
    \ the trap.   2: brzaccVLTrapParameterGroupCode\t   Syntax= Integer      Descr=\
    \ Applicable to AU/BU only.The code of group parameter that was changed.   3:\
    \ brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable to AU/BU\
    \ only. Trap Variable indicating the sequence number of the last trap generated.\
    \ '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLParameterChangedTRAP
  eventName: brzaccVLParameterChangedTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Starting with version 5.0, this trap is not generated.It\
    \ is replaced by brzaccVLParameterChangeTRAP.Applicable to all units. A trap indicating\
    \ a change in a CIR/MIR, IP Filter or VLAN parameter. Variables:  1: brzaccVLTrapParameterChanged\t\
    \   Syntax= Integer      Descr= Not applicable starting with version 5.0.Applicable\
    \ to all units.A modification to one of the parameters related to CIR/MIR,  IP\
    \ Filtering or VLAN.   2: brzaccVLTrapSequenceNumber\t   Syntax= Integer     \
    \ Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence number\
    \ of the last trap generated. '"
  explanation: "'Long Descr.: Starting with version 5.0, this trap is not generated.It\
    \ is replaced by brzaccVLParameterChangeTRAP.Applicable to all units. A trap indicating\
    \ a change in a CIR/MIR, IP Filter or VLAN parameter. Variables:  1: brzaccVLTrapParameterChanged\t\
    \   Syntax= Integer      Descr= Not applicable starting with version 5.0.Applicable\
    \ to all units.A modification to one of the parameters related to CIR/MIR,  IP\
    \ Filtering or VLAN.   2: brzaccVLTrapSequenceNumber\t   Syntax= Integer     \
    \ Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence number\
    \ of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLPowerUpFromReset
  eventName: brzaccVLPowerUpFromReset
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap indicating power up after Reset. Variables:\
    \  1: brzaccVLUnitMacAddress\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.  Unit hardware MAC address.   2: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  explanation: "'Long Descr.: An AU/BU trap indicating power up after Reset. Variables:\
    \  1: brzaccVLUnitMacAddress\t   Syntax= MacAddress  (Octet String) (SIZE(6))\
    \      Descr= Applicable to all units.  Unit hardware MAC address.   2: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "Power up after Reset" '
- action: add_eventmapping
  eventClassKey: brzaccVLPromiscuousModeTRAP
  eventName: brzaccVLPromiscuousModeTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: An AU/BU trap, indicating that the AU/BU In (On) Promiscuous\
    \ Mode or out (Off) Promiscuous Mode. Variables:  1: brzaccVLTrapToggle\t   Syntax=\
    \ Integer      Descr= Applicable to AU/BU only.An On/Off toggle status.   2: brzaccVLUnitMacAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.  Unit hardware MAC address.   3: brzaccVLTrapSequenceNumber\t   Syntax=\
    \ Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: An AU/BU trap, indicating that the AU/BU In (On) Promiscuous\
    \ Mode or out (Off) Promiscuous Mode. Variables:  1: brzaccVLTrapToggle\t   Syntax=\
    \ Integer      Descr= Applicable to AU/BU only.An On/Off toggle status.   2: brzaccVLUnitMacAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.  Unit hardware MAC address.   3: brzaccVLTrapSequenceNumber\t   Syntax=\
    \ Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nif  hasattr(evt, 'brzaccVLTrapToggle') :\n  if evt.brzaccVLTrapToggle\
    \ == \"1\":\n    evt.summary = \"Modo promiscuo activado/desactivado (On)\" \n\
    \  else:\n\tevt.severity = 0\n\tevt.summary = \"Modo promiscuo activado/desactivado\
    \ (Off)\"\n    \n    "
- action: add_eventmapping
  eventClassKey: brzaccVLRunTimeIPChangeTRAP
  eventName: brzaccVLRunTimeIPChangeTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only with SW version 5.0 or higher.This\
    \ trap is generated by AU/BU when the running IP of the unit was changed. Also,\
    \ if the running IP of an associated SU/RB is changed this trap willbe genarated\
    \ by AU/BU.brzaccVLTrapSequenceNumber\t  - trap sequence numberbrzaccVLTrapUnitMacAddr\t\
    \t  - MAC Address of the AU/BU if the running IPwas changed in AU/BU- MAC Address\
    \ of the SU/RB if the running IP was changed in SU/RBbrzaccVLTrapNewIP\t\t\t \
    \ - New IP of the unit. Variables:  1: brzaccVLTrapUnitMacAddr\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to all units.The MAC Address\
    \ of the unit that is initiating the trap.   2: brzaccVLTrapNewIP\t   Syntax=\
    \ IP Address      Descr= Applicable to AU/BU only.The code of group parameter\
    \ that was changed.   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr=\
    \ Apllicable to AU/BU only. Trap Variable indicating the sequence number of the\
    \ last trap generated. '"
  explanation: "'Long Descr.: Applicable to AU/BU only with SW version 5.0 or higher.This\
    \ trap is generated by AU/BU when the running IP of the unit was changed. Also,\
    \ if the running IP of an associated SU/RB is changed this trap willbe genarated\
    \ by AU/BU.brzaccVLTrapSequenceNumber\t  - trap sequence numberbrzaccVLTrapUnitMacAddr\t\
    \t  - MAC Address of the AU/BU if the running IPwas changed in AU/BU- MAC Address\
    \ of the SU/RB if the running IP was changed in SU/RBbrzaccVLTrapNewIP\t\t\t \
    \ - New IP of the unit. Variables:  1: brzaccVLTrapUnitMacAddr\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to all units.The MAC Address\
    \ of the unit that is initiating the trap.   2: brzaccVLTrapNewIP\t   Syntax=\
    \ IP Address      Descr= Applicable to AU/BU only.The code of group parameter\
    \ that was changed.   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr=\
    \ Apllicable to AU/BU only. Trap Variable indicating the sequence number of the\
    \ last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLSUassociatedAUTRAP
  eventName: brzaccVLSUassociatedAUTRAP
  eventPath: /CYIIG/WimaxAlvarion/asociados
  example: "'Long Descr.: An AU/BU trap indicating a new association with an SU/RB.\
    \ Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress  (Octet String)\
    \ (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address.   2: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  explanation: "'Long Descr.: An AU/BU trap indicating a new association with an SU/RB.\
    \ Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress  (Octet String)\
    \ (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address.   2: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: "evt.summary = \"Cliente asociado\" \n#evt.component = evt.brzaccVLTrapSUMacAddr\n\
    #se pone severity debug para permitir duplicaciones de esta alarma\nevt.severity\
    \ = 1\n"
- action: add_eventmapping
  eventClassKey: brzaccVLSUassociatedTRAP
  eventName: brzaccVLSUassociatedTRAP
  eventPath: /CYIIG/WimaxAlvarion/asociados
  example: "'Long Descr.: Starting with 5.0 this trap is not generated.An SU/RB trap\
    \ indicating association with an AU/BU. In addition to the MAC address information\
    \ of the AU/BU, the trap also includes information on the average SNR of frames\
    \ received from the AU/BU. Variables:  1: brzaccVLAssociatedAU\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to SU/RB only.  Associated\
    \ AU/BU MAC address. '"
  explanation: "'Long Descr.: Starting with 5.0 this trap is not generated.An SU/RB\
    \ trap indicating association with an AU/BU. In addition to the MAC address information\
    \ of the AU/BU, the trap also includes information on the average SNR of frames\
    \ received from the AU/BU. Variables:  1: brzaccVLAssociatedAU\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to SU/RB only.  Associated\
    \ AU/BU MAC address. '"
  sequence: 12
  transform: "evt.severity = 1\nevt.summary = \"equipo asociado\" \n"
- action: add_eventmapping
  eventClassKey: brzaccVLTelnetStatusTRAP
  eventName: brzaccVLTelnetStatusTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to all units.A trap indicating that a log-in\
    \ or log-out has been performed via Telnet. Includes the log-in access right and\
    \ the IP address of the PC performing Telnet. Variables:  1: brzaccVLTrapLog\t\
    \   Syntax= Integer      Descr= Applicable to all units.Login or logout to the\
    \ Monitor program via Telnet.   2: brzaccVLTrapTelnetUserIpAddress\t   Syntax=\
    \ IP Address      Descr= Applicable to all units.The IP address of a Telnet user.\
    \   3: brzaccVLTrapAccessRights\t   Syntax= Integer      Descr= Applicable to\
    \ all units.The access rights used for login.   4: brzaccVLTrapUnitMacAddr\t \
    \  Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.The MAC Address of the unit that is initiating the trap.   5: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to all units.A trap indicating that a log-in\
    \ or log-out has been performed via Telnet. Includes the log-in access right and\
    \ the IP address of the PC performing Telnet. Variables:  1: brzaccVLTrapLog\t\
    \   Syntax= Integer      Descr= Applicable to all units.Login or logout to the\
    \ Monitor program via Telnet.   2: brzaccVLTrapTelnetUserIpAddress\t   Syntax=\
    \ IP Address      Descr= Applicable to all units.The IP address of a Telnet user.\
    \   3: brzaccVLTrapAccessRights\t   Syntax= Integer      Descr= Applicable to\
    \ all units.The access rights used for login.   4: brzaccVLTrapUnitMacAddr\t \
    \  Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to all\
    \ units.The MAC Address of the unit that is initiating the trap.   5: brzaccVLTrapSequenceNumber\t\
    \   Syntax= Integer      Descr= Apllicable to AU/BU only. Trap Variable indicating\
    \ the sequence number of the last trap generated. '"
  sequence: 12
  transform: 'evt.severity = 2

    evt.summary = "NO FORMAT DEFINED"

    evt._action = ''history'''
- action: add_eventmapping
  eventClassKey: brzaccVLUnitTypeChangedTRAP
  eventName: brzaccVLUnitTypeChangedTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to BU/RB only.This trap is generated when the\
    \ user changes the type of the BreezeNET B unit.The RB can be converted in BU\
    \ or vice versa.The first variable of the trap is the unit MAC Address.The second\
    \ variable is the new type of the unit Variables:  1: brzaccVLTrapMACAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to BU/RB\
    \ only.The MAC address of the BNET B unit whose type has been changed   2: brzaccVLNewUnitTypeTrap\t\
    \   Syntax= Integer      Descr= Applicable to BU/RB only.The new type of the BNET\
    \ B unit.   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable\
    \ to AU/BU only. Trap Variable indicating the sequence number of the last trap\
    \ generated. '"
  explanation: "'Long Descr.: Applicable to BU/RB only.This trap is generated when\
    \ the user changes the type of the BreezeNET B unit.The RB can be converted in\
    \ BU or vice versa.The first variable of the trap is the unit MAC Address.The\
    \ second variable is the new type of the unit Variables:  1: brzaccVLTrapMACAddress\t\
    \   Syntax= MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to BU/RB\
    \ only.The MAC address of the BNET B unit whose type has been changed   2: brzaccVLNewUnitTypeTrap\t\
    \   Syntax= Integer      Descr= Applicable to BU/RB only.The new type of the BNET\
    \ B unit.   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable\
    \ to AU/BU only. Trap Variable indicating the sequence number of the last trap\
    \ generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLWLPrioritizationNotNotSupportedBySUTRAP
  eventName: brzaccVLWLPrioritizationNotNotSupportedBySUTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only.This trap is generated when an\
    \ SU/RB with a SW version below 4.0 that does not support Wireless Link Prioritization\
    \ is associated with an AU/BU with thw Wireless Link Prioritization Option enabled.\
    \ The first variable of the trap is the SU/RB MAC Address.The second variable\
    \ is the SW version of the SU/RB Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax=\
    \ MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB\
    \ MAC Address.   2: brzaccVLTrapSWVersion\t   Syntax= Display String      Descr=\
    \ The SW version of the SU that tries to associate with a station that has Wireless\
    \ Link Prioritization Enabled   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to AU/BU only.This trap is generated when\
    \ an SU/RB with a SW version below 4.0 that does not support Wireless Link Prioritization\
    \ is associated with an AU/BU with thw Wireless Link Prioritization Option enabled.\
    \ The first variable of the trap is the SU/RB MAC Address.The second variable\
    \ is the SW version of the SU/RB Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax=\
    \ MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB\
    \ MAC Address.   2: brzaccVLTrapSWVersion\t   Syntax= Display String      Descr=\
    \ The SW version of the SU that tries to associate with a station that has Wireless\
    \ Link Prioritization Enabled   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: brzaccVLWLPrioritizationNotSupportedBySUTRAP
  eventName: brzaccVLWLPrioritizationNotSupportedBySUTRAP
  eventPath: /CYIIG/WimaxAlvarion
  example: "'Long Descr.: Applicable to AU/BU only.This trap is generated when an\
    \ SU/RB with a SW version below 4.0 that does not support Wireless Link Prioritization\
    \ is associated with an AU/BU with thw Wireless Link Prioritization Option enabled.\
    \ The first variable of the trap is the SU/RB MAC Address.The second variable\
    \ is the SW version of the SU/RB Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax=\
    \ MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB\
    \ MAC Address.   2: brzaccVLTrapSWVersion\t   Syntax= Display String      Descr=\
    \ The SW version of the SU that tries to associate with a station that has Wireless\
    \ Link Prioritization Enabled   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  explanation: "'Long Descr.: Applicable to AU/BU only.This trap is generated when\
    \ an SU/RB with a SW version below 4.0 that does not support Wireless Link Prioritization\
    \ is associated with an AU/BU with thw Wireless Link Prioritization Option enabled.\
    \ The first variable of the trap is the SU/RB MAC Address.The second variable\
    \ is the SW version of the SU/RB Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax=\
    \ MacAddress  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB\
    \ MAC Address.   2: brzaccVLTrapSWVersion\t   Syntax= Display String      Descr=\
    \ The SW version of the SU that tries to associate with a station that has Wireless\
    \ Link Prioritization Enabled   3: brzaccVLTrapSequenceNumber\t   Syntax= Integer\
    \      Descr= Apllicable to AU/BU only. Trap Variable indicating the sequence\
    \ number of the last trap generated. '"
  sequence: 12
  transform: "evt.severity = 2\nevt.summary = \"NO FORMAT DEFINED\" \nevt._action\
    \ = \"history\""
- action: add_eventmapping
  eventClassKey: comFailTrap
  eventName: comFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Communication FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Communication FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: commonAlarmTrap
  eventName: commonAlarmTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Common AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Common AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: currLimRedTrap
  eventName: currLimRedTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Current Limit ReducedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Current Limit ReducedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: UnkwonLocalhostMessages_Drop
  eventPath: /LOCALHOST
  explanation: 'Elimina los eventos que llegan de zensyslog continuamente. Es un bug
    resgistrado en: https://jira.zenoss.com/browse/ZEN-15441'
  rule: evt.device.startswith('localhost')
  sequence: 10
  transform: "#if evt.device == \"localhost\" and evt.agent == \"zensyslog\" and evt.eventGroup\
    \ == \"syslog\": \nevt._action = \"drop\"\n#else:"
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping
  eventPath: /Heartbeat
  example: -- MARK --
  regex: -- MARK --
  sequence: 4
  zEvent_timeout: 1400
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping
  eventPath: /Net
  example: -Traceback= 80235E40 802D3EB4 80243CA8
  rule: getattr(evt,'facility',False)=='local7' and evt.summary.find('Traceback')>-1
  sequence: 3
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping
  eventPath: /Security/Login
  example: 1101379 03/17/2006 10:52:59.040 SEV=4 IKE/120 RPT=54919 10.1.2.3  Group
    [IPsecUsers] User [domain\username] PHASE 2 COMPLETED (msgid=ae41db32)
  explanation: \d+ \S+ \S+ SEV=\d+ (?P<component>\S+) RPT=\d+ \S+ (?P<summary>.*)
  regex: \d+ \S+ \S+ SEV=\d+ (?P<component>\S+) RPT=\d+ \S+  (?P<summary>Group \[(?P<secGroup>\S+)\]
    User \[(?P<username>\S+)\] PHASE 2 COMPLETED)
  sequence: 1
- action: add_eventmapping
  eventClassKey: defaultmapping
  eventName: defaultmapping_FileMaker
  eventPath: /Archive
  explanation: By Default map all FileMaker events to Archive and set severity = 2
  rule: getattr(evt,"component",False)=="FileMaker Server 7"
  sequence: 6
  zEventSeverity: 2
- action: add_eventmapping
  eventClassKey: dischargingTrap
  eventName: dischargingTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Battery is DischargingVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Battery is DischargingVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: distBattFuseFailTrap
  eventName: distBattFuseFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Distribution/Battery Fuse FailureVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Distribution/Battery Fuse FailureVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: distHighLoadTrap
  eventName: distHighLoadTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Distribution Load HighVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Distribution Load HighVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: distrFuseTrap
  eventName: distrFuseTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Distribution Fuse FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Distribution Fuse FailureVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: earthFailTrap
  eventName: earthFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Earth Failure AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Earth Failure AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 0'
- action: add_eventmapping
  eventClassKey: electrlLowTrap
  eventName: electrlLowTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Electrolyte LowVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Electrolyte LowVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 2'
- action: add_eventmapping
  eventClassKey: evtsys
  eventName: evtsys
  eventPath: /Win/evtsys
  example: 'Eventlog to Syslog Service Started: Version 3.4.1'
  explanation: All evtsys log messages except heartbeat go here
  regex: ^[^-]+
  sequence: 2
- action: add_eventmapping
  eventClassKey: externInput1Trap
  eventName: externInput1Trap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:External Input Trap1  - 2 Alarm, 1 ClearVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:External Input Trap1  - 2 Alarm, 1 ClearVariables:  1:\
    \ trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: externInput2Trap
  eventName: externInput2Trap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:External Input Trap2 - 2 Alarm, 1 ClearVariables:  1: externalInput2\t\
    \   Syntax=Integer     Descr=External Input-to-trap 2'"
  explanation: "'Long Descr.:External Input Trap2 - 2 Alarm, 1 ClearVariables:  1:\
    \ externalInput2\t   Syntax=Integer     Descr=External Input-to-trap 2'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: highBattTempTrap
  eventName: highBattTempTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:High Battery TemperatureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:High Battery TemperatureVariables:  1: trapString\t \
    \  Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 3

    evt.summary = "Temperatura baterias ALTA"'
- action: add_eventmapping
  eventClassKey: highLoadTrap
  eventName: highLoadTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:High LoadVariables:  1: trapString\t   Syntax=Display String\
    \     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format of trapString\
    \ is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2 statusData1\
    \ statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText is\
    \ set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:High LoadVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 2'
- action: add_eventmapping
  eventClassKey: highVoltTrap
  eventName: highVoltTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:High DC Voltage AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:High DC Voltage AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 5'
- action: add_eventmapping
  eventClassKey: intFuseTrap
  eventName: intFuseTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Internal Fuse FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Internal Fuse FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: loadBattDisconTrap
  eventName: loadBattDisconTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Load/Battery DisconnectedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Load/Battery DisconnectedVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 0

    evt.summary = "Bateria Baja"'
- action: add_eventmapping
  eventClassKey: loadDisconTrap
  eventName: loadDisconTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Load DisconnectedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Load DisconnectedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: lowVoltTrap
  eventName: lowVoltTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Low DC Voltage Alarm Variables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Low DC Voltage Alarm Variables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4

    evt.summary = "Bateria Baja"'
- action: add_eventmapping
  eventClassKey: mainsFailTrap
  eventName: mainsFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Mains Failure AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Mains Failure AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: oneTrap
  eventName: oneTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:One Trap containing status and Alarm info of the format:alarmData1\
    \ alarmData2 alarmData3 extraAlarmData1extraAlarmData2 statusData1 statusData2\
    \ statusData3externalInput1 externalInput2 comPCUVariables:  1: trapString\t \
    \  Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:One Trap containing status and Alarm info of the format:alarmData1\
    \ alarmData2 alarmData3 extraAlarmData1extraAlarmData2 statusData1 statusData2\
    \ statusData3externalInput1 externalInput2 comPCUVariables:  1: trapString\t \
    \  Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 0'
- action: add_eventmapping
  eventClassKey: ovShutdownTrap
  eventName: ovShutdownTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Overvoltage ShutdownVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Overvoltage ShutdownVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: partLoadDisconTrap
  eventName: partLoadDisconTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Partial Load DisconnectedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Partial Load DisconnectedVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: pcuComTrap
  eventName: pcuComTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:PCU/PCS Communication Fail - 2 Alarm, 1 ClearVariables: \
    \ 1: trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  explanation: "'Long Descr.:PCU/PCS Communication Fail - 2 Alarm, 1 ClearVariables:\
    \  1: trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: pcuDeactivTrap
  eventName: pcuDeactivTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:PCU DeactivatedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:PCU DeactivatedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: rectModRemTrap
  eventName: rectModRemTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Rectifier Module RemovedVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Rectifier Module RemovedVariables:  1: trapString\t \
    \  Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: rectifierFailTrap
  eventName: rectifierFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Rectifier FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Rectifier FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: snmp_linkDown
  eventName: snmp_linkDown
  eventPath: /Net/Link
  example: snmp trap snmp_linkDown
  explanation: has key for ifIndex for all traps.
  sequence: 1
  transform: "if_index_str = getattr(evt.details, \"ifIndex\", None)\nif if_index_str\
    \ is not None and device is not None:\n    if_index = int(if_index_str)\n    for\
    \ interface in device.os.interfaces():\n        if interface.ifindex == if_index:\n\
    \            evt.component = interface.id\n            break"
- action: add_eventmapping
  eventClassKey: snmp_linkUp
  eventName: snmp_linkUp
  eventPath: /Net/Link
  example: snmp trap snmp_linkUp
  explanation: has key for ifIndex for all traps.
  sequence: 1
  transform: "if_index_str = getattr(evt.details, \"ifIndex\", None)\nif if_index_str\
    \ is not None and device is not None:\n    if_index = int(if_index_str)\n    for\
    \ interface in device.os.interfaces():\n        if interface.ifindex == if_index:\n\
    \            evt.component = interface.id\n            break"
- action: add_eventmapping
  eventClassKey: symmFailTrap
  eventName: symmFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Symmetry Fault AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Symmetry Fault AlarmVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 3

    evt.summary = "Fallo SIMETRIA de baterias"'
- action: add_eventmapping
  eventClassKey: tempProbeTrap
  eventName: tempProbeTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Temperature Probe FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Temperature Probe FailureVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: tldcd
  eventName: tldcd
  eventPath: /HW/Backup/Robot
  example: '[ID 719803 daemon.error] TLD(0) Move_medium error'
  regex: daemon.error
  sequence: 1
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: tldd
  eventName: tldd
  eventPath: /HW/Backup/Robot
  example: '[ID 923197 daemon.error] TLD(0) drive 1 (device 0) is being DOWNED, status:
    Robotic dismount failure'
  regex: daemon.error
  sequence: 1
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: u1NormalTrap
  eventName: u1NormalTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:System output reference changed to NormalVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:System output reference changed to NormalVariables: \
    \ 1: trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 0

    evt.summary = "Funcionamiento en Modo NORMAL"'
- action: add_eventmapping
  eventClassKey: u2BoostTrap
  eventName: u2BoostTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:System output reference changed to BoostVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:System output reference changed to BoostVariables:  1:\
    \ trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 2

    evt.summary = "Funcionamiento en Modo BOOST"'
- action: add_eventmapping
  eventClassKey: u3TestTrap
  eventName: u3TestTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:System output reference changed to TestVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:System output reference changed to TestVariables:  1:\
    \ trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 2

    evt.summary = "Funcionamiento en Modo TEST"'
- action: add_eventmapping
  eventClassKey: u4SpareTrap
  eventName: u4SpareTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:System output reference changed to SpareVariables:  1: trapString\t\
    \   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap is set to 1\
    \ then the format of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:System output reference changed to SpareVariables:  1:\
    \ trapString\t   Syntax=Display String     Descr=Last Trap stringIf onlyOneTrap\
    \ is set to 1 then the format of trapString is:alarmData1 alarmData2 alarmData3\
    \ extraAlarmData1extraAlarmData2 statusData1 statusData2 statusData3externalInput1\
    \ externalInput2 comPCUIf includeText is set to 1 then the format:ahText ahEntryType\
    \ ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 2

    evt.summary = "Funcionamiento en Modo ESPERA"'
- action: add_eventmapping
  eventClassKey: upsOnBattery
  eventName: upsOnBattery
  eventPath: /HW/Power/UPS
  example: snmp trap upsOnBattery from 10.1.2.3
  sequence: 1
  transform: " \nevt.serverity = 4\nevt.summary = 'SIN RED'\n"
  zEventSeverity: 5
- action: add_eventmapping
  eventClassKey: urgentModFailTrap
  eventName: urgentModFailTrap
  eventPath: /CYIIG/enertel
  example: "'Long Descr.:Urgent Module FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  explanation: "'Long Descr.:Urgent Module FailureVariables:  1: trapString\t   Syntax=Display\
    \ String     Descr=Last Trap stringIf onlyOneTrap is set to 1 then the format\
    \ of trapString is:alarmData1 alarmData2 alarmData3 extraAlarmData1extraAlarmData2\
    \ statusData1 statusData2 statusData3externalInput1 externalInput2 comPCUIf includeText\
    \ is set to 1 then the format:ahText ahEntryType ahReason'"
  sequence: 12
  transform: 'if clear == 0: evt.severity = 4'
- action: add_eventmapping
  eventClassKey: vmd
  eventName: vmd
  eventPath: /HW/Backup
  example: '[ID 575278 daemon.error] terminating - the query with time failed because
    a limit was reached (184)'
  explanation: PROBLEM REGEX (was empty) -- limit this to just error events
  regex: daemon.error
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: StorageAgents_1215
  eventName: StorageAgents_1215
  eventPath: /HW/Store/FiberChannel
  example: 'Fibre Channel Controller Status Change. The Fibre Channel Controller in
    Slot 3 has a new status of 6. (Host controller status values: 1=other, 2=ok, 3=failed,
    4=shutdown, 5=connectionDegraded, 6=connectionFailed) [SNMP TRAP: 16028 in CPQFCA.MIB]'
  explanation: Server Lost connection to SAN.  For some reason, when a server reboots
    the port on the SAN switch sometimes gets hosed.
  resolution: 'Fail the Supervisor over to the Standby sup.  To do this, Login to
    the Switch through Cisco Device Manager (ie: http://10.1.2.3/cgi-bin/element-manager.jnlp).  Locate
    the Supervisor that is Active (the supervisors are the blades with the Mgmt ports
    on them).  Right click on the Active Supervisor and click Reset.  You will get
    a message telling you that this will reset the interfaces.  Click OK to proceed.  This
    only resets the management session that you are using.  It will not disrupt the
    FiberChannel network.  That will cause the Supervisor to failover to the other
    Sup blade.'
  sequence: 1
  zEventSeverity: 4
- action: add_eventmapping
  eventClassKey: brzaccVLAUdisassociatedTRAP
  eventName: brzaccVLAUdisassociatedTRAP
  eventPath: /CYIIG/WimaxAlvarion/asociados
  example: "'Long Descr.: An AU/BU trap indicating that an SU/RB has been disassociated\
    \ from the AU/BU. Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address.\
    \   2: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable to\
    \ AU/BU only. Trap Variable indicating the sequence number of the last trap generated.\
    \ '"
  explanation: "'Long Descr.: An AU/BU trap indicating that an SU/RB has been disassociated\
    \ from the AU/BU. Variables:  1: brzaccVLTrapSUMacAddr\t   Syntax= MacAddress\
    \  (Octet String) (SIZE(6))      Descr= Applicable to AU/BU only.SU/RB MAC Address.\
    \   2: brzaccVLTrapSequenceNumber\t   Syntax= Integer      Descr= Apllicable to\
    \ AU/BU only. Trap Variable indicating the sequence number of the last trap generated.\
    \ '"
  sequence: 12
  transform: "evt.summary = \"Cliente Perdido\" \n#evt.component = evt.brzaccVLTrapSUMacAddr\n\
    evt.severity = 3"
  zEventSeverity: 5
  zFlappingIntervalSeconds: 10

